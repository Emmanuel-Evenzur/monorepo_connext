/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  FulfillInterpreter,
  FulfillInterpreterInterface,
} from "../FulfillInterpreter";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "transactionManager",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "transactionId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address payable",
        name: "callTo",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "assetId",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address payable",
        name: "fallbackAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "callData",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "returnData",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    name: "Executed",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "transactionId",
        type: "bytes32",
      },
      {
        internalType: "address payable",
        name: "callTo",
        type: "address",
      },
      {
        internalType: "address",
        name: "assetId",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "fallbackAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "callData",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getTransactionManager",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561001957600080610016610076565b50505b506040516111413803806111418339818101604052602081101561004557600080610042610076565b50505b810190808051925060019150819050600061005e6100e1565b50505060601b6001600160601b031916608052610143565b632a2a7adb598160e01b8152600481016020815285602082015260005b868110156100ae578086015182820160400152602001610093565b506020828760640184336000905af158600e01573d6000803e3d6000fd5b3d6001141558600a015760016000f35b505050565b6322bd64c0598160e01b8152836004820152846024820152600081604483336000905af158600e01573d6000803e3d6000fd5b3d6001141558600a015760016000f35b60005b604081101561013e57600082820152602001610127565b505050565b60805160601c610fdc610165600039806101b452806101dc5250610fdc6000f3fe6080604052600436106100295760003560e01c806396f32fb814610037578063cf9a360414610071575b600080610034610ccb565b50505b34801561004c57600080610049610ccb565b50505b506100556101b2565b6040516001600160a01b03909116815260200160405180910390f35b610132600480360360c08110156100905760008061008d610ccb565b50505b8135916001600160a01b036020820135811692604083013582169260608101359092169160808101359181019060c0810160a08201356401000000008111156100e1576000806100de610ccb565b50505b8201836020820111156100fc576000806100f9610ccb565b50505b8035906020019184600183028401116401000000008311171561012757600080610124610ccb565b50505b5090925090506101d6565b604051821515815260406020820181815290820183818151815260200191508051906020019080838360005b8381101561017657808201518382015260200161015e565b50505050905090810190601f1680156101a35780820380516001836020036101000a031916815260200191505b50935050505060405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000090565b600060607f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165a61020d610d36565b6001600160a01b03161461025b5760405162461bcd60e51b8152602060048201526008602482015267234f544d3a30323760c01b604482015260640160405180910390610258610ccb565b50505b60006102668861043f565b90508061027857610278888a8861044c565b600060606102858b6104a9565b1561030f578a6001600160a01b0316836102a05760006102a2565b885b888860405180838380828437808301925050509250505060006040518083038185875a6102cd610d8b565b505050505050925050503d8060008114610303576040513d603f01601f191681016040523d815291503d6000602084013e610308565b606091505b5090925090505b8161032f5761031f8a8a8a6104be565b8261032f5761032f8a8c8a6104e5565b8b7fbf49bd2de448d90a19e0510ab1030fead50ebfc64a4f112ca42535ae79fbab798c8c8c8c8c8c888a6040516001600160a01b03808a1682528881166020830152871660408201526060810186905281151560c082015260e06080820181815290820185905260a082016101008301878780828437600083820152601f01601f19169091018481038352905085818151815260200191508051906020019080838360005b838110156103ec5780820151838201526020016103d4565b50505050905090810190601f1680156104195780820380516001836020036101000a031916815260200191505b509a505050505050505050505060405180910390a2909b909a5098505050505050505050565b6001600160a01b03161590565b6104558361043f565b156104995760405162461bcd60e51b815260206004820152600760248201526608d2504e8c0ccd60ca1b604482015260640160405180910390610496610ccb565b50505b6104a483838361053d565b505050565b600080826104b5610e76565b15159392505050565b6104c78361043f565b6104db576104d68383836106bf565b6104a4565b6104a482826106ca565b6104ee8361043f565b156105325760405162461bcd60e51b815260206004820152600760248201526608d1104e8c0ccd60ca1b60448201526064016040518091039061052f610ccb565b50505b6104a4838383610776565b600061065b82856001600160a01b031663dd62ed3e5a63996d79a5598160e01b8152602081600483336000905af158600e01573d6000803e3d6000fd5b3d6001141558600a015760016000f35b8051925060005b60408110156105a857600082820152602001610591565b505050876040516001600160e01b031960e085901b1681526001600160a01b0392831660048201529116602482015260440160206040518083038186806105ed610e76565b158015610602576000806105ff610ccb565b50505b505a61060c610ec2565b505050505015801561062b573d6000803e3d6000610628610ccb565b50505b505050506040513d602081101561064a57600080610647610ccb565b50505b810190808051939250506108ac9050565b90506106b98463095ea7b360e01b85846040516001600160a01b0390921660248301526044820152606401604051602081830303815290604052906001600160e01b0319166020820180516001600160e01b03169091179052610917565b50505050565b6104a48383836109d7565b6000826001600160a01b03168260405160006040518083038185875a6106ee610d8b565b505050505050925050503d8060008114610724576040513d603f01601f191681016040523d815291503d6000602084013e610729565b606091505b50509050806104a45760405162461bcd60e51b8152602060048201526008602482015267046a89c82746064760c31b60448201526064016040518091039061076f610ccb565b5050505050565b600061065b82604051606081016040526029808252610f896020830139866001600160a01b031663dd62ed3e5a63996d79a5598160e01b8152602081600483336000905af158600e01573d6000803e3d6000fd5b3d6001141558600a015760016000f35b8051925060005b60408110156107f8576000828201526020016107e1565b505050886040516001600160e01b031960e085901b1681526001600160a01b03928316600482015291166024820152604401602060405180830381868061083d610e76565b1580156108525760008061084f610ccb565b50505b505a61085c610ec2565b505050505015801561087b573d6000803e3d6000610878610ccb565b50505b505050506040513d602081101561089a57600080610897610ccb565b50505b8101908080519493925050610a339050565b60008282018381101561090e5760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f77000000000060448201526064016040518091039061090b610ccb565b50505b90505b92915050565b6000610962826040516040808201905260208082527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564908201526001600160a01b0386169190610ad8565b90506000815111156104a457602081018151602081101561098b57600080610988610ccb565b50505b81019080805192506104a49150505760405162461bcd60e51b815260040180806020018281038252602a815260200180610fb2602a91396040019150506040518091039061076f610ccb565b6104a48363a9059cbb60e01b84846040516001600160a01b0390921660248301526044820152606401604051602081830303815290604052906001600160e01b0319166020820180516001600160e01b03169091179052610917565b60008184841115610acb5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610a87578082015183820152602001610a6f565b50505050905090810190601f168015610ab45780820380516001836020036101000a031916815260200191505b509250505060405180910390610ac8610ccb565b50505b50508183035b9392505050565b6060610ae3846104a9565b610b3c5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640160405180910390610b39610ccb565b50505b600080856001600160a01b0316856040518082805190602001908083835b60208310610b795780518252601f199092019160209182019101610b5a565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865a610bb3610d8b565b5050505050509150503d8060008114610be8576040513d603f01601f191681016040523d815291503d6000602084013e610bed565b606091505b5091509150610bfd828286610c07565b9695505050505050565b60608315610c16575081610ad1565b600083511115610c375782518084602001610c2f610ccb565b505050610ad1565b8160405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610c81578082015183820152602001610c69565b50505050905090810190601f168015610cae5780820380516001836020036101000a031916815260200191505b509250505060405180910390610cc2610ccb565b50509392505050565b632a2a7adb598160e01b8152600481016020815285602082015260005b86811015610d03578086015182820160400152602001610ce8565b506020828760640184336000905af158600e01573d6000803e3d6000fd5b3d6001141558600a015760016000f35b505050565b6373509064598160e01b8152602081600483336000905af158600e01573d6000803e3d6000fd5b3d6001141558600a015760016000f35b8051935060005b60408110156104a457600082820152602001610d74565b6385979f76598160e01b8152610dbc565b8080831115610911575090919050565b8080831015610911575090919050565b836004820152846024820152606060448201528760648201526084810160005b89811015610df4578089015182820152602001610ddc565b506060828a60a40184336000905af158600e01573d6000803e3d6000fd5b3d6001141558600a015760016000f35b815160408301513d6000853e8c8c82606087013350600060045af15059610e498e3d610dac565b8d01610e558187610d9c565b5b82811015610e6a5760008152602001610e56565b50929d50505050505050565b638435035b598160e01b8152836004820152602081602483336000905af158600e01573d6000803e3d6000fd5b3d6001141558600a015760016000f35b80516000825293506020610d74565b638540661f598160e01b8152836004820152846024820152606060448201528660648201526084810160005b88811015610f06578088015182820152602001610eee565b506060828960a40184336000905af158600e01573d6000803e3d6000fd5b3d6001141558600a015760016000f35b815160408301513d6000853e8b8b82606087013350600060045af15059610f5b8d3d610dac565b8c01610f678187610d9c565b5b82811015610f7c5760008152602001610f68565b50929c5050505050505056fe5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564";

export class FulfillInterpreter__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    transactionManager: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<FulfillInterpreter> {
    return super.deploy(
      transactionManager,
      overrides || {}
    ) as Promise<FulfillInterpreter>;
  }
  getDeployTransaction(
    transactionManager: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(transactionManager, overrides || {});
  }
  attach(address: string): FulfillInterpreter {
    return super.attach(address) as FulfillInterpreter;
  }
  connect(signer: Signer): FulfillInterpreter__factory {
    return super.connect(signer) as FulfillInterpreter__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FulfillInterpreterInterface {
    return new utils.Interface(_abi) as FulfillInterpreterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FulfillInterpreter {
    return new Contract(address, _abi, signerOrProvider) as FulfillInterpreter;
  }
}
