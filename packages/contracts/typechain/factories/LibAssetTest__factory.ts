/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { LibAssetTest, LibAssetTestInterface } from "../LibAssetTest";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "assetId",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "decreaseERC20Allowance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "assetId",
        type: "address",
      },
    ],
    name: "getOwnBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "assetId",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "increaseERC20Allowance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "assetId",
        type: "address",
      },
    ],
    name: "isNativeAsset",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "assetId",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferAsset",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "assetId",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferNativeAsset",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610a38806100206000396000f3fe6080604052600436106100745760003560e01c80639db5dbe41161004e5780639db5dbe414610145578063a7d2fdf614610188578063b29fd859146101cd578063cad1b113146102105761007b565b806305e9686314610080578063439e2e45146100c75780637f0128b21461010c5761007b565b3661007b57005b600080fd5b34801561008c57600080fd5b506100b3600480360360208110156100a357600080fd5b50356001600160a01b0316610253565b604080519115158252519081900360200190f35b3480156100d357600080fd5b5061010a600480360360608110156100ea57600080fd5b506001600160a01b03813581169160208101359091169060400135610264565b005b34801561011857600080fd5b5061010a6004803603604081101561012f57600080fd5b506001600160a01b038135169060200135610274565b34801561015157600080fd5b5061010a6004803603606081101561016857600080fd5b506001600160a01b03813581169160208101359091169060400135610282565b34801561019457600080fd5b506101bb600480360360208110156101ab57600080fd5b50356001600160a01b031661028d565b60408051918252519081900360200190f35b3480156101d957600080fd5b5061010a600480360360608110156101f057600080fd5b506001600160a01b03813581169160208101359091169060400135610298565b34801561021c57600080fd5b5061010a6004803603606081101561023357600080fd5b506001600160a01b038135811691602081013590911690604001356102a3565b600061025e826102ae565b92915050565b61026f8383836102bb565b505050565b61027e82826102de565b5050565b61026f83838361036f565b600061025e8261037a565b61026f8383836103fb565b61026f83838361044b565b6001600160a01b03161590565b6102c4836102ae565b6102d8576102d383838361036f565b61026f565b61026f82825b6040516000906001600160a01b0384169083908381818185875af1925050503d8060008114610329576040519150601f19603f3d011682016040523d82523d6000602084013e61032e565b606091505b505090508061026f576040805162461bcd60e51b8152602060048201526008602482015267046a89c82746064760c31b604482015290519081900360640190fd5b61026f83838361049b565b6000816001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b1580156103c957600080fd5b505afa1580156103dd573d6000803e3d6000fd5b505050506040513d60208110156103f357600080fd5b505192915050565b610404836102ae565b15610440576040805162461bcd60e51b815260206004820152600760248201526608d2504e8c0ccd60ca1b604482015290519081900360640190fd5b61026f8383836104ed565b610454836102ae565b15610490576040805162461bcd60e51b815260206004820152600760248201526608d1104e8c0ccd60ca1b604482015290519081900360640190fd5b61026f8383836105de565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b17905261026f908490610680565b600061058382856001600160a01b031663dd62ed3e30876040518363ffffffff1660e01b815260040180836001600160a01b03168152602001826001600160a01b031681526020019250505060206040518083038186803b15801561055157600080fd5b505afa158015610565573d6000803e3d6000fd5b505050506040513d602081101561057b57600080fd5b505190610731565b604080516001600160a01b038616602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663095ea7b360e01b1790529091506105d8908590610680565b50505050565b6000610583826040518060600160405280602981526020016109b06029913960408051636eb1769f60e11b81523060048201526001600160a01b03888116602483015291519189169163dd62ed3e91604480820192602092909190829003018186803b15801561064d57600080fd5b505afa158015610661573d6000803e3d6000fd5b505050506040513d602081101561067757600080fd5b50519190610792565b60006106d5826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166108299092919063ffffffff16565b80519091501561026f578080602001905160208110156106f457600080fd5b505161026f5760405162461bcd60e51b815260040180806020018281038252602a8152602001806109d9602a913960400191505060405180910390fd5b60008282018381101561078b576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b600081848411156108215760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156107e65781810151838201526020016107ce565b50505050905090810190601f1680156108135780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b606061083484610943565b610885576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b600080856001600160a01b0316856040518082805190602001908083835b602083106108c25780518252601f1990920191602091820191016108a3565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114610924576040519150601f19603f3d011682016040523d82523d6000602084013e610929565b606091505b5091509150610939828286610949565b9695505050505050565b3b151590565b6060831561095857508161078b565b8251156109685782518084602001fd5b60405162461bcd60e51b81526020600482018181528451602484015284518593919283926044019190850190808383600083156107e65781810151838201526020016107ce56fe5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a2646970667358221220e3601df1927fa0bda050002aab288af7a9018884cfe4e27a7f9603c5720bb4c564736f6c63430007060033";

export class LibAssetTest__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<LibAssetTest> {
    return super.deploy(overrides || {}) as Promise<LibAssetTest>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): LibAssetTest {
    return super.attach(address) as LibAssetTest;
  }
  connect(signer: Signer): LibAssetTest__factory {
    return super.connect(signer) as LibAssetTest__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LibAssetTestInterface {
    return new utils.Interface(_abi) as LibAssetTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LibAssetTest {
    return new Contract(address, _abi, signerOrProvider) as LibAssetTest;
  }
}
