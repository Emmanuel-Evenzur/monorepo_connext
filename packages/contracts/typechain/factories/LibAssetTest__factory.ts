/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { LibAssetTest, LibAssetTestInterface } from "../LibAssetTest";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "assetId",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "decreaseERC20Allowance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "assetId",
        type: "address",
      },
    ],
    name: "getOwnBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "assetId",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "increaseERC20Allowance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "assetId",
        type: "address",
      },
    ],
    name: "isNativeAsset",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "assetId",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferAsset",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "assetId",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferNativeAsset",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610a23806100206000396000f3fe6080604052600436106100745760003560e01c80639db5dbe41161004e5780639db5dbe4146100f7578063a7d2fdf614610117578063b29fd85914610145578063cad1b1131461016557600080fd5b806305e9686314610080578063439e2e45146100b55780637f0128b2146100d757600080fd5b3661007b57005b600080fd5b34801561008c57600080fd5b506100a061009b366004610863565b610185565b60405190151581526020015b60405180910390f35b3480156100c157600080fd5b506100d56100d03660046108aa565b610199565b005b3480156100e357600080fd5b506100d56100f236600461087f565b6101a9565b34801561010357600080fd5b506100d56101123660046108ea565b6101b7565b34801561012357600080fd5b50610137610132366004610863565b6101c2565b6040519081526020016100ac565b34801561015157600080fd5b506100d56101603660046108ea565b6101cd565b34801561017157600080fd5b506100d56101803660046108ea565b6101d8565b60006001600160a01b038216155b92915050565b6101a48383836101e3565b505050565b6101b38282610203565b5050565b6101a4838383610296565b6000610193826102a1565b6101a4838383610335565b6101a4838383610380565b6001600160a01b038316156101fd576101a4838383610296565b6101a482825b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114610250576040519150601f19603f3d011682016040523d82523d6000602084013e610255565b606091505b50509050806101a45760405162461bcd60e51b8152602060048201526008602482015267046a89c82746064760c31b60448201526064015b60405180910390fd5b6101a48383836103cb565b60006001600160a01b0382161561032e576040516370a0823160e01b81523060048201526001600160a01b038316906370a082319060240160206040518083038186803b1580156102f157600080fd5b505afa158015610305573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610329919061091e565b610193565b4792915050565b6001600160a01b0383166103755760405162461bcd60e51b815260206004820152600760248201526608d2504e8c0ccd60ca1b604482015260640161028d565b6101a483838361042e565b6001600160a01b0383166103c05760405162461bcd60e51b815260206004820152600760248201526608d1104e8c0ccd60ca1b604482015260640161028d565b6101a48383836104f5565b6040516001600160a01b0383166024820152604481018290526101a490849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610617565b604051636eb1769f60e11b81523060048201526001600160a01b038381166024830152600091839186169063dd62ed3e9060440160206040518083038186803b15801561047a57600080fd5b505afa15801561048e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104b2919061091e565b6104bc9190610985565b6040516001600160a01b0385166024820152604481018290529091506104ef90859063095ea7b360e01b906064016103f7565b50505050565b604051636eb1769f60e11b81523060048201526001600160a01b0383811660248301526000919085169063dd62ed3e9060440160206040518083038186803b15801561054057600080fd5b505afa158015610554573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610578919061091e565b9050818110156105dc5760405162461bcd60e51b815260206004820152602960248201527f5361666545524332303a2064656372656173656420616c6c6f77616e63652062604482015268656c6f77207a65726f60b81b606482015260840161028d565b6040516001600160a01b0384166024820152828203604482018190529061061090869063095ea7b360e01b906064016103f7565b5050505050565b600061066c826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166106e99092919063ffffffff16565b8051909150156101a4578080602001905181019061068a91906108fe565b6101a45760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161028d565b60606106f88484600085610702565b90505b9392505050565b6060824710156107635760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161028d565b843b6107b15760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161028d565b600080866001600160a01b031685876040516107cd9190610936565b60006040518083038185875af1925050503d806000811461080a576040519150601f19603f3d011682016040523d82523d6000602084013e61080f565b606091505b509150915061081f82828661082a565b979650505050505050565b606083156108395750816106fb565b8251156108495782518084602001fd5b8160405162461bcd60e51b815260040161028d9190610952565b600060208284031215610874578081fd5b81356106fb816109d5565b60008060408385031215610891578081fd5b823561089c816109d5565b946020939093013593505050565b6000806000606084860312156108be578081fd5b83356108c9816109d5565b925060208401356108d9816109d5565b929592945050506040919091013590565b6000806000606084860312156108be578283fd5b60006020828403121561090f578081fd5b815180151581146106fb578182fd5b60006020828403121561092f578081fd5b5051919050565b600082516109488184602087016109a9565b9190910192915050565b60208152600082518060208401526109718160408501602087016109a9565b601f01601f19169190910160400192915050565b600082198211156109a457634e487b7160e01b81526011600452602481fd5b500190565b60005b838110156109c45781810151838201526020016109ac565b838111156104ef5750506000910152565b6001600160a01b03811681146109ea57600080fd5b5056fea2646970667358221220f60aebf632666a75cffc60b9f09fea7858acb8aa213ace53736accd5362764db64736f6c63430008040033";

export class LibAssetTest__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<LibAssetTest> {
    return super.deploy(overrides || {}) as Promise<LibAssetTest>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): LibAssetTest {
    return super.attach(address) as LibAssetTest;
  }
  connect(signer: Signer): LibAssetTest__factory {
    return super.connect(signer) as LibAssetTest__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LibAssetTestInterface {
    return new utils.Interface(_abi) as LibAssetTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LibAssetTest {
    return new Contract(address, _abi, signerOrProvider) as LibAssetTest;
  }
}
