/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Counter, CounterInterface } from "../Counter";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "count",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "increment",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "assetId",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "incrementAndSend",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "value",
        type: "bool",
      },
    ],
    name: "setShouldRevert",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "shouldRevert",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052600060015534801561001557600080fd5b506000805460ff191690556106ed8061002f6000396000f3fe60806040526004361061004a5760003560e01c806306661abd1461004f5780636813d78714610076578063d09de08a146100a4578063d2eee78a146100b9578063d3072d82146100ef575b600080fd5b34801561005b57600080fd5b50610064610118565b60408051918252519081900360200190f35b34801561008257600080fd5b506100a26004803603602081101561009957600080fd5b5035151561011e565b005b3480156100b057600080fd5b506100a2610131565b6100a2600480360360608110156100cf57600080fd5b506001600160a01b03813581169160208101359091169060400135610193565b3480156100fb57600080fd5b5061010461025b565b604080519115158252519081900360200190f35b60015481565b6000805460ff1916911515919091179055565b60005460ff1615610189576040805162461bcd60e51b815260206004820152601f60248201527f696e6372656d656e743a2073686f756c64526576657274206973207472756500604482015290519081900360640190fd5b6001805481019055565b61019c83610264565b156101e4578034146101df5760405162461bcd60e51b815260040180806020018281038252602481526020018061066a6024913960400191505060405180910390fd5b610243565b3415610237576040805162461bcd60e51b815260206004820152601e60248201527f696e6372656d656e74416e6453656e643a204554485f574954485f4552430000604482015290519081900360640190fd5b61024383333084610271565b61024b610131565b610256838383610283565b505050565b60005460ff1681565b6001600160a01b03161590565b61027d848484846102aa565b50505050565b61028c83610264565b6102a05761029b838383610304565b610256565b610256828261030f565b604080516001600160a01b0380861660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b17905261027d9085906103a0565b610256838383610451565b6040516000906001600160a01b0384169083908381818185875af1925050503d806000811461035a576040519150601f19603f3d011682016040523d82523d6000602084013e61035f565b606091505b5050905080610256576040805162461bcd60e51b8152602060048201526008602482015267046a89c82746064760c31b604482015290519081900360640190fd5b60006103f5826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166104a39092919063ffffffff16565b8051909150156102565780806020019051602081101561041457600080fd5b50516102565760405162461bcd60e51b815260040180806020018281038252602a81526020018061068e602a913960400191505060405180910390fd5b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526102569084906103a0565b60606104ae846105bf565b6104ff576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b600080856001600160a01b0316856040518082805190602001908083835b6020831061053c5780518252601f19909201916020918201910161051d565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d806000811461059e576040519150601f19603f3d011682016040523d82523d6000602084013e6105a3565b606091505b50915091506105b38282866105c5565b925050505b9392505050565b3b151590565b606083156105d45750816105b8565b8251156105e45782518084602001fd5b8160405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561062e578181015183820152602001610616565b50505050905090810190601f16801561065b5780820380516001836020036101000a031916815260200191505b509250505060405180910390fdfe696e6372656d656e74416e6453656e643a20494e56414c49445f4554485f414d4f554e545361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a26469706673582212207576e0384febf70f53288c54bb656993374d00b980ee07aa7bc282ab00fdcb0864736f6c63430007060033";

export class Counter__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Counter> {
    return super.deploy(overrides || {}) as Promise<Counter>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Counter {
    return super.attach(address) as Counter;
  }
  connect(signer: Signer): Counter__factory {
    return super.connect(signer) as Counter__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CounterInterface {
    return new utils.Interface(_abi) as CounterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Counter {
    return new Contract(address, _abi, signerOrProvider) as Counter;
  }
}
