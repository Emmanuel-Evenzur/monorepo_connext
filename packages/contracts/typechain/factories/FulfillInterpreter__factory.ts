/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  FulfillInterpreter,
  FulfillInterpreterInterface,
} from "../FulfillInterpreter";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "transactionManager",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "transactionId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address payable",
        name: "callTo",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "assetId",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address payable",
        name: "fallbackAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "callData",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "returnData",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    name: "Executed",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "transactionId",
        type: "bytes32",
      },
      {
        internalType: "address payable",
        name: "callTo",
        type: "address",
      },
      {
        internalType: "address",
        name: "assetId",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "fallbackAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "callData",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getTransactionManager",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b50604051610b76380380610b768339818101604052602081101561003357600080fd5b505160016000556001600160601b031960609190911b1660805260805160601c610b0761006f6000398061017f52806101b05250610b076000f3fe6080604052600436106100295760003560e01c806396f32fb81461002e578063cf9a36041461005f575b600080fd5b34801561003a57600080fd5b5061004361017d565b604080516001600160a01b039092168252519081900360200190f35b6100fc600480360360c081101561007557600080fd5b8135916001600160a01b036020820135811692604083013582169260608101359092169160808101359181019060c0810160a08201356401000000008111156100bd57600080fd5b8201836020820111156100cf57600080fd5b803590602001918460018302840111640100000000831117156100f157600080fd5b5090925090506101a1565b60405180831515815260200180602001828103825283818151815260200191508051906020019080838360005b83811015610141578181015183820152602001610129565b50505050905090810190601f16801561016e5780820380516001836020036101000a031916815260200191505b50935050505060405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000090565b60006060336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461020d576040805162461bcd60e51b8152602060048201526008602482015267234f544d3a30323760c01b604482015290519081900360640190fd5b6000610218886103f5565b90508061022a5761022a888a88610402565b600060606102378b610457565b156102b3578a6001600160a01b031683610252576000610254565b885b8888604051808383808284376040519201945060009350909150508083038185875af1925050503d80600081146102a7576040519150601f19603f3d011682016040523d82523d6000602084013e6102ac565b606091505b5090925090505b816102d3576102c38a8a8a61045d565b826102d3576102d38a8c8a610484565b8b7fbf49bd2de448d90a19e0510ab1030fead50ebfc64a4f112ca42535ae79fbab798c8c8c8c8c8c888a60405180896001600160a01b03168152602001886001600160a01b03168152602001876001600160a01b031681526020018681526020018060200180602001841515815260200183810383528787828181526020019250808284376000838201819052601f909101601f191690920185810384528751815287516020918201939189019250908190849084905b838110156103a257818101518382015260200161038a565b50505050905090810190601f1680156103cf5780820380516001836020036101000a031916815260200191505b509a505050505050505050505060405180910390a2909b909a5098505050505050505050565b6001600160a01b03161590565b61040b836103f5565b15610447576040805162461bcd60e51b815260206004820152600760248201526608d2504e8c0ccd60ca1b604482015290519081900360640190fd5b6104528383836104d4565b505050565b3b151590565b610466836103f5565b61047a576104758383836105c5565b610452565b61045282826105d0565b61048d836103f5565b156104c9576040805162461bcd60e51b815260206004820152600760248201526608d1104e8c0ccd60ca1b604482015290519081900360640190fd5b610452838383610661565b600061056a82856001600160a01b031663dd62ed3e30876040518363ffffffff1660e01b815260040180836001600160a01b03168152602001826001600160a01b031681526020019250505060206040518083038186803b15801561053857600080fd5b505afa15801561054c573d6000803e3d6000fd5b505050506040513d602081101561056257600080fd5b505190610703565b604080516001600160a01b038616602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663095ea7b360e01b1790529091506105bf908590610764565b50505050565b610452838383610815565b6040516000906001600160a01b0384169083908381818185875af1925050503d806000811461061b576040519150601f19603f3d011682016040523d82523d6000602084013e610620565b606091505b5050905080610452576040805162461bcd60e51b8152602060048201526008602482015267046a89c82746064760c31b604482015290519081900360640190fd5b600061056a82604051806060016040528060298152602001610a7f6029913960408051636eb1769f60e11b81523060048201526001600160a01b03888116602483015291519189169163dd62ed3e91604480820192602092909190829003018186803b1580156106d057600080fd5b505afa1580156106e4573d6000803e3d6000fd5b505050506040513d60208110156106fa57600080fd5b50519190610867565b60008282018381101561075d576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b60006107b9826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166108fe9092919063ffffffff16565b805190915015610452578080602001905160208110156107d857600080fd5b50516104525760405162461bcd60e51b815260040180806020018281038252602a815260200180610aa8602a913960400191505060405180910390fd5b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052610452908490610764565b600081848411156108f65760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156108bb5781810151838201526020016108a3565b50505050905090810190601f1680156108e85780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b606061090984610457565b61095a576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b600080856001600160a01b0316856040518082805190602001908083835b602083106109975780518252601f199092019160209182019101610978565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d80600081146109f9576040519150601f19603f3d011682016040523d82523d6000602084013e6109fe565b606091505b5091509150610a0e828286610a18565b9695505050505050565b60608315610a2757508161075d565b825115610a375782518084602001fd5b60405162461bcd60e51b81526020600482018181528451602484015284518593919283926044019190850190808383600083156108bb5781810151838201526020016108a356fe5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a26469706673582212203fe613674bf2f177d569911417e6e5d6f751f4187e8517143fd8d6dfedc7799764736f6c63430007060033";

export class FulfillInterpreter__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    transactionManager: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<FulfillInterpreter> {
    return super.deploy(
      transactionManager,
      overrides || {}
    ) as Promise<FulfillInterpreter>;
  }
  getDeployTransaction(
    transactionManager: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(transactionManager, overrides || {});
  }
  attach(address: string): FulfillInterpreter {
    return super.attach(address) as FulfillInterpreter;
  }
  connect(signer: Signer): FulfillInterpreter__factory {
    return super.connect(signer) as FulfillInterpreter__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FulfillInterpreterInterface {
    return new utils.Interface(_abi) as FulfillInterpreterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FulfillInterpreter {
    return new Contract(address, _abi, signerOrProvider) as FulfillInterpreter;
  }
}
