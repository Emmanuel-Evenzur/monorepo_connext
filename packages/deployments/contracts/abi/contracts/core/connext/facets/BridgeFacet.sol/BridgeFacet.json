[
  "error AssetLogic__getTokenIndexFromStableSwapPool_notExist()",
  "error AssetLogic__handleOutgoingAsset_notNative()",
  "error AssetLogic__transferAssetToContract_feeOnTransferNotSupported()",
  "error BaseConnextFacet__getAdoptedAsset_notWhitelisted()",
  "error BaseConnextFacet__nonReentrant_reentrantCall()",
  "error BaseConnextFacet__onlyBridgeRouter_notBridgeRouter()",
  "error BaseConnextFacet__onlyOwner_notOwner()",
  "error BaseConnextFacet__onlyProposed_notProposedOwner()",
  "error BaseConnextFacet__whenNotPaused_paused()",
  "error BridgeFacet__addRemote_invalidDomain()",
  "error BridgeFacet__addSequencer_alreadyApproved()",
  "error BridgeFacet__bumpTransfer_valueIsZero()",
  "error BridgeFacet__executePortalTransfer_insufficientAmountWithdrawn()",
  "error BridgeFacet__execute_alreadyExecuted()",
  "error BridgeFacet__execute_alreadyReconciled()",
  "error BridgeFacet__execute_invalidRouterSignature()",
  "error BridgeFacet__execute_invalidSequencerSignature()",
  "error BridgeFacet__execute_maxRoutersExceeded()",
  "error BridgeFacet__execute_notApprovedForPortals()",
  "error BridgeFacet__execute_notReconciled()",
  "error BridgeFacet__execute_notSupportedRouter()",
  "error BridgeFacet__execute_notSupportedSequencer()",
  "error BridgeFacet__execute_unapprovedSender()",
  "error BridgeFacet__execute_wrongDomain()",
  "error BridgeFacet__forceUpdateSlippage_invalidSlippage()",
  "error BridgeFacet__forceUpdateSlippage_notDestination()",
  "error BridgeFacet__mustHaveRemote_destinationNotSupported()",
  "error BridgeFacet__onlyDelegate_notDelegate()",
  "error BridgeFacet__removeSequencer_notApproved()",
  "error BridgeFacet__xcall_emptyTo()",
  "error BridgeFacet__xcall_invalidSlippage()",
  "error BridgeFacet__xcall_nativeAssetNotSupported()",
  "error BridgeFacet__xcall_notSupportedAsset()",
  "event AavePortalMintUnbacked(bytes32 indexed,address indexed,address,uint256)",
  "event Executed(bytes32 indexed,address indexed,address indexed,tuple(tuple(uint32,uint32,uint32,address,address,bool,bytes,uint256,address,uint256,uint256,uint256,bytes32),address[],bytes[],address,bytes),address,uint256,address)",
  "event ExecutorUpdated(address,address,address)",
  "event ExternalCalldataExecuted(bytes32 indexed,bool,bytes)",
  "event RemoteAdded(uint32,address,address)",
  "event Send(address indexed,address indexed,uint32 indexed,bytes32,uint256,bool)",
  "event SequencerAdded(address,address)",
  "event SequencerRemoved(address,address)",
  "event SlippageUpdated(bytes32 indexed,uint256)",
  "event SponsorVaultUpdated(address,address,address)",
  "event TransferRelayerFeesUpdated(bytes32 indexed,uint256,address)",
  "event XCalled(bytes32 indexed,uint256 indexed,bytes32 indexed,tuple(uint32,uint32,uint32,address,address,bool,bytes,uint256,address,uint256,uint256,uint256,bytes32),address)",
  "function AAVE_REFERRAL_CODE() view returns (uint16)",
  "function DUST_AMOUNT() view returns (uint256)",
  "function addSequencer(address)",
  "function approvedSequencers(address) view returns (bool)",
  "function bumpTransfer(bytes32) payable",
  "function domain() view returns (uint32)",
  "function enrollCustom(uint32,bytes32,address)",
  "function enrollRemoteRouter(uint32,bytes32)",
  "function execute(tuple(tuple(uint32,uint32,uint32,address,address,bool,bytes,uint256,address,uint256,uint256,uint256,bytes32),address[],bytes[],address,bytes)) returns (bytes32)",
  "function forceUpdateSlippage(tuple(uint32,uint32,uint32,address,address,bool,bytes,uint256,address,uint256,uint256,uint256,bytes32),uint256)",
  "function nonce() view returns (uint256)",
  "function reconciledTransfers(bytes32) view returns (bool)",
  "function relayerFees(bytes32) view returns (uint256)",
  "function remote(uint32) view returns (address)",
  "function removeSequencer(address)",
  "function routedTransfers(bytes32) view returns (address[])",
  "function setXAppConnectionManager(address)",
  "function xcall(uint32,address,address,address,uint256,uint256,bytes) payable returns (bytes32)",
  "function xcallIntoLocal(uint32,address,address,address,uint256,uint256,bytes) payable returns (bytes32)"
]
