[
  "error AssetLogic__getTokenIndexFromStableSwapPool_notExist()",
  "error AssetLogic__handleOutgoingAsset_notNative()",
  "error AssetLogic__transferAssetToContract_feeOnTransferNotSupported()",
  "error BaseConnextFacet__nonReentrant_reentrantCall()",
  "error BaseConnextFacet__onlyBridgeRouter_notBridgeRouter()",
  "error BaseConnextFacet__onlyOwner_notOwner()",
  "error BaseConnextFacet__onlyProposed_notProposedOwner()",
  "error BaseConnextFacet__whenNotPaused_paused()",
  "error BridgeFacet__addConnextion_invalidDomain()",
  "error BridgeFacet__addSequencer_alreadyApproved()",
  "error BridgeFacet__bumpTransfer_valueIsZero()",
  "error BridgeFacet__executePortalTransfer_insufficientAmountWithdrawn()",
  "error BridgeFacet__execute_alreadyExecuted()",
  "error BridgeFacet__execute_alreadyReconciled()",
  "error BridgeFacet__execute_invalidRouterSignature()",
  "error BridgeFacet__execute_invalidSequencerSignature()",
  "error BridgeFacet__execute_maxRoutersExceeded()",
  "error BridgeFacet__execute_notApprovedForPortals()",
  "error BridgeFacet__execute_notReconciled()",
  "error BridgeFacet__execute_notSupportedRouter()",
  "error BridgeFacet__execute_notSupportedSequencer()",
  "error BridgeFacet__execute_unapprovedSender()",
  "error BridgeFacet__execute_wrongDomain()",
  "error BridgeFacet__handleExecuteTransaction_invalidSponsoredAmount()",
  "error BridgeFacet__removeSequencer_notApproved()",
  "error BridgeFacet__setExecutor_invalidExecutor()",
  "error BridgeFacet__xcall_destinationNotSupported()",
  "error BridgeFacet__xcall_emptyToOrRecovery()",
  "error BridgeFacet__xcall_invalidSlippageTol()",
  "error BridgeFacet__xcall_missingAgent()",
  "error BridgeFacet__xcall_nativeAssetNotSupported()",
  "error BridgeFacet__xcall_notSupportedAsset()",
  "event AavePortalMintUnbacked(bytes32 indexed,address indexed,address,uint256)",
  "event ConnextionAdded(uint32,address,address)",
  "event Executed(bytes32 indexed,address indexed,tuple(tuple(address,bytes,uint32,uint32,address,address,bool,uint256),address,address[],bytes[],address,bytes,uint256,uint256,address),address,uint256,address)",
  "event ExecutorUpdated(address,address,address)",
  "event SequencerAdded(address,address)",
  "event SequencerRemoved(address,address)",
  "event TransferRelayerFeesUpdated(bytes32 indexed,uint256,address)",
  "event XCalled(bytes32 indexed,uint256 indexed,bytes32 indexed,tuple(tuple(address,bytes,uint32,address,address,uint256),address,uint256,uint256),address,uint256,address)",
  "event XCalledLocal(bytes32 indexed,uint256 indexed,bytes32 indexed,tuple(tuple(address,bytes,uint32,address,address,uint256),address,uint256,uint256),address,uint256,address)",
  "function AAVE_REFERRAL_CODE() view returns (uint16)",
  "function addConnextion(uint32,address)",
  "function addSequencer(address)",
  "function approvedSequencers(address) view returns (bool)",
  "function bumpTransfer(bytes32) payable",
  "function connextion(uint32) view returns (address)",
  "function domain() view returns (uint32)",
  "function execute(tuple(tuple(address,bytes,uint32,uint32,address,address,bool,uint256),address,address[],bytes[],address,bytes,uint256,uint256,address)) returns (bytes32)",
  "function executor() view returns (address)",
  "function nonce() view returns (uint256)",
  "function reconciledTransfers(bytes32) view returns (bool)",
  "function relayerFees(bytes32) view returns (uint256)",
  "function removeSequencer(address)",
  "function routedTransfers(bytes32) view returns (address[])",
  "function setExecutor(address)",
  "function xcall(tuple(tuple(address,bytes,uint32,address,address,uint256),address,uint256,uint256)) payable returns (bytes32)",
  "function xcallLocal(tuple(tuple(address,bytes,uint32,address,address,uint256),address,uint256,uint256)) payable returns (bytes32)"
]
