/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  NomadFacet,
  NomadFacetInterface,
} from "../../../../../contracts/core/connext/facets/NomadFacet";

const _abi = [
  {
    inputs: [],
    name: "BaseConnextFacet__getAdoptedAsset_notWhitelisted",
    type: "error",
  },
  {
    inputs: [],
    name: "BaseConnextFacet__nonReentrant_reentrantCall",
    type: "error",
  },
  {
    inputs: [],
    name: "BaseConnextFacet__onlyBridgeRouter_notBridgeRouter",
    type: "error",
  },
  {
    inputs: [],
    name: "BaseConnextFacet__onlyOwner_notOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "BaseConnextFacet__onlyProposed_notProposedOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "BaseConnextFacet__whenNotPaused_paused",
    type: "error",
  },
  {
    inputs: [],
    name: "NomadFacet__handle_notTransfer",
    type: "error",
  },
  {
    inputs: [],
    name: "NomadFacet__onlyRemoteRouter_notRemote",
    type: "error",
  },
  {
    inputs: [],
    name: "NomadFacet__onlyReplica_notReplica",
    type: "error",
  },
  {
    inputs: [],
    name: "NomadFacet__reconcile_alreadyReconciled",
    type: "error",
  },
  {
    inputs: [],
    name: "NomadFacet__reconcile_noPortalRouter",
    type: "error",
  },
  {
    inputs: [],
    name: "NomadFacet__reconcile_notConnext",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint64",
        name: "originAndNonce",
        type: "uint64",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "liquidityProvider",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Receive",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "transferId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "originDomain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "routers",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "Reconciled",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_origin",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "_nonce",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "_sender",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes",
      },
    ],
    name: "handle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611483806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063ab2dc3f514610030575b600080fd5b61004361003e366004611158565b610045565b005b61004e33610145565b61006b57604051631b2b32db60e31b815260040160405180910390fd5b838261007782826101ba565b6100945760405163592270ff60e11b815260040160405180910390fd5b60006100ae6100a385836101e4565b62ffffff1916610208565b905060006100c162ffffff198316610221565b905060006100d462ffffff198416610256565b90506100e562ffffff1982166102ae565b610101576040516213811d60e61b815260040160405180910390fd5b600061010f8a8a85856102bb565b90506101398a8261012562ffffff1986166105af565b61013462ffffff1987166105c4565b6105d9565b50505050505050505050565b602754604051635190bc5360e01b81526001600160a01b0383811660048301526000921690635190bc5390602401602060405180830381865afa158015610190573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101b49190611234565b92915050565b63ffffffff8216600090815260126020526040812054821480156101dd57508115155b9392505050565b8151600090602084016101ff64ffffffffff8516828461086c565b95945050505050565b60006101b4610216836108b3565b62ffffff19166108e5565b6000816002610238815b62ffffff19841690610945565b5061024e62ffffff198516600060246001610a1e565b949350505050565b60008160026102648161022b565b50600061027f6024601887901c6001600160601b0316611282565b9050600061028c86610a8e565b60ff1690506102a462ffffff19871660248484610a1e565b9695505050505050565b60006101b4826003610aa3565b60045460009064010000000090046001600160a01b031663b869d89a6102e662ffffff198616610b02565b6102f562ffffff198716610b24565b6040516001600160e01b031960e085901b16815263ffffffff92909216600483015260248201526044016020604051808303816000875af115801561033e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103629190611299565b9050600061037562ffffff1984166105af565b9050806000036103ef57306001600160a01b03831667ffffffff00000000602089901b1663ffffffff88161760408051600081526020810186905267ffffffffffffffff92909216917f9f9a97db84f39202ca3b409b63f7ccf7d3fd810e176573c7483088b6f181bbbb910160405180910390a45061024e565b6004805460405163c86415cb60e01b81526001600160a01b03858116938201939093526401000000009091049091169063c86415cb90602401602060405180830381865afa158015610445573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104699190611234565b61053c576040516340c10f1960e01b8152306004820152602481018290526001600160a01b038316906340c10f1990604401600060405180830381600087803b1580156104b557600080fd5b505af11580156104c9573d6000803e3d6000fd5b50505050816001600160a01b031663cc2ab7c76104eb8562ffffff1916610b46565b6040518263ffffffff1660e01b815260040161050991815260200190565b600060405180830381600087803b15801561052357600080fd5b505af1158015610537573d6000803e3d6000fd5b505050505b306001600160a01b03831667ffffffff00000000602089901b1663ffffffff88161760408051600081526020810186905267ffffffffffffffff92909216917f9f9a97db84f39202ca3b409b63f7ccf7d3fd810e176573c7483088b6f181bbbb910160405180910390a450949350505050565b60006101b462ffffff19831660016020610b5b565b60006101b462ffffff19831660416020610b8b565b60008181526009602052604090205460ff161561060957604051630b7907a560e11b815260040160405180910390fd5b6000818152600960209081526040808320805460ff19166001179055600a82528083208054825181850281018501909352808352919290919083018282801561067b57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161065d575b505050600085815260256020908152604080832054602490925282205494955090936106aa93509091506112c2565b825190915081158015906106bf575080600114155b156106dd57604051636c32bf4760e11b815260040160405180910390fd5b80156108235760006106ef82876112f0565b905060005b6106ff600184611282565b81101561078757816000600b01600087848151811061072057610720611304565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060008a6001600160a01b03166001600160a01b03168152602001908152602001600020600082825461077a91906112c2565b90915550506001016106f4565b506000610794838861131a565b61079e90836112c2565b905080600b6000876107b1600188611282565b815181106107c1576107c1611304565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060008a6001600160a01b03166001600160a01b03168152602001908152602001600020600082825461081b91906112c2565b909155505050505b837f0e5f1128fa87ef75539a5e012b42695000db91072e7500fb2723ccbb37d0803c888589893360405161085b95949392919061132e565b60405180910390a250505050505050565b60008061087983856112c2565b9050604051811115610889575060005b8060000361089e5762ffffff199150506101dd565b5050606092831b9190911790911b1760181b90565b60006108be82610ce7565b156108db576301000000600160d81b038216600160d91b176101b4565b62ffffff196101b4565b60006108f082610d0a565b6109415760405162461bcd60e51b815260206004820152601960248201527f56616c696469747920617373657274696f6e206661696c65640000000000000060448201526064015b60405180910390fd5b5090565b60006109518383610d47565b610a175760006109706109648560d81c90565b64ffffffffff16610d6a565b91505060006109858464ffffffffff16610d6a565b6040517f5479706520617373657274696f6e206661696c65642e20476f7420307800000060208201526001600160b01b031960b086811b8216603d8401526c05c408af0e0cac6e8cac84060f609b1b604784015283901b16605482015290925060009150605e0160405160208183030381529060405290508060405162461bcd60e51b815260040161093891906113ac565b5090919050565b600080610a348660781c6001600160601b031690565b6001600160601b03169050610a4886610e18565b84610a5387846112c2565b610a5d91906112c2565b1115610a705762ffffff1991505061024e565b610a7a85826112c2565b90506102a48364ffffffffff16828661086c565b60006101b462ffffff19831660246001610b5b565b6000816003811115610ab757610ab7611256565b60ff16610ac384610e51565b60ff161480156101dd5750816003811115610ae057610ae0611256565b610ae984610e65565b6003811115610afa57610afa611256565b149392505050565b6000816001610b108161022b565b5061024e62ffffff19851660006004610b5b565b6000816001610b328161022b565b5061024e62ffffff19851660046020610b8b565b60006101b462ffffff19831660216020610b8b565b6000610b68826020611401565b610b73906008611424565b60ff16610b81858585610b8b565b901c949350505050565b60008160ff16600003610ba0575060006101dd565b610bb38460181c6001600160601b031690565b6001600160601b0316610bc960ff8416856112c2565b1115610c2d57610c14610be58560781c6001600160601b031690565b6001600160601b0316610c018660181c6001600160601b031690565b6001600160601b0316858560ff16610e80565b60405162461bcd60e51b815260040161093891906113ac565b60208260ff161115610ca75760405162461bcd60e51b815260206004820152603a60248201527f54797065644d656d566965772f696e646578202d20417474656d70746564207460448201527f6f20696e646578206d6f7265207468616e2033322062797465730000000000006064820152608401610938565b600882026000610cc08660781c6001600160601b031690565b6001600160601b031690506000600160ff1b60001984011d91909501511695945050505050565b6000601882901c6001600160601b0316610d03606160246112c2565b1492915050565b6000610d168260d81c90565b64ffffffffff1664ffffffffff03610d3057506000919050565b6000610d3b83610e18565b60405110199392505050565b60008164ffffffffff16610d5b8460d81c90565b64ffffffffff16149392505050565b600080601f5b600f8160ff161115610dbf576000610d89826008611424565b60ff1685901c9050610d9a81610faa565b61ffff16841793508160ff16601014610db557601084901b93505b5060001901610d70565b50600f5b60ff8160ff161015610e12576000610ddc826008611424565b60ff1685901c9050610ded81610faa565b61ffff16831792508160ff16600014610e0857601083901b92505b5060001901610dc3565b50915091565b6000610e2d8260181c6001600160601b031690565b610e408360781c6001600160601b031690565b016001600160601b03169050919050565b60006101b462ffffff198316826001610b5b565b600060d882901c60ff1660038111156101b4576101b4611256565b60606000610e8d86610d6a565b9150506000610e9b86610d6a565b9150506000610ea986610d6a565b9150506000610eb786610d6a565b604080517f54797065644d656d566965772f696e646578202d204f76657272616e20746865602082015274040ecd2caee5c40a6d8d2c6ca40d2e640c2e84060f605b1b818301526001600160d01b031960d098891b811660558301526e040eed2e8d040d8cadccee8d04060f608b1b605b830181905297891b8116606a8301527f2e20417474656d7074656420746f20696e646578206174206f666673657420306070830152600f60fb1b609083015295881b861660918201526097810196909652951b90921660a68401525050601760f91b60ac8201528151808203608d01815260ad90910190915295945050505050565b6000610fbc60048360ff16901c610fdc565b60ff1661ffff919091161760081b610fd382610fdc565b60ff1617919050565b600060f08083179060ff82169003610ff75750603092915050565b8060ff1660f10361100b5750603192915050565b8060ff1660f20361101f5750603292915050565b8060ff1660f3036110335750603392915050565b8060ff1660f4036110475750603492915050565b8060ff1660f50361105b5750603592915050565b8060ff1660f60361106f5750603692915050565b8060ff1660f7036110835750603792915050565b8060ff1660f8036110975750603892915050565b8060ff1660f9036110ab5750603992915050565b8060ff1660fa036110bf5750606192915050565b8060ff1660fb036110d35750606292915050565b8060ff1660fc036110e75750606392915050565b8060ff1660fd036110fb5750606492915050565b8060ff1660fe0361110f5750606592915050565b8060ff1660ff036111235750606692915050565b50919050565b803563ffffffff8116811461113d57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b6000806000806080858703121561116e57600080fd5b61117785611129565b935061118560208601611129565b925060408501359150606085013567ffffffffffffffff808211156111a957600080fd5b818701915087601f8301126111bd57600080fd5b8135818111156111cf576111cf611142565b604051601f8201601f19908116603f011681019083821181831017156111f7576111f7611142565b816040528281528a602084870101111561121057600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b60006020828403121561124657600080fd5b815180151581146101dd57600080fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000828210156112945761129461126c565b500390565b6000602082840312156112ab57600080fd5b81516001600160a01b03811681146101dd57600080fd5b600082198211156112d5576112d561126c565b500190565b634e487b7160e01b600052601260045260246000fd5b6000826112ff576112ff6112da565b500490565b634e487b7160e01b600052603260045260246000fd5b600082611329576113296112da565b500690565b600060a0820163ffffffff88168352602060a08185015281885180845260c086019150828a01935060005b8181101561137e5784516001600160a01b031683529383019391830191600101611359565b50506001600160a01b0397881660408601526060850196909652505050921660809092019190915292915050565b600060208083528351808285015260005b818110156113d9578581018301518582016040015282016113bd565b818111156113eb576000604083870101525b50601f01601f1916929092016040019392505050565b600060ff821660ff84168082101561141b5761141b61126c565b90039392505050565b600060ff821660ff84168160ff04811182151516156114455761144561126c565b02939250505056fea26469706673582212205bd466a3d2a8655fa9aceb46de41ff478f739fbd985b6c6f811b30ef3fa3810064736f6c634300080f0033";

type NomadFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NomadFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NomadFacet__factory extends ContractFactory {
  constructor(...args: NomadFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<NomadFacet> {
    return super.deploy(overrides || {}) as Promise<NomadFacet>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): NomadFacet {
    return super.attach(address) as NomadFacet;
  }
  override connect(signer: Signer): NomadFacet__factory {
    return super.connect(signer) as NomadFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NomadFacetInterface {
    return new utils.Interface(_abi) as NomadFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NomadFacet {
    return new Contract(address, _abi, signerOrProvider) as NomadFacet;
  }
}
