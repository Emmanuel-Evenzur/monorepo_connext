/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  DiamondCutFacet,
  DiamondCutFacetInterface,
} from "../../../../../contracts/core/connext/facets/DiamondCutFacet";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "facetAddress",
            type: "address",
          },
          {
            internalType: "enum IDiamondCut.FacetCutAction",
            name: "action",
            type: "uint8",
          },
          {
            internalType: "bytes4[]",
            name: "functionSelectors",
            type: "bytes4[]",
          },
        ],
        indexed: false,
        internalType: "struct IDiamondCut.FacetCut[]",
        name: "_diamondCut",
        type: "tuple[]",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_init",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "_calldata",
        type: "bytes",
      },
    ],
    name: "DiamondCut",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "facetAddress",
            type: "address",
          },
          {
            internalType: "enum IDiamondCut.FacetCutAction",
            name: "action",
            type: "uint8",
          },
          {
            internalType: "bytes4[]",
            name: "functionSelectors",
            type: "bytes4[]",
          },
        ],
        indexed: false,
        internalType: "struct IDiamondCut.FacetCut[]",
        name: "_diamondCut",
        type: "tuple[]",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_init",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "_calldata",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "DiamondCutProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "facetAddress",
            type: "address",
          },
          {
            internalType: "enum IDiamondCut.FacetCutAction",
            name: "action",
            type: "uint8",
          },
          {
            internalType: "bytes4[]",
            name: "functionSelectors",
            type: "bytes4[]",
          },
        ],
        indexed: false,
        internalType: "struct IDiamondCut.FacetCut[]",
        name: "_diamondCut",
        type: "tuple[]",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_init",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "_calldata",
        type: "bytes",
      },
    ],
    name: "DiamondCutRescinded",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "facetAddress",
            type: "address",
          },
          {
            internalType: "enum IDiamondCut.FacetCutAction",
            name: "action",
            type: "uint8",
          },
          {
            internalType: "bytes4[]",
            name: "functionSelectors",
            type: "bytes4[]",
          },
        ],
        internalType: "struct IDiamondCut.FacetCut[]",
        name: "_diamondCut",
        type: "tuple[]",
      },
      {
        internalType: "address",
        name: "_init",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_calldata",
        type: "bytes",
      },
    ],
    name: "diamondCut",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "facetAddress",
            type: "address",
          },
          {
            internalType: "enum IDiamondCut.FacetCutAction",
            name: "action",
            type: "uint8",
          },
          {
            internalType: "bytes4[]",
            name: "functionSelectors",
            type: "bytes4[]",
          },
        ],
        internalType: "struct IDiamondCut.FacetCut[]",
        name: "_diamondCut",
        type: "tuple[]",
      },
      {
        internalType: "address",
        name: "_init",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_calldata",
        type: "bytes",
      },
    ],
    name: "getAcceptanceTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "facetAddress",
            type: "address",
          },
          {
            internalType: "enum IDiamondCut.FacetCutAction",
            name: "action",
            type: "uint8",
          },
          {
            internalType: "bytes4[]",
            name: "functionSelectors",
            type: "bytes4[]",
          },
        ],
        internalType: "struct IDiamondCut.FacetCut[]",
        name: "_diamondCut",
        type: "tuple[]",
      },
      {
        internalType: "address",
        name: "_init",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_calldata",
        type: "bytes",
      },
    ],
    name: "proposeDiamondCut",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "facetAddress",
            type: "address",
          },
          {
            internalType: "enum IDiamondCut.FacetCutAction",
            name: "action",
            type: "uint8",
          },
          {
            internalType: "bytes4[]",
            name: "functionSelectors",
            type: "bytes4[]",
          },
        ],
        internalType: "struct IDiamondCut.FacetCut[]",
        name: "_diamondCut",
        type: "tuple[]",
      },
      {
        internalType: "address",
        name: "_init",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_calldata",
        type: "bytes",
      },
    ],
    name: "rescindDiamondCut",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523461001657611767908161001c8239f35b600080fdfe608060405260048036101561001357600080fd5b60003560e01c80631f931c1c146103d05780632c67849c1461033957806356a8ea481461016e5763bbf2358e1461004957600080fd5b346101695761007c9061007461005e36610bdf565b9693909261006d959295610ea6565b3691610cf6565b943691610e4c565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c132254420192834211610154577f6c20294df7018c510b52fd6cc0352d7b78056de164d751b75da6ef7b63daa83e61012c8686610149878760405160208101906100f9816100eb85878b8761101b565b03601f198101835282610ca7565b5190206000526000805160206116d283398151915260205283604060002055604051958695608087526080870190610f1e565b6001600160a01b0390921660208601528482036040860152610fdb565b9060608301520390a1005b601190634e487b7160e01b6000525260246000fd5b600080fd5b346101695761017c36610bdf565b6040949294519484869560808701606060208901525260a086019060a08160051b8801019580926000915b83831061021f57896101f36020828c8c601f8d8d60018060a01b031660408601528082199384878703016060880152818652878601376000868286010152011601038084520182610ca7565b602081519101206000526000805160206116d28339815191526020526020604060002054604051908152f35b919398509193949596609f198a8203018352605e198236030189351215610169576001600160a01b036102548a358401610bcb565b16815260036020838b3501013510156101695761027b602082016020848c35010135610e83565b88358201604081013591903603601e19018212156101695767ffffffffffffffff838b35018301351161016957893583018201803560051b3603602090910113610169578060606040608093015260608101848c3501840135905201906020838b3501820101906000905b848c35018101358210610311575050506020806001929a0193019301909289989796959492936101a7565b90919260208060019263ffffffff60e01b61032b88610ce1565b1681520194019201906102e6565b34610169577f47b4eb69218cd939e2a72afd9d24fe3a6ca02515a6d712ff3942062df2eedbdb6103806103886103cb61037136610bdf565b9593909261006d979297610ea6565b933691610e4c565b60405160208101906103a0816100eb8589898761101b565b5190206000526000805160206116d2833981519152602052600060408120556040519384938461101b565b0390a1005b5034610169576103e69061007461005e36610bdf565b906040519360209485810190610402816100eb8787878761101b565b5190206000805160206116f283398151915254610b3d575b5081815160005b81811061066f5750507f8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb6739161045c856040519384938461101b565b0390a16001600160a01b038116806104df5750505161047757005b6084916040519162461bcd60e51b8352820152603c60248201527f4c69624469616d6f6e644375743a205f696e697420697320616464726573732860448201527f3029206275745f63616c6c64617461206973206e6f7420656d707479000000006064820152fd5b825115610605579160009291839230036105b1575b8582519201905af43d156105a9573d9061050d82610e30565b9161051b6040519384610ca7565b82523d60008584013e5b1561052c57005b805115610557576105539060405193849362461bcd60e51b85528401526024830190610fdb565b0390fd5b506084916040519162461bcd60e51b8352820152602660248201527f4c69624469616d6f6e644375743a205f696e69742066756e6374696f6e2072656044820152651d995c9d195960d21b6064820152fd5b606090610525565b6106006040516105c081610c75565b602881527f4c69624469616d6f6e644375743a205f696e69742061646472657373206861738882015267206e6f20636f646560c01b604082015282611684565b6104f4565b60405162461bcd60e51b8152808501869052603d60248201527f4c69624469616d6f6e644375743a205f63616c6c6461746120697320656d707460448201527f7920627574205f696e6974206973206e6f7420616464726573732830290000006064820152608490fd5b9091508661067d8285611052565b5101516003811015610b2857806107e957506001600160a01b03806106a28386611052565b51511660406106b18487611052565b510151906106c18251151561107c565b6106cc8115156110dc565b6001600160a01b038116600090815260008051602061171283398151915260205260409020546001600160601b03169283156107db575b8251926000945b848610610724575050505050506001905b01908391610421565b8c6000805160206116b28339815191526001600160e01b03196107478986611052565b51169182600052528360406000205416610779578161076c86600194610771946112a0565b61113d565b95019461070a565b60405162461bcd60e51b8152808e018f9052603560248201527f4c69624469616d6f6e644375743a2043616e2774206164642066756e6374696f6044820152746e207468617420616c72656164792065786973747360581b6064820152608490fd5b6107e4826111ae565b610703565b60019080820361095857506001600160a01b03806108078487611052565b51511660406108168588611052565b5101519081519261082884151561107c565b6108338215156110dc565b6001600160a01b038216600090815260008051602061171283398151915260205260409020546001600160601b031692831561094a575b6000935b858510610884575050505050505060019061071b565b8d6000805160206116b28339815191526001600160e01b03196108a78886611052565b511691826000525283604060002054168581146108e0579161076c8682846108d36108d8968e9861138b565b6112a0565b94019361086e565b8f8f6084916040519162461bcd60e51b8352820152603860248201527f4c69624469616d6f6e644375743a2043616e2774207265706c6163652066756e60448201527f6374696f6e20776974682073616d652066756e6374696f6e00000000000000006064820152fd5b610953836111ae565b61086a565b600203610ad4576001600160a01b03806109728487611052565b5151169060406109828588611052565b510151916109928351151561107c565b610a715781519160005b8381106109b057505050505060019061071b565b6001600160e01b03196109c38284611052565b5116635df91ac760e11b81141580610a60575b15610a095790610a03826000805160206116b28339815191528f899560005252856040600020541661138b565b0161099c565b60405162461bcd60e51b8152808d018e9052602a60248201527f4c69624469616d6f6e644375743a2043616e6e6f742072656d6f7665206375746044820152692073656c6563746f727360b01b6064820152608490fd5b506307e4c70760e21b8114156109d6565b60405162461bcd60e51b8152808a018b9052603660248201527f4c69624469616d6f6e644375743a2052656d6f76652066616365742061646472604482015275657373206d757374206265206164647265737328302960501b6064820152608490fd5b60405162461bcd60e51b8152808801899052602760248201527f4c69624469616d6f6e644375743a20496e636f727265637420466163657443756044820152663a20b1ba34b7b760c91b6064820152608490fd5b602187634e487b7160e01b6000525260246000fd5b806000526000805160206116d2833981519152908187526040600020548015159081610bc0575b5015610b7c576000528552600060408120553861041a565b60405162461bcd60e51b8152808701889052601d60248201527f4c69624469616d6f6e643a2064656c6179206e6f7420656c61707365640000006044820152606490fd5b905042101538610b64565b35906001600160a01b038216820361016957565b906060600319830112610169576004359167ffffffffffffffff808411610169578160238501121561016957836004013593818511610169578260248660051b83010111610169576024908101949390356001600160a01b038116810361016957926044359083821161016957806023830112156101695781600401359384116101695760248483010111610169576024019190565b6060810190811067ffffffffffffffff821117610c9157604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff821117610c9157604052565b67ffffffffffffffff8111610c915760051b60200190565b35906001600160e01b03198216820361016957565b929190610d0281610cc9565b91604091610d1283519485610ca7565b8395818552602080950191600590811b8201948486116101695782935b868510610d40575050505050505050565b67ffffffffffffffff85358181116101695785019060609182818a031261016957845192830183811083821117610e1b578552610d7c81610bcb565b83528a8101356003811015610169578b84015284810135918211610169570187601f8201121561016957803590610db282610cc9565b91610dbf86519384610ca7565b8083528b80840191881b830101918a831161016957908c80959396949201905b868210610dfa57505083945085820152815201940193610d2f565b94819294969395610e0b8293610ce1565b81520191018c9492959391610ddf565b60246000634e487b7160e01b81526041600452fd5b67ffffffffffffffff8111610c9157601f01601f191660200190565b929192610e5882610e30565b91610e666040519384610ca7565b829481845281830111610169578281602093846000960137010152565b906003821015610e905752565b634e487b7160e01b600052602160045260246000fd5b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c1320546001600160a01b03163303610ed957565b60405162461bcd60e51b815260206004820152601b60248201527f4c69624469616d6f6e643a2021636f6e7472616374206f776e657200000000006044820152606490fd5b90815180825260208092019182818360051b8501950193600080925b858410610f4b575050505050505090565b909192938782829798990385528851908260806060928381019360018060a01b038651168252610f818487015185840190610e83565b6040809601519582015284518094520192019085905b808210610fb7575050509080600192990194019401929594939190610f3a565b82516001600160e01b03191684528994938401939092019160019190910190610f97565b919082519283825260005b848110611007575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201610fe6565b61103161104f9492606083526060830190610f1e565b6001600160a01b039093166020820152808303604090910152610fdb565b90565b80518210156110665760209160051b010190565b634e487b7160e01b600052603260045260246000fd5b1561108357565b60405162461bcd60e51b815260206004820152602b60248201527f4c69624469616d6f6e644375743a204e6f2073656c6563746f727320696e206660448201526a1858d95d081d1bc818dd5d60aa1b6064820152608490fd5b156110e357565b60405162461bcd60e51b815260206004820152602c60248201527f4c69624469616d6f6e644375743a204164642066616365742063616e2774206260448201526b65206164647265737328302960a01b6064820152608490fd5b6001600160601b038091169081146111555760010190565b634e487b7160e01b600052601160045260246000fd5b6000805160206116f28339815191528054821015611066576000527fb5c239a29faf02594141bbc5e6982a9b85ba2b4d59c3ed3baaf4cb8e5e11cbef0190600090565b6111fa6040516111bd81610c75565b602481527f4c69624469616d6f6e644375743a204e657720666163657420686173206e6f20602082015263636f646560e01b604082015282611684565b6000805160206116f283398151915280546001600160a01b0383166000908152600080516020611712833981519152602052604090206001018190559190600160401b831015610c91578261125791600161127b9501905561116b565b90919082549060031b9160018060a01b039283811b93849216901b16911916179055565b565b919091805483101561106657600052601c60206000208360031c019260021b1690565b6001600160e01b0319811660008181526000805160206116b283398151915260208190526040822080546001600160a01b031660a09690961b6001600160a01b031916959095179094559194939092906001600160a01b031680835260008051602061171283398151915260205260408320805491949190600160401b821015611377579661133c826040979899600161135e9501815561127d565b90919082549060031b9163ffffffff831b92839160e01c901b16911916179055565b82526020522080546001600160a01b0319169091179055565b634e487b7160e01b85526041600452602485fd5b9091906001600160a01b039081168015611619573081146115bd5763ffffffff60e01b8094166000928184526000805160206116b2833981519152926020918483526040948587205460a01c908388526000805160206117128339815191529586865287892054926000199b8c85019485116115a957908991888c898c8980870361153b575b505090525050508787525087892080548015611527578c0190611434828261127d565b63ffffffff82549160031b1b19169055558852845286868120551561145e575b5050505050509050565b6000805160206116f2833981519152805489810190811161151357838852858552826001888a200154918083036114e1575b50505080549889156114cd57600197989901916114ac8361116b565b909182549160031b1b19169055558552528220015580388080808080611454565b634e487b7160e01b88526031600452602488fd5b6114ea9061116b565b90549060031b1c166114ff816112578461116b565b885285855260018789200155388281611490565b634e487b7160e01b88526011600452602488fd5b634e487b7160e01b8b52603160045260248bfd5b61159c978461133c9361155a8a94876115709952828a5284842061127d565b90549060031b1c60e01b9788968352522061127d565b168b52838852898b2080546001600160a01b031660a09290921b6001600160a01b031916919091179055565b873880888c898c89611411565b634e487b7160e01b8b52601160045260248bfd5b60405162461bcd60e51b815260206004820152602e60248201527f4c69624469616d6f6e644375743a2043616e27742072656d6f766520696d6d7560448201526d3a30b1363290333ab731ba34b7b760911b6064820152608490fd5b60405162461bcd60e51b815260206004820152603760248201527f4c69624469616d6f6e644375743a2043616e27742072656d6f76652066756e6360448201527f74696f6e207468617420646f65736e27742065786973740000000000000000006064820152608490fd5b3b1561168d5750565b60405162461bcd60e51b815260206004820152908190610553906024830190610fdb56fec8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131cc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c1321c8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131ec8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131da2646970667358221220008d1e552b08178b5b87bf2133f77afa9df3d3a671e7c5be2830113ba406b81164736f6c63430008110033";

type DiamondCutFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DiamondCutFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DiamondCutFacet__factory extends ContractFactory {
  constructor(...args: DiamondCutFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DiamondCutFacet> {
    return super.deploy(overrides || {}) as Promise<DiamondCutFacet>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): DiamondCutFacet {
    return super.attach(address) as DiamondCutFacet;
  }
  override connect(signer: Signer): DiamondCutFacet__factory {
    return super.connect(signer) as DiamondCutFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DiamondCutFacetInterface {
    return new utils.Interface(_abi) as DiamondCutFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DiamondCutFacet {
    return new Contract(address, _abi, signerOrProvider) as DiamondCutFacet;
  }
}
