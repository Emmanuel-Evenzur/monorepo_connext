/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  DiamondCutFacet,
  DiamondCutFacetInterface,
} from "../../../../../contracts/core/connext/facets/DiamondCutFacet";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "facetAddress",
            type: "address",
          },
          {
            internalType: "enum IDiamondCut.FacetCutAction",
            name: "action",
            type: "uint8",
          },
          {
            internalType: "bytes4[]",
            name: "functionSelectors",
            type: "bytes4[]",
          },
        ],
        indexed: false,
        internalType: "struct IDiamondCut.FacetCut[]",
        name: "_diamondCut",
        type: "tuple[]",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_init",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "_calldata",
        type: "bytes",
      },
    ],
    name: "DiamondCut",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "facetAddress",
            type: "address",
          },
          {
            internalType: "enum IDiamondCut.FacetCutAction",
            name: "action",
            type: "uint8",
          },
          {
            internalType: "bytes4[]",
            name: "functionSelectors",
            type: "bytes4[]",
          },
        ],
        indexed: false,
        internalType: "struct IDiamondCut.FacetCut[]",
        name: "_diamondCut",
        type: "tuple[]",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_init",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "_calldata",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "DiamondCutProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "facetAddress",
            type: "address",
          },
          {
            internalType: "enum IDiamondCut.FacetCutAction",
            name: "action",
            type: "uint8",
          },
          {
            internalType: "bytes4[]",
            name: "functionSelectors",
            type: "bytes4[]",
          },
        ],
        indexed: false,
        internalType: "struct IDiamondCut.FacetCut[]",
        name: "_diamondCut",
        type: "tuple[]",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_init",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "_calldata",
        type: "bytes",
      },
    ],
    name: "DiamondCutRescinded",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "facetAddress",
            type: "address",
          },
          {
            internalType: "enum IDiamondCut.FacetCutAction",
            name: "action",
            type: "uint8",
          },
          {
            internalType: "bytes4[]",
            name: "functionSelectors",
            type: "bytes4[]",
          },
        ],
        internalType: "struct IDiamondCut.FacetCut[]",
        name: "_diamondCut",
        type: "tuple[]",
      },
      {
        internalType: "address",
        name: "_init",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_calldata",
        type: "bytes",
      },
    ],
    name: "diamondCut",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "facetAddress",
            type: "address",
          },
          {
            internalType: "enum IDiamondCut.FacetCutAction",
            name: "action",
            type: "uint8",
          },
          {
            internalType: "bytes4[]",
            name: "functionSelectors",
            type: "bytes4[]",
          },
        ],
        internalType: "struct IDiamondCut.FacetCut[]",
        name: "_diamondCut",
        type: "tuple[]",
      },
      {
        internalType: "address",
        name: "_init",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_calldata",
        type: "bytes",
      },
    ],
    name: "proposeDiamondCut",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "facetAddress",
            type: "address",
          },
          {
            internalType: "enum IDiamondCut.FacetCutAction",
            name: "action",
            type: "uint8",
          },
          {
            internalType: "bytes4[]",
            name: "functionSelectors",
            type: "bytes4[]",
          },
        ],
        internalType: "struct IDiamondCut.FacetCut[]",
        name: "_diamondCut",
        type: "tuple[]",
      },
      {
        internalType: "address",
        name: "_init",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_calldata",
        type: "bytes",
      },
    ],
    name: "rescindDiamondCut",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611825806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80631f931c1c146100465780632c67849c1461005b578063bbf2358e1461006e575b600080fd5b6100596100543660046111b7565b610081565b005b6100596100693660046111b7565b6100da565b61005961007c3660046111b7565b61012c565b61008961017e565b6100d361009685876112fd565b8484848080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506101ef92505050565b5050505050565b6100e261017e565b6100d36100ef85876112fd565b8484848080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506104db92505050565b61013461017e565b6100d361014185876112fd565b8484848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061056e92505050565b600080516020611784833981519152600401546001600160a01b031633146101ed5760405162461bcd60e51b815260206004820152601b60248201527f4c69624469616d6f6e643a2021636f6e7472616374206f776e6572000000000060448201526064015b60405180910390fd5b565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131e5460008051602061178483398151915290156102c957600081600501600086868660405160200161024393929190611582565b6040516020818303038152906040528051906020012081526020019081526020016000205490508060001415801561027b5750428111155b6102c75760405162461bcd60e51b815260206004820152601d60248201527f4c69624469616d6f6e643a2064656c6179206e6f7420656c617073656400000060448201526064016101e4565b505b60005b845181101561048f5760008582815181106102e9576102e96115c0565b60200260200101516020015190506000600281111561030a5761030a611441565b81600281111561031c5761031c611441565b0361036a57610365868381518110610336576103366115c0565b602002602001015160000151878481518110610354576103546115c0565b602002602001015160400151610637565b61047c565b600181600281111561037e5761037e611441565b036103c757610365868381518110610398576103986115c0565b6020026020010151600001518784815181106103b6576103b66115c0565b6020026020010151604001516107af565b60028160028111156103db576103db611441565b03610424576103658683815181106103f5576103f56115c0565b602002602001015160000151878481518110610413576104136115c0565b60200260200101516040015161093f565b60405162461bcd60e51b815260206004820152602760248201527f4c69624469616d6f6e644375743a20496e636f727265637420466163657443756044820152663a20b1ba34b7b760c91b60648201526084016101e4565b5080610487816115ec565b9150506102cc565b507f8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb6738484846040516104c393929190611582565b60405180910390a16104d58383610a57565b50505050565b6000600080516020611784833981519152600501600085858560405160200161050693929190611582565b604051602081830303815290604052805190602001208152602001908152602001600020819055507f47b4eb69218cd939e2a72afd9d24fe3a6ca02515a6d712ff3942062df2eedbdb83838360405161056193929190611582565b60405180910390a1505050565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c132254600080516020611784833981519152906000906105ad9042611605565b9050808260050160008787876040516020016105cb93929190611582565b604051602081830303815290604052805190602001208152602001908152602001600020819055507f6c20294df7018c510b52fd6cc0352d7b78056de164d751b75da6ef7b63daa83e85858584604051610628949392919061161d565b60405180910390a15050505050565b80516000036106585760405162461bcd60e51b81526004016101e490611663565b6000805160206117848339815191526001600160a01b03831661068d5760405162461bcd60e51b81526004016101e4906116ae565b6001600160a01b0383166000908152600182016020526040812054906001600160601b03821690036106c3576106c38285610c64565b60005b83518110156100d35760008482815181106106e3576106e36115c0565b6020908102919091018101516001600160e01b031981166000908152918690526040909120549091506001600160a01b031680156107815760405162461bcd60e51b815260206004820152603560248201527f4c69624469616d6f6e644375743a2043616e2774206164642066756e6374696f6044820152746e207468617420616c72656164792065786973747360581b60648201526084016101e4565b61078d8583868a610cce565b83610797816116fa565b945050505080806107a7906115ec565b9150506106c6565b80516000036107d05760405162461bcd60e51b81526004016101e490611663565b6000805160206117848339815191526001600160a01b0383166108055760405162461bcd60e51b81526004016101e4906116ae565b6001600160a01b0383166000908152600182016020526040812054906001600160601b038216900361083b5761083b8285610c64565b60005b83518110156100d357600084828151811061085b5761085b6115c0565b6020908102919091018101516001600160e01b031981166000908152918690526040909120549091506001600160a01b0390811690871681036109065760405162461bcd60e51b815260206004820152603860248201527f4c69624469616d6f6e644375743a2043616e2774207265706c6163652066756e60448201527f6374696f6e20776974682073616d652066756e6374696f6e000000000000000060648201526084016101e4565b610911858284610d6e565b61091d8583868a610cce565b83610927816116fa565b94505050508080610937906115ec565b91505061083e565b80516000036109605760405162461bcd60e51b81526004016101e490611663565b6000805160206117848339815191526001600160a01b038316156109e55760405162461bcd60e51b815260206004820152603660248201527f4c69624469616d6f6e644375743a2052656d6f76652066616365742061646472604482015275657373206d757374206265206164647265737328302960501b60648201526084016101e4565b60005b82518110156104d5576000838281518110610a0557610a056115c0565b6020908102919091018101516001600160e01b031981166000908152918590526040909120549091506001600160a01b0316610a42848284610d6e565b50508080610a4f906115ec565b9150506109e8565b6001600160a01b038216610ade57805115610ada5760405162461bcd60e51b815260206004820152603c60248201527f4c69624469616d6f6e644375743a205f696e697420697320616464726573732860448201527f3029206275745f63616c6c64617461206973206e6f7420656d7074790000000060648201526084016101e4565b5050565b8051600003610b555760405162461bcd60e51b815260206004820152603d60248201527f4c69624469616d6f6e644375743a205f63616c6c6461746120697320656d707460448201527f7920627574205f696e6974206973206e6f74206164647265737328302900000060648201526084016101e4565b6001600160a01b0382163014610b8757610b87826040518060600160405280602881526020016117a460289139611131565b600080836001600160a01b031683604051610ba29190611720565b600060405180830381855af49150503d8060008114610bdd576040519150601f19603f3d011682016040523d82523d6000602084013e610be2565b606091505b5091509150816104d557805115610c0d578060405162461bcd60e51b81526004016101e4919061173c565b60405162461bcd60e51b815260206004820152602660248201527f4c69624469616d6f6e644375743a205f696e69742066756e6374696f6e2072656044820152651d995c9d195960d21b60648201526084016101e4565b610c86816040518060600160405280602481526020016117cc60249139611131565b6002820180546001600160a01b0390921660008181526001948501602090815260408220860185905594840183559182529290200180546001600160a01b0319169091179055565b6001600160e01b0319831660008181526020868152604080832080546001600160601b03909716600160a01b026001600160a01b0397881617815594909516808352600180890183529583208054968701815583528183206008870401805460e09890981c60046007909816979097026101000a96870263ffffffff9097021990971695909517909555529290915281546001600160a01b031916179055565b6001600160a01b038216610dea5760405162461bcd60e51b815260206004820152603760248201527f4c69624469616d6f6e644375743a2043616e27742072656d6f76652066756e6360448201527f74696f6e207468617420646f65736e277420657869737400000000000000000060648201526084016101e4565b306001600160a01b03831603610e595760405162461bcd60e51b815260206004820152602e60248201527f4c69624469616d6f6e644375743a2043616e27742072656d6f766520696d6d7560448201526d3a30b1363290333ab731ba34b7b760911b60648201526084016101e4565b6001600160e01b03198116600090815260208481526040808320546001600160a01b0386168452600180880190935290832054600160a01b9091046001600160601b03169291610ea891611756565b9050808214610f9a576001600160a01b03841660009081526001860160205260408120805483908110610edd57610edd6115c0565b600091825260208083206008830401546001600160a01b038916845260018a019091526040909220805460079092166004026101000a90920460e01b925082919085908110610f2e57610f2e6115c0565b600091825260208083206008830401805463ffffffff60079094166004026101000a938402191660e09590951c929092029390931790556001600160e01b03199290921682528690526040902080546001600160a01b0316600160a01b6001600160601b038516021790555b6001600160a01b03841660009081526001860160205260409020805480610fc357610fc361176d565b60008281526020808220600860001990940193840401805463ffffffff600460078716026101000a0219169055919092556001600160e01b031985168252869052604081208190558190036100d357600285015460009061102690600190611756565b6001600160a01b03861660009081526001808901602052604090912001549091508082146110d5576000876002018381548110611065576110656115c0565b6000918252602090912001546002890180546001600160a01b039092169250829184908110611096576110966115c0565b600091825260208083209190910180546001600160a01b0319166001600160a01b03948516179055929091168152600189810190925260409020018190555b866002018054806110e8576110e861176d565b60008281526020808220830160001990810180546001600160a01b03191690559092019092556001600160a01b0388168252600189810190915260408220015550505050505050565b813b81816104d55760405162461bcd60e51b81526004016101e4919061173c565b80356001600160a01b038116811461116957600080fd5b919050565b60008083601f84011261118057600080fd5b50813567ffffffffffffffff81111561119857600080fd5b6020830191508360208285010111156111b057600080fd5b9250929050565b6000806000806000606086880312156111cf57600080fd5b853567ffffffffffffffff808211156111e757600080fd5b818801915088601f8301126111fb57600080fd5b81358181111561120a57600080fd5b8960208260051b850101111561121f57600080fd5b6020830197508096505061123560208901611152565b9450604088013591508082111561124b57600080fd5b506112588882890161116e565b969995985093965092949392505050565b634e487b7160e01b600052604160045260246000fd5b6040516060810167ffffffffffffffff811182821017156112a2576112a2611269565b60405290565b604051601f8201601f1916810167ffffffffffffffff811182821017156112d1576112d1611269565b604052919050565b600067ffffffffffffffff8211156112f3576112f3611269565b5060051b60200190565b600061131061130b846112d9565b6112a8565b83815260208082019190600586811b86013681111561132e57600080fd5b865b8181101561143457803567ffffffffffffffff808211156113515760008081fd5b818a019150606082360312156113675760008081fd5b61136f61127f565b61137883611152565b8152868301356003811061138c5760008081fd5b81880152604083810135838111156113a45760008081fd5b939093019236601f8501126113bb57600092508283fd5b833592506113cb61130b846112d9565b83815292871b840188019288810190368511156113e85760008081fd5b948901945b8486101561141d5785356001600160e01b03198116811461140e5760008081fd5b825294890194908901906113ed565b918301919091525088525050948301948301611330565b5092979650505050505050565b634e487b7160e01b600052602160045260246000fd5b600081518084526020808501808196508360051b8101915082860160005b8581101561151d578284038952815180516001600160a01b031685528581015160609081870190600381106114ba57634e487b7160e01b600052602160045260246000fd5b87890152604092830151928701919091528151908190529086019060808601906000905b808210156115085783516001600160e01b03191683529288019291880191600191909101906114de565b50509986019994505090840190600101611475565b5091979650505050505050565b60005b8381101561154557818101518382015260200161152d565b838111156104d55750506000910152565b6000815180845261156e81602086016020860161152a565b601f01601f19169290920160200192915050565b6060815260006115956060830186611457565b6001600160a01b038516602084015282810360408401526115b68185611556565b9695505050505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016115fe576115fe6115d6565b5060010190565b60008219821115611618576116186115d6565b500190565b6080815260006116306080830187611457565b6001600160a01b038616602084015282810360408401526116518186611556565b91505082606083015295945050505050565b6020808252602b908201527f4c69624469616d6f6e644375743a204e6f2073656c6563746f727320696e206660408201526a1858d95d081d1bc818dd5d60aa1b606082015260800190565b6020808252602c908201527f4c69624469616d6f6e644375743a204164642066616365742063616e2774206260408201526b65206164647265737328302960a01b606082015260800190565b60006001600160601b03808316818103611716576117166115d6565b6001019392505050565b6000825161173281846020870161152a565b9190910192915050565b60208152600061174f6020830184611556565b9392505050565b600082821015611768576117686115d6565b500390565b634e487b7160e01b600052603160045260246000fdfec8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c4c69624469616d6f6e644375743a205f696e6974206164647265737320686173206e6f20636f64654c69624469616d6f6e644375743a204e657720666163657420686173206e6f20636f6465a2646970667358221220e178ae8669f4ff8adbf06a34cb13fe6ef66df4caaf474f061d55164f9329f67264736f6c634300080f0033";

type DiamondCutFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DiamondCutFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DiamondCutFacet__factory extends ContractFactory {
  constructor(...args: DiamondCutFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DiamondCutFacet> {
    return super.deploy(overrides || {}) as Promise<DiamondCutFacet>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): DiamondCutFacet {
    return super.attach(address) as DiamondCutFacet;
  }
  override connect(signer: Signer): DiamondCutFacet__factory {
    return super.connect(signer) as DiamondCutFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DiamondCutFacetInterface {
    return new utils.Interface(_abi) as DiamondCutFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DiamondCutFacet {
    return new Contract(address, _abi, signerOrProvider) as DiamondCutFacet;
  }
}
