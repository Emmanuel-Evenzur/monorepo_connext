/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  TokenRegistry,
  TokenRegistryInterface,
} from "../../../../../contracts/core/connext/helpers/TokenRegistry";

const _abi = [
  {
    inputs: [],
    name: "ProposedOwnable__acceptProposedOwner_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyOwner_notOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyProposed_notProposedOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_noOwnershipChange",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_noProposal",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "proposedOwner",
        type: "address",
      },
    ],
    name: "OwnershipProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "representation",
        type: "address",
      },
    ],
    name: "TokenDeployed",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptProposedOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "canonicalToRepresentation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "delay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "_id",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "_custom",
        type: "address",
      },
    ],
    name: "enrollCustom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "_id",
        type: "bytes32",
      },
    ],
    name: "ensureLocalToken",
    outputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_representation",
        type: "address",
      },
    ],
    name: "getCanonicalTokenId",
    outputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "_id",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "_id",
        type: "bytes32",
      },
    ],
    name: "getLocalAddress",
    outputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_id",
        type: "address",
      },
    ],
    name: "getLocalAddress",
    outputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "_id",
        type: "bytes32",
      },
    ],
    name: "getRepresentationAddress",
    outputs: [
      {
        internalType: "address",
        name: "_representation",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "getTokenId",
    outputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "_id",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenBeacon",
        type: "address",
      },
      {
        internalType: "address",
        name: "_xAppConnectionManager",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "isLocalOrigin",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "_id",
        type: "bytes32",
      },
    ],
    name: "mustHaveLocalToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_oldRepr",
        type: "address",
      },
    ],
    name: "oldReprToCurrentRepr",
    outputs: [
      {
        internalType: "address",
        name: "_currentRepr",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newlyProposed",
        type: "address",
      },
    ],
    name: "proposeNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proposed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposedTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounced",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "representationToCanonical",
    outputs: [
      {
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
    ],
    name: "setLocalDomain",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_xAppConnectionManager",
        type: "address",
      },
    ],
    name: "setXAppConnectionManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenBeacon",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "xAppConnectionManager",
    outputs: [
      {
        internalType: "contract XAppConnectionManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611bb9806100206000396000f3fe60806040523480156200001157600080fd5b5060043610620001925760003560e01c8063715018a611620000f0578063c86415cb11620000a3578063d232c220116200007a578063d232c2201462000419578063d82d05311462000433578063dc9685a7146200044a578063f1537686146200046157600080fd5b8063c86415cb14620003c3578063ccf5a77c14620003eb578063d1851c92146200040757600080fd5b8063715018a6146200031a5780638da5cb5b1462000324578063b1f8100d146200033c578063b869d89a1462000353578063b9730eaf146200036a578063c5b350df14620003b957600080fd5b806339e85e1f116200014957806339e85e1f146200028b5780633cf52ffb14620002b857806341bdc8b514620002cb578063485cc95514620002e2578063589b3c6414620002f95780636a42b8f8146200031057600080fd5b806303e418c214620001975780630e71e25114620001eb5780631ecf6f9f146200021b57806328b1aea014620002475780632c3da59c14620002605780633339df961462000277575b600080fd5b620001ca620001a83660046200120e565b6067602052600090815260409020805460019091015463ffffffff9091169082565b6040805163ffffffff90931683526020830191909152015b60405180910390f35b62000202620001fc3660046200120e565b62000478565b6040516001600160a01b039091168152602001620001e2565b620002026200022c3660046200122c565b6068602052600090815260409020546001600160a01b031681565b6200025e620002583660046200125b565b6200050b565b005b62000202620002713660046200129c565b6200055c565b60345462000202906001600160a01b031681565b6200025e6200029c366004620012c9565b6066805463ffffffff191663ffffffff92909216919091179055565b6002545b604051908152602001620001e2565b6200025e620002dc3660046200120e565b620005b7565b6200025e620002f3366004620012e7565b6200060b565b620002026200030a3660046200129c565b620006b6565b62093a80620002bc565b6200025e620006ef565b6000546201000090046001600160a01b031662000202565b6200025e6200034d3660046200120e565b620007bc565b62000202620003643660046200129c565b62000876565b620001ca6200037b3660046200120e565b6001600160a01b03166000908152606760209081526040918290208251808401909352805463ffffffff168084526001909101549290910182905291565b6200025e620008a1565b620003da620003d43660046200120e565b62000900565b6040519015158152602001620001e2565b606654620002029064010000000090046001600160a01b031681565b6001546001600160a01b031662000202565b620003da6000546201000090046001600160a01b03161590565b62000202620004443660046200131f565b62000934565b620002026200045b3660046200129c565b6200094b565b620001ca620004723660046200120e565b62000990565b6001600160a01b03811660009081526067602090815260408083208151808301909252805463ffffffff1680835260019091015492820192909252908203620004f05760405162461bcd60e51b815260206004820152600560248201526410b932b83960d91b60448201526064015b60405180910390fd5b62000504816000015182602001516200094b565b9392505050565b6000546201000090046001600160a01b031633146200053d576040516311a8a1bb60e31b815260040160405180910390fd5b6200054a83838362000a04565b6200055783838362000a3b565b505050565b6000806200056b8484620006b6565b90506001600160a01b038116620005ae5760405162461bcd60e51b815260206004820152600660248201526510ba37b5b2b760d11b6044820152606401620004e7565b90505b92915050565b6000546201000090046001600160a01b03163314620005e9576040516311a8a1bb60e31b815260040160405180910390fd5b603480546001600160a01b0319166001600160a01b0392909216919091179055565b600054610100900460ff16620006285760005460ff16156200062c565b303b155b6200064b5760405162461bcd60e51b8152600401620004e7906200133e565b600054610100900460ff161580156200066e576000805461ffff19166101011790555b60668054640100000000600160c01b0319166401000000006001600160a01b038616021790556200069f8262000a91565b801562000557576000805461ff0019169055505050565b6000620006c860665463ffffffff1690565b63ffffffff168363ffffffff1603620006e3575080620005b1565b620005ae83836200094b565b6000546201000090046001600160a01b0316331462000721576040516311a8a1bb60e31b815260040160405180910390fd5b6002546000036200074557604051630e4b303f60e21b815260040160405180910390fd5b62093a8060025442620007599190620013a2565b1162000778576040516386d4b3f160e01b815260040160405180910390fd5b6001546001600160a01b031615620007a3576040516323295ef960e01b815260040160405180910390fd5b600154620007ba906001600160a01b031662000b30565b565b6000546201000090046001600160a01b03163314620007ee576040516311a8a1bb60e31b815260040160405180910390fd5b6001546001600160a01b0382811691161480156200081457506001600160a01b03811615155b1562000833576040516311bc066560e11b815260040160405180910390fd5b6000546001600160a01b038083166201000090920416036200086857604051634a2fb73f60e11b815260040160405180910390fd5b620008738162000ba0565b50565b6000620008848383620006b6565b90506001600160a01b038116620005b157620005ae838362000bee565b6001546001600160a01b03163314620008cd576040516311a7f27160e11b815260040160405180910390fd5b62093a8060025442620008e19190620013a2565b11620007a35760405163d39c12bb60e01b815260040160405180910390fd5b6001600160a01b03811660009081526067602052604081205463ffffffff16156200092d57506000919050565b503b151590565b6000620005ae836001600160a01b038416620006b6565b6000806200095a848462000e07565b905060006200096f62ffffff19831662000e65565b6000908152606860205260409020546001600160a01b031695945050505050565b6001600160a01b03811660009081526067602090815260408083208151808301909252805463ffffffff168083526001909101549282019290925282918203620009f15760665463ffffffff1692506001600160a01b0384169150620009fe565b8051602082015190935091505b50915091565b6001600160a01b03166000908152606760205260409020805463ffffffff191663ffffffff93909316929092178255600190910155565b600062000a49848462000e07565b9050600062000a5e62ffffff19831662000e65565b600090815260686020526040902080546001600160a01b0319166001600160a01b03949094169390931790925550505050565b600054610100900460ff1662000aae5760005460ff161562000ab2565b303b155b62000ad15760405162461bcd60e51b8152600401620004e7906200133e565b600054610100900460ff1615801562000af4576000805461ffff19166101011790555b603480546001600160a01b0319166001600160a01b03841617905562000b1962000eb0565b801562000b2c576000805461ff00191690555b5050565b600080546001600160a01b038381166201000081810262010000600160b01b031985161785556002859055600180546001600160a01b031916905560405193049190911692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a35050565b42600255600180546001600160a01b0319166001600160a01b0383169081179091556040517f6ab4d119f23076e8ad491bc65ce85f017fb0591dce08755ba8591059cc51737a90600090a250565b60665460405160009164010000000090046001600160a01b03169062000c1490620011e3565b6001600160a01b039091168152604060208201819052600090820152606001604051809103906000f08015801562000c50573d6000803e3d6000fd5b509050806001600160a01b0316638129fc1c6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801562000c8f57600080fd5b505af115801562000ca4573d6000803e3d6000fd5b5050505060008062000cb7858562000ee4565b6040516319524d7d60e21b815291935091506001600160a01b0384169063654935f49062000cef90859085906012906004016200140c565b600060405180830381600087803b15801562000d0a57600080fd5b505af115801562000d1f573d6000803e3d6000fd5b50505050826001600160a01b031663f2fde38b62000d4c6000546001600160a01b03620100009091041690565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401600060405180830381600087803b15801562000d8e57600080fd5b505af115801562000da3573d6000803e3d6000fd5b5050505062000db485858562000a3b565b62000dc185858562000a04565b826001600160a01b0316848663ffffffff167f84d5e3618bf276f3d29a931646fdd996b398a3efa3cf6bceefc1fe7f0304059f60405160405180910390a4505092915050565b6000620005ae60016040516001600160e01b031960e087901b1660208201526024810185905262000e4f9060009060440160408051601f198184030181529190529062000f7f565b6301000000600160d81b031660d89190911b1790565b60008062000e7c8360781c6001600160601b031690565b6001600160601b03169050600062000e9d8460181c6001600160601b031690565b6001600160601b03169091209392505050565b600054610100900460ff1662000eda5760405162461bcd60e51b8152600401620004e79062001449565b620007ba62000fa5565b606080600062000ef48462000fda565b91505062000f02856200108e565b8160405160200162000f4492919060b09290921b6001600160b01b0319168252601760f91b600a83015260e01b6001600160e01b031916600b820152600f0190565b60408051808303601f19018152600f808452838301909252945060208201818036833701905050915060208301516020830152509250929050565b81516000906020840162000f9c64ffffffffff851682846200110f565b95945050505050565b600054610100900460ff1662000fcf5760405162461bcd60e51b8152600401620004e79062001449565b620007ba3362000b30565b600080601f5b600f8160ff1611156200104157600062000ffc82600862001494565b60ff1685901c90506200100f816200115b565b61ffff16841793508160ff166010146200102b57601084901b93505b5062001039600182620014c0565b905062000fe0565b50600f5b60ff8160ff161015620009fe5760ff600882021684901c62001067816200115b565b61ffff16831792508160ff166000146200108357601083901b92505b506000190162001045565b60006030815b600a8160ff1610156200110857620010ae81600862001494565b60ff1682620010bf600a87620014fc565b63ffffffff16620010d1919062001522565b69ffffffffffffffffffff16901b9290921791620010f1600a8562001553565b93506200110060018262001579565b905062001094565b5050919050565b6000806200111e8385620015a1565b90506040518111156200112f575060005b80600003620011465762ffffff1991505062000504565b5050606092831b9190911790911b1760181b90565b60006200116f60048360ff16901c62001191565b60ff1661ffff919091161760081b620011888262001191565b60ff1617919050565b6040805180820190915260108082526f181899199a1a9b1b9c1cb0b131b232b360811b6020830152600091600f84169182908110620011d457620011d4620015bc565b016020015160f81c9392505050565b6105b180620015d383390190565b80356001600160a01b03811681146200120957600080fd5b919050565b6000602082840312156200122157600080fd5b620005ae82620011f1565b6000602082840312156200123f57600080fd5b5035919050565b803563ffffffff811681146200120957600080fd5b6000806000606084860312156200127157600080fd5b6200127c8462001246565b9250602084013591506200129360408501620011f1565b90509250925092565b60008060408385031215620012b057600080fd5b620012bb8362001246565b946020939093013593505050565b600060208284031215620012dc57600080fd5b620005ae8262001246565b60008060408385031215620012fb57600080fd5b6200130683620011f1565b91506200131660208401620011f1565b90509250929050565b600080604083850312156200133357600080fd5b620013068362001246565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b600082821015620013b757620013b76200138c565b500390565b6000815180845260005b81811015620013e457602081850181015186830182015201620013c6565b81811115620013f7576000602083870101525b50601f01601f19169290920160200192915050565b606081526000620014216060830186620013bc565b8281036020840152620014358186620013bc565b91505060ff83166040830152949350505050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b600060ff821660ff84168160ff0481118215151615620014b857620014b86200138c565b029392505050565b600060ff821660ff841680821015620014dd57620014dd6200138c565b90039392505050565b634e487b7160e01b600052601260045260246000fd5b600063ffffffff80841680620015165762001516620014e6565b92169190910692915050565b600069ffffffffffffffffffff8083168185168083038211156200154a576200154a6200138c565b01949350505050565b600063ffffffff808416806200156d576200156d620014e6565b92169190910492915050565b600060ff821660ff84168060ff038211156200159957620015996200138c565b019392505050565b60008219821115620015b757620015b76200138c565b500190565b634e487b7160e01b600052603260045260246000fdfe60a06040526040516105b13803806105b18339810160408190526100229161027e565b6100358261010b60201b6100291760201c565b6100795760405162461bcd60e51b815260206004820152601060248201526f18995858dbdb880858dbdb9d1c9858dd60821b60448201526064015b60405180910390fd5b6001600160a01b03821660805260006100918361011a565b90506100a68161010b60201b6100291760201c565b6100f25760405162461bcd60e51b815260206004820152601f60248201527f626561636f6e20696d706c656d656e746174696f6e2021636f6e7472616374006044820152606401610070565b8151156101035761010381836101ae565b5050506103b3565b6001600160a01b03163b151590565b6000806000836001600160a01b0316604051600060405180830381855afa9150503d8060008114610167576040519150601f19603f3d011682016040523d82523d6000602084013e61016c565b606091505b50915091508181906101915760405162461bcd60e51b81526004016100709190610340565b50808060200190518101906101a69190610373565b949350505050565b6000826001600160a01b0316826040516101c89190610397565b600060405180830381855af49150503d8060008114610203576040519150601f19603f3d011682016040523d82523d6000602084013e610208565b606091505b505090508061021b573d6000803e3d6000fd5b505050565b6001600160a01b038116811461023557600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b60005b83811015610269578181015183820152602001610251565b83811115610278576000848401525b50505050565b6000806040838503121561029157600080fd5b825161029c81610220565b60208401519092506001600160401b03808211156102b957600080fd5b818501915085601f8301126102cd57600080fd5b8151818111156102df576102df610238565b604051601f8201601f19908116603f0116810190838211818310171561030757610307610238565b8160405282815288602084870101111561032057600080fd5b61033183602083016020880161024e565b80955050505050509250929050565b602081526000825180602084015261035f81604085016020870161024e565b601f01601f19169190910160400192915050565b60006020828403121561038557600080fd5b815161039081610220565b9392505050565b600082516103a981846020870161024e565b9190910192915050565b6080516101e46103cd6000396000603f01526101e46000f3fe60806040523661001357610011610017565b005b6100115b610027610022610038565b610068565b565b6001600160a01b03163b151590565b60006100637f000000000000000000000000000000000000000000000000000000000000000061008c565b905090565b3660008037600080366000845af43d6000803e808015610087573d6000f35b3d6000fd5b6000806000836001600160a01b0316604051600060405180830381855afa9150503d80600081146100d9576040519150601f19603f3d011682016040523d82523d6000602084013e6100de565b606091505b509150915081819061010c5760405162461bcd60e51b81526004016101039190610129565b60405180910390fd5b5080806020019051810190610121919061017e565b949350505050565b600060208083528351808285015260005b818110156101565785810183015185820160400152820161013a565b81811115610168576000604083870101525b50601f01601f1916929092016040019392505050565b60006020828403121561019057600080fd5b81516001600160a01b03811681146101a757600080fd5b939250505056fea2646970667358221220ac321230b8b46513ac2b8ee083283b98bc4efaf0676dd2d50130e2ef328fc9eb64736f6c634300080f0033a26469706673582212209db45767c5fe3e0198f3b7750ade3363e9bd3e3def7cf3fe63ec1bb5dbc14d4564736f6c634300080f0033";

type TokenRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenRegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TokenRegistry__factory extends ContractFactory {
  constructor(...args: TokenRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TokenRegistry> {
    return super.deploy(overrides || {}) as Promise<TokenRegistry>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TokenRegistry {
    return super.attach(address) as TokenRegistry;
  }
  override connect(signer: Signer): TokenRegistry__factory {
    return super.connect(signer) as TokenRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenRegistryInterface {
    return new utils.Interface(_abi) as TokenRegistryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TokenRegistry {
    return new Contract(address, _abi, signerOrProvider) as TokenRegistry;
  }
}
