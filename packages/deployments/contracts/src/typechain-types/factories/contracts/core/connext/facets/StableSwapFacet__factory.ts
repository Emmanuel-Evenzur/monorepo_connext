/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  StableSwapFacet,
  StableSwapFacetInterface,
} from "../../../../../contracts/core/connext/facets/StableSwapFacet";

const _abi = [
  {
    inputs: [],
    name: "AssetLogic__handleIncomingAsset_feeOnTransferNotSupported",
    type: "error",
  },
  {
    inputs: [],
    name: "AssetLogic__handleIncomingAsset_nativeAssetNotSupported",
    type: "error",
  },
  {
    inputs: [],
    name: "AssetLogic__handleOutgoingAsset_notNative",
    type: "error",
  },
  {
    inputs: [],
    name: "BaseConnextFacet__getAdoptedAsset_assetNotFound",
    type: "error",
  },
  {
    inputs: [],
    name: "BaseConnextFacet__getApprovedCanonicalId_notAllowlisted",
    type: "error",
  },
  {
    inputs: [],
    name: "BaseConnextFacet__nonReentrant_reentrantCall",
    type: "error",
  },
  {
    inputs: [],
    name: "BaseConnextFacet__nonXCallReentrant_reentrantCall",
    type: "error",
  },
  {
    inputs: [],
    name: "BaseConnextFacet__onlyOwnerOrAdmin_notOwnerOrAdmin",
    type: "error",
  },
  {
    inputs: [],
    name: "BaseConnextFacet__onlyOwnerOrRouter_notOwnerOrRouter",
    type: "error",
  },
  {
    inputs: [],
    name: "BaseConnextFacet__onlyOwnerOrWatcher_notOwnerOrWatcher",
    type: "error",
  },
  {
    inputs: [],
    name: "BaseConnextFacet__onlyOwner_notOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "BaseConnextFacet__onlyProposed_notProposedOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "BaseConnextFacet__whenNotPaused_paused",
    type: "error",
  },
  {
    inputs: [],
    name: "StableSwapFacet__deadlineCheck_deadlineNotMet",
    type: "error",
  },
  {
    inputs: [],
    name: "StableSwapFacet__getSwapTokenBalance_indexOutOfRange",
    type: "error",
  },
  {
    inputs: [],
    name: "StableSwapFacet__getSwapTokenIndex_notExist",
    type: "error",
  },
  {
    inputs: [],
    name: "StableSwapFacet__getSwapToken_outOfRange",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "tokenAmounts",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "fees",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "invariant",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "lpTokenSupply",
        type: "uint256",
      },
    ],
    name: "AddLiquidity",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newAdminFee",
        type: "uint256",
      },
    ],
    name: "NewAdminFee",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newSwapFee",
        type: "uint256",
      },
    ],
    name: "NewSwapFee",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "tokenAmounts",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "lpTokenSupply",
        type: "uint256",
      },
    ],
    name: "RemoveLiquidity",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "tokenAmounts",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "fees",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "invariant",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "lpTokenSupply",
        type: "uint256",
      },
    ],
    name: "RemoveLiquidityImbalance",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "lpTokenAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "lpTokenSupply",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "boughtId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokensBought",
        type: "uint256",
      },
    ],
    name: "RemoveLiquidityOne",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokensSold",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokensBought",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint128",
        name: "soldId",
        type: "uint128",
      },
      {
        indexed: false,
        internalType: "uint128",
        name: "boughtId",
        type: "uint128",
      },
    ],
    name: "TokenSwap",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "minToMint",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "addSwapLiquidity",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "calculateRemoveSwapLiquidity",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "tokenIndex",
        type: "uint8",
      },
    ],
    name: "calculateRemoveSwapLiquidityOneToken",
    outputs: [
      {
        internalType: "uint256",
        name: "availableTokenAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "tokenIndexFrom",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "tokenIndexTo",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "dx",
        type: "uint256",
      },
    ],
    name: "calculateSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bool",
        name: "deposit",
        type: "bool",
      },
    ],
    name: "calculateSwapTokenAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
    ],
    name: "getSwapA",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
    ],
    name: "getSwapAPrecise",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getSwapAdminBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
    ],
    name: "getSwapLPToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
    ],
    name: "getSwapStorage",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "key",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "initialA",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "futureA",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "initialATime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "futureATime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "swapFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "adminFee",
            type: "uint256",
          },
          {
            internalType: "contract LPToken",
            name: "lpToken",
            type: "address",
          },
          {
            internalType: "contract IERC20[]",
            name: "pooledTokens",
            type: "address[]",
          },
          {
            internalType: "uint256[]",
            name: "tokenPrecisionMultipliers",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "balances",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "adminFees",
            type: "uint256[]",
          },
          {
            internalType: "bool",
            name: "disabled",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "removeTime",
            type: "uint256",
          },
        ],
        internalType: "struct SwapUtils.Swap",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "index",
        type: "uint8",
      },
    ],
    name: "getSwapToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "index",
        type: "uint8",
      },
    ],
    name: "getSwapTokenBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    name: "getSwapTokenIndex",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
    ],
    name: "getSwapVirtualPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "minAmounts",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "removeSwapLiquidity",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "maxBurnAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "removeSwapLiquidityImbalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "tokenIndex",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "minAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "removeSwapLiquidityOneToken",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "tokenIndexFrom",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "tokenIndexTo",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "dx",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minDy",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "swap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "assetIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "assetOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "minAmountOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "swapExact",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "assetIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "assetOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "maxAmountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "swapExactOut",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608080604052346100165761364a908161001c8239f35b600080fdfe6080604052600436101561001257600080fd5b6000803560e01c80631301caa214611e2a578063241ca57a146118ff57806329d99b10146118665780632d91a515146115bd5780634bbcba8e1461127857806374c6b89b14610e7d5780637652f59d14610e5457806376ca2e5214610df857806380b297e814610d975780638b480b1214610d615780638d3654571461073f5780638f11d27f146106e9578063a02288f41461062e578063ad94911b146105f0578063b3a4eab4146105b7578063b6618dff1461027a578063bb0577eb1461020b578063d251dc35146101d7578063f495e807146101a65763ff126de9146100f957600080fd5b346101a35760c03660031901126101a357610112611eec565b61011a611edc565b9060026016541461019157600260165560a435421161017f5760ff601a5460a01c1661016d57602092610160926004358252601885526084359260406064359320612f8e565b6001601655604051908152f35b604051633ee5b89360e01b8152600490fd5b6040516326f04e8b60e21b8152600490fd5b604051637ce54e2d60e11b8152600490fd5b80fd5b50346101a35760203660031901126101a3576101cf604060209260043581526018845220612910565b604051908152f35b50346101a35760203660031901126101a35760646102026040602093600435815260188552206121a3565b04604051908152f35b50346101a35760403660031901126101a357600435610228611eec565b8183526018602052600a60408420015460ff8216101561026857600a60408461025a9460209652601886522001612044565b90546040519160031b1c8152f35b604051634105699160e01b8152600490fd5b50346101a35760a03660031901126101a357602435610297611edc565b90600260165414610191576002601655608435421161017f5760ff601a5460a01c1661016d57600435835260209260188452604081209260018060a01b039384600782015416946040516370a0823160e01b815233600482015287816024818a5afa80156105ac57859061057d575b61031391508611156135d8565b600882019283549360ff82169485101561054c576040516318160ddd60e01b81529589876004818c5afa96871561053f57819761050b575b5061035887848a88612210565b60649a919a358b106104d5576103796402540be4009160068901549061249e565b046103cc8b6103b1876103ab85600a8d01946103a16103988588612044565b939054926124f7565b9160031b1c6121ed565b92612044565b90919082549060031b600019811b9283911b16911916179055565b806104a9575b50803b156104a55760405163079cc67960e41b8152336004820152602481018a90529082908290604490829084905af1801561049a57908a9493929161047e575b5050610434939161042391612044565b9190913392549060031b1c16613532565b54916040519384528584015260408301528260608301527f1a66f6ea1c14e22a62ab434f3414908bb5f49133d673c872c8957aa961e4c21560803393a36001601655604051908152f35b819293945061048c90611fa3565b6101a3579081899392610413565b6040513d84823e3d90fd5b5080fd5b6104cf906103b1866103ab600b8b01936104c38386612044565b90549060031b1c6124f7565b386103d2565b60405162461bcd60e51b8152600481018d9052600e60248201526d191e480f081b5a5b905b5bdd5b9d60921b6044820152606490fd5b9096508981813d8311610538575b6105238183611fd2565b810103126105335751953861034b565b600080fd5b503d610519565b50604051903d90823e3d90fd5b60405162461bcd60e51b8152600481018a905260096024820152681b9bdd08199bdd5b9960ba1b6044820152606490fd5b508781813d83116105a5575b6105938183611fd2565b81010312610533576103139051610306565b503d610589565b6040513d87823e3d90fd5b50346101a35760403660031901126101a35760206105de6105d6611eec565b600435612072565b6040516001600160a01b039091168152f35b50346101a35760403660031901126101a3576024356001600160a01b0381168103610533576106236020916004356120ce565b60ff60405191168152f35b50346101a35761063d36611e5b565b90825260209160188352604081209160048460018060a01b03600786015416604051928380926318160ddd60e01b82525afa9283156106dd57926106aa575b5061068c600a6106919401611ff3565b612ce4565b906106a6604051928284938452830190611efc565b0390f35b9291508383813d83116106d6575b6106c28183611fd2565b81010312610533579151909161068c61067c565b503d6106b8565b604051903d90823e3d90fd5b50346101a35760803660031901126101a357610736602091610709611eec565b906040610714611edc565b91600435815260188652209061072c600a8301611ff3565b92606435926129e0565b50604051908152f35b50346101a35761074e36611ea1565b6002601695939492955414610191576002601655421161017f5760ff601a5460a01c1661016d5761078c918552601860205260408520923691612135565b9061079e60ff600c8301541615612f52565b60088101549081835103610d23576107b5816121a3565b9460018060a01b03600783015416604051966107d088611f71565b828852826020890152826040890152606088015260808701528060a08701526107fb600a8301611ff3565b60c087015261080c60098301611ff3565b60e087015260808601516040516318160ddd60e01b815290602090829060049082906001600160a01b03165afa90811561049a578291610cf1575b508060a0880152610cd4575b61085c836124c5565b815b848110610bf8575061088261087760e089015183612881565b606089015190612708565b80602089015287511015610bbf57602087015160408801526108a3846124c5565b60a088015190949015610b17576108be816005860154612f1f565b835b85878b858410610a24579150506108e493506108ef94925060e09150015190612881565b606088015190612708565b60408701525b60a08601516109f5576020860151945b85106109c35760808601516001600160a01b0316803b156104a5576040516340c10f1960e01b8152336004820152602481018790529082908290604490829084905af1801561049a576109af575b50506020947fbcb1ab680ee25ef87d34ec297263a10e0a823cd81326b0aa6bc55b86cb2a418891549261099f6109918760a08a8601519501516124f7565b6040519384933398856135a3565b0390a36001601655604051908152f35b6109b98291611fa3565b6101a35780610953565b60405162461bcd60e51b815260206004820152600a60248201526936b4b73a101e1036b4b760b11b6044820152606490fd5b610a1e610a16610a0b60408901518951906121ed565b60a08901519061249e565b875190612183565b94610905565b83610acd81946103b183600a610ac68d610ac0610a94610ab78f60019f610ae79e610aab92610ada9f610a7981610a716020610a9a940151610a6a8860c08501516124b1565b519061249e565b905190612183565b916402540be400978893610a8d878d6124b1565b51906126ed565b9061249e565b04610aa583836124b1565b526124b1565b5160068a01549061249e565b049889926124b1565b516121ed565b9301612044565b6104c384600b8c01612044565b6103b183600b8b01612044565b610b06610af482876124b1565b51610aff838b6124b1565b51906121ed565b610b1082876124b1565b52016108c0565b508051906001600160401b038211610bab57680100000000000000008211610bab57600a84015482600a860155808310610b80575b50602001600a8401835260208320835b838110610b6c57505050506108f5565b600190602084519401938184015501610b5c565b600a8501845260208420908382015b8183018110610b9f575050610b4c565b60008155600101610b8f565b634e487b7160e01b83526041600452602483fd5b60405162461bcd60e51b8152602060048201526011602482015270442073686f756c6420696e63726561736560781b6044820152606490fd5b60a088015115801590610cc1575b15610c875780610c18600192886124b1565b51610c52575b610c41610c2f8260c08c01516124b1565b51610c3a838a6124b1565b51906124f7565b610c4b82856124b1565b520161085e565b610c82610c628260088801612044565b905490610c6f848b6124b1565b5191858060a01b039160031b1c166131b8565b610c1e565b60405162461bcd60e51b815260206004820152601260248201527121737570706c7920616c6c20746f6b656e7360701b6044820152606490fd5b50610ccc81876124b1565b511515610c06565b610cea6108e460c088015160e089015190612881565b8652610853565b90506020813d602011610d1b575b81610d0c60209383611fd2565b81010312610533575138610847565b3d9150610cff565b60405162461bcd60e51b81526020600482015260166024820152756d69736d6174636820706f6f6c656420746f6b656e7360501b6044820152606490fd5b50346101a35760203660031901126101a3576020906004358152601882526007604060018060a01b039220015416604051908152f35b50346101a357610da636611f30565b600260169692959493965414610191576002601655421161017f5760ff601a5460a01c1661016d57610df261016095610dec6040898560209b5260188b522094846120ce565b926120ce565b91612f8e565b50346101a35760603660031901126101a3576024356001600160401b0381116104a557610e29903690600401611e71565b604435918215158303610e5057906101cf9291604060209560043581526018875220612d7c565b8380fd5b50346101a35760203660031901126101a3576101cf6040602092600435815260188452206121a3565b50346101a357610e8c36611f30565b60026016979397969492965414610191576002601655421161017f5760ff601a5460a01c1661016d57828252610ed660209660188852610ed06040852093866120ce565b946120ce565b91610ee860ff600c8401541615612f52565b600a8201610ef68482612044565b90549060031b1c861161124357610f0c81611ff3565b60ff851660ff8716610f2082821415612a9a565b60098601610f2d81611ff3565b610f378186612881565b610f4c81518086109081611239575b5061245d565b610f988c828d610f5b8d6121a3565b610f888a610f82610f6c8487612708565b96610a6a610f7a84896124b1565b51938c6124b1565b906121ed565b610f928b856124b1565b52612504565b906001820180921161122557610fb860059392610aff87610fea946124b1565b91610fe386610fdd8d610fd56402540be40098899201548861249e565b0480966124f7565b926124b1565b5190612183565b9c8d116111f357928a8a96938e9896938e9660068d015461100a9161249e565b049161101591612044565b90549060031b1c61102591612183565b966110318892856124b1565b519061103c916124f7565b90611046916121ed565b6110508b86612044565b61106d929082549060031b600019811b9283911b16911916179055565b611076916124b1565b5190611081916121ed565b9161108b91612044565b6110a8929082549060031b600019811b9283911b16911916179055565b806111d3575b50600882016110bd8582612044565b90546040516370a0823160e01b81523360048201526001600160a01b039460039390931b9190911c841691908a81602481865afa9182156106dd57916111a6575b50881161116d578493926104237f28d4cf2d5709da3b474b5f05cfd7083faffd601f9500d1f8439b8a13ec7df320966111419461113c8c8c966131b8565b612044565b5460408051878152602081019690965260ff94851690860152921660608401523392806080810161099f565b60405162461bcd60e51b8152600481018a9052601160248201527036b7b932903a3430b7103cb7ba9037bbb760791b6044820152606490fd5b90508981813d83116111cc575b6111bd8183611fd2565b810103126105335751386110fe565b503d6111b3565b6111ed906103b1866103ab600b8701936104c38386612044565b386110ae565b60405162461bcd60e51b8152600481018f9052600a6024820152690c8f0407c40dac2f088f60b31b6044820152606490fd5b634e487b7160e01b89526011600452602489fd5b9050861038610f46565b60405162461bcd60e51b815260048101899052600d60248201526c3e706f6f6c2062616c616e636560981b6044820152606490fd5b50346101a35760803660031901126101a3576044356001600160401b0381116104a5576112a9903690600401611e71565b600260165414610191576002601655606435421161017f5760ff601a5460a01c1661016d5760043583526018602052604083209260018060a01b036007850154166040516370a0823160e01b8152336004820152602081602481855afa80156115b257839061157e575b611322915060243511156135d8565b6008850154830361154357611339600a8601611ff3565b6040516318160ddd60e01b81529390602085600481865afa948515611538578495611504575b5061136d8560243583612ce4565b95865192855b84811061143d575050505050803b156104a55760405163079cc67960e41b815233600482015260248035908201529082908290604490829084905af1801561049a57611429575b50506113ce6106a6935491602435906121ed565b907f58f96d387ac27c23fb6350424cb6b032322b14ffd82029e96aeed2c525e790e8604051604081526114046040820186611efc565b9360208201528033940390a36001601655604051918291602083526020830190611efc565b6114338291611fa3565b6101a357806113ba565b611447818a6124b1565b51611453828486612d6c565b35116114bf57806114b9818b6114a461149b8f96600860019861149561148861147d8f86906124b1565b51610aff868a6124b1565b6103b185600a8501612044565b01612044565b939054926124b1565b51913391868060a01b039160031b1c16613532565b01611373565b60405162461bcd60e51b815260206004820152601a60248201527f616d6f756e74735b695d203c206d696e416d6f756e74735b695d0000000000006044820152606490fd5b9094506020813d602011611530575b8161152060209383611fd2565b810103126105335751933861135f565b3d9150611513565b6040513d86823e3d90fd5b60405162461bcd60e51b81526020600482015260136024820152726d69736d6174636820706f6f6c546f6b656e7360681b6044820152606490fd5b506020813d6020116115aa575b8161159860209383611fd2565b81010312610533576113229051611313565b3d915061158b565b6040513d85823e3d90fd5b50346101a35760203660031901126101a357806101a06040516115df81611fb6565b8281528260208201528260408201528260608201528260808201528260a08201528260c08201528260e0820152606061010082015260606101208201526060610140820152606061016082015282610180820152015260043581526018602052604081206040519061165082611fb6565b8054825260018101546020830152600281015460408301526003810154606083015260048101546080830152600581015460a0830152600681015460c083015260018060a01b0360078201541660e08301526008810160405190816020825491828152019186526020862090865b81811061184757505050906116d881600d94930382611fd2565b6101008401526116ea60098201611ff3565b6101208401526116fc600a8201611ff3565b61014084015261170e600b8201611ff3565b61016084015260ff600c82015416151561018084015201546101a0820152604051906020825280516020830152602081015160408301526040810151606083015260608101516080830152608081015160a083015260a081015160c083015260c081015160e083015260018060a01b0360e082015116610100830152610100810151926101c090816101208501526101e084018551809152602061020086019601915b818110611828575050506101a061181184956117fa6117e461012087015192601f1993848a8303016101408b0152611efc565b61014087015183898303016101608a0152611efc565b906101608601519087830301610180880152611efc565b926101808101511515828601520151908301520390f35b82516001600160a01b03168752602096870196909201916001016117b1565b82546001600160a01b03168452602090930192600192830192016116be565b50346101a35760603660031901126101a3576004611882611edc565b918135815260209260188452604082208460018060a01b03600783015416604051958680926318160ddd60e01b82525afa9283156106dd57926118ce575b610736935060243590612210565b91508383813d83116118f8575b6118e58183611fd2565b81010312610533576107369251916118c0565b503d6118db565b50346101a35761190e36611ea1565b600260169694929593965414610191576002601655421161017f5760ff601a5460a01c1661016d5761194d918352601860205260408320943691612135565b90611957846121a3565b60018060a01b036007860154166040519161197183611f71565b838352836020840152836040840152606083015260808201528160a082015261199c600a8601611ff3565b60c08201526119ad60098601611ff3565b60e082015260808101516040516318160ddd60e01b815290602090829060049082906001600160a01b03165afa9081156115b2578391611df4575b5060a08201526008850194855480855103611db85760808301516040516370a0823160e01b815233600482015290602090829060249082906001600160a01b03165afa9081156105ac578591611d82575b5086111580611d79575b611a4c906135d8565b611a5a816005840154612f1f565b93611a64826124c5565b94611a6e836124c5565b90611a856108e460c088015160e089015190612881565b8652825b848110611ce55750611aa26108e460e088015184612881565b6020870152825b858888878410611c765760e00151611af495611aec9550611ae19450611ad493506108779250612881565b80604089015287516121ed565b60a08701519061249e565b855190612183565b968715611c4257600188018811611c2e576001880111611be95760808401516001600160a01b0316803b156104a55760405163079cc67960e41b81523360048201526001890160248201529082908290604490829084905af1801561049a57611bda575b505b818110611bb857505060209550907fa404896827f41a3845de89f154bf1f4fe5cbdf79da7c7805263a3d0b7de9e672915492611ba5610991888401519360a060018a019101516121ed565b0390a36001601655600160405191018152f35b80611bd4611bc86001938b612044565b90546114a4848b6124b1565b01611b5a565b611be390611fa3565b38611b58565b60405162461bcd60e51b815260206004820152601b60248201527f746f6b656e416d6f756e74203e206d61784275726e416d6f756e7400000000006044820152606490fd5b634e487b7160e01b82526011600452602482fd5b60405162461bcd60e51b815260206004820152600c60248201526b085e995c9bc8185b5bdd5b9d60a21b6044820152606490fd5b83610acd81946103b183600a610ac68c610ac0610a94610ab78f60019f611cbc9e610aab92610ada9f610a7981610a716020610a9a940151610a6a8860c08501516124b1565b611cd4611cc982866124b1565b51610aff838c6124b1565b611cde82866124b1565b5201611aa9565b611cf38160c08901516124b1565b51611cfe828b6124b1565b5111611d345780611d1560019260c08a01516124b1565b51611d20828c6124b1565b519003611d2d82866124b1565b5201611a89565b60405162461bcd60e51b815260206004820152601c60248201527f7769746864726177206d6f7265207468616e20617661696c61626c65000000006044820152606490fd5b50851515611a43565b90506020813d602011611db0575b81611d9d60209383611fd2565b81010312611dac575138611a39565b8480fd5b3d9150611d90565b60405162461bcd60e51b81526020600482015260146024820152736d69736d6174636820706f6f6c20746f6b656e7360601b6044820152606490fd5b90506020813d602011611e22575b81611e0f60209383611fd2565b81010312611e1e5751386119e8565b8280fd5b3d9150611e02565b50346101a35761025a602091600b6040611e4336611e5b565b9390815260188652206114956008820154841061245d565b6040906003190112610533576004359060243590565b9181601f84011215610533578235916001600160401b038311610533576020808501948460051b01011161053357565b9060806003198301126105335760043591602435906001600160401b03821161053357611ed091600401611e71565b90916044359060643590565b6044359060ff8216820361053357565b6024359060ff8216820361053357565b90815180825260208080930193019160005b828110611f1c575050505090565b835185529381019392810192600101611f0e565b60c09060031901126105335760043590602435906001600160a01b039060443582811681036105335791606435908116810361053357906084359060a43590565b61010081019081106001600160401b03821117611f8d57604052565b634e487b7160e01b600052604160045260246000fd5b6001600160401b038111611f8d57604052565b6101c081019081106001600160401b03821117611f8d57604052565b90601f801991011681019081106001600160401b03821117611f8d57604052565b9060405191828154918282526020928383019160005283600020936000905b82821061202a5750505061202892500383611fd2565b565b855484526001958601958895509381019390910190612012565b805482101561205c5760005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b9081600052601860205260086040600020015460ff821610156120bd576120a89160005260186020526008604060002001612044565b905460039190911b1c6001600160a01b031690565b60405162e6731760e41b8152600490fd5b9081600052601960205260406000209060018060a01b03809116918260005260205261210360ff604060002054168094612072565b160361210c5790565b60405163336752bb60e01b8152600490fd5b6001600160401b038111611f8d5760051b60200190565b92916121408261211e565b9161214e6040519384611fd2565b829481845260208094019160051b810192831161053357905b8282106121745750505050565b81358152908301908301612167565b811561218d570490565b634e487b7160e01b600052601260045260246000fd5b600481015460028201549160018101549083821415806121e4575b6121c9575b50505090565b600301549283830393420302914290030201043880806121c3565b508242106121be565b919082039182116121fa57565b634e487b7160e01b600052601160045260246000fd5b90919392936009820191612238612229600a8301611ff3565b61223285611ff3565b90612881565b9081519661224b60ff851698891061245d565b60405160a081018181106001600160401b03821117611f8d5760405260009283825260208201918483526040810198858a5260608201908682526122b86080840196610f826122a561229c886121a3565b808b528c612708565b918287526122b3838661249e565b612183565b85526122c48d896124b1565b5110612424576122d98551888a875192612504565b8a526122f560056122ea89516124c5565b940154885190612f1f565b8152865191865b8d8c8a86841061239057505061232e9796945085610f829694508b935061232392506124b1565b519451925192612504565b60001981019190821161237c5750826103ab8593610ac061236a61235d9561235d612374996123799c9b612044565b90549060031b1c90612183565b9a8b9851926124b1565b6121ed565b90565b634e487b7160e01b81526011600452602490fd5b91886123e5926123a386600197966124b1565b519285036123f6576123d66123de916123ce6123c66402540be40095518761249e565b8a5190612183565b9051906121ed565b88519061249e565b04906121ed565b6123ef82886124b1565b52016122fc565b506123de61241f6124196124116402540be40094518661249e565b895190612183565b846121ed565b6123d6565b60405162461bcd60e51b81526020600482015260116024820152706578636565647320617661696c61626c6560781b6044820152606490fd5b1561246457565b60405162461bcd60e51b8152602060048201526012602482015271696e646578206f7574206f662072616e676560701b6044820152606490fd5b818102929181159184041417156121fa57565b805182101561205c5760209160051b010190565b906124cf8261211e565b6124dc6040519182611fd2565b82815280926124ed601f199161211e565b0190602036910137565b919082018092116121fa57565b8251600095939260ff16818110156126b657858091612524848a9661249e565b95895b8581106126625750505061253a9161249e565b9060648202918083046064149015171561264e579061255c612562928561249e565b90612183565b91606485028581046064148615171561264e57612589929161258391612183565b906124f7565b8490845b61010083106125db5760405162461bcd60e51b815260206004820152601e60248201527f417070726f78696d6174696f6e20646964206e6f7420636f6e766572676500006044820152606490fd5b80926125f0856125eb848061249e565b6124f7565b9160019281841b60029280820484149015171561263a576126239161255c8b6123748961261c956124f7565b95866126ed565b1061262f57019161258d565b505050925050915090565b634e487b7160e01b8b52601160045260248bfd5b634e487b7160e01b87526011600452602487fd5b90919283820361267a575b5060010191908892612527565b6126996126ad91612693849799610c3a600196886124b1565b9861249e565b61255c876126a788876124b1565b5161249e565b9390508861266d565b60405162461bcd60e51b815260206004820152600f60248201526e151bdad95b881b9bdd08199bdd5b99608a1b6044820152606490fd5b908082116126ff5790612379916121ed565b612379916121ed565b909160009180518390845b8181106128695750811561286157939461272e85839261249e565b9286606319850197858911946001998a8a0193848b11965b610100821061278a5760405162461bcd60e51b81526020600482015260136024820152724420646f6573206e6f7420636f6e766572676560681b6044820152606490fd5b80858e8e5b821061282f5750508a93929185828f816127c28f96926125836127c7949b6127ba606498899261249e565b04918861249e565b61249e565b9361122557906127d98c93928761249e565b049161281b5760029261255c6127fd936125836127f6948d61249e565b94856126ed565b1061280b578c019091612746565b5050985050505050505050915090565b634e487b7160e01b88526011600452602488fd5b90989194939d92612843866128519261249e565b61255c856126a78d876124b1565b98019097919c9293908e8e61278f565b505050915090565b9161287a600191610c3a85876124b1565b9201612713565b90815190805182036128d457612896826124c5565b9260005b8381106128a8575050505090565b806128c36128b8600193856124b1565b51610a6a83876124b1565b6128cd82886124b1565b520161289a565b60405162461bcd60e51b81526020600482015260146024820152736d69736d61746368206d756c7469706c6965727360601b6044820152606490fd5b60046020612941612932612926600a8601611ff3565b61223260098701611ff3565b61293b856121a3565b90612708565b6007909301546040516318160ddd60e01b815292839182906001600160a01b03165afa9081156129d4576000916129a3575b5080612980575050600090565b670de0b6b3a7640000918281029281840414901517156121fa5761237991612183565b906020823d82116129cc575b816129bc60209383611fd2565b810103126101a357505138612973565b3d91506129af565b6040513d6000823e3d90fd5b9391610ac060ff612a4f612a1995612a589585612a40612a34610c3a612a39610a6a9d8f6009612a109101611ff3565b9d8e8099612881565b9e8f988951908c8a169682889384109081612a8e575061245d565b6124b1565b91866124b1565b91612a4a8c6121a3565b612ae6565b921680956124b1565b6000198101939084116121fa57612a8b92610fdd6402540be400612a836005610fe39501548861249e565b0480966121ed565b91565b90508e8b161038610f46565b15612aa157565b60405162461bcd60e51b815260206004820152601760248201527f636f6d7061726520746f6b656e20746f20697473656c660000000000000000006044820152606490fd5b909194929460009560ff80875193169416612b0385821415612a9a565b82811080612cdb575b15612ca4579593612b1d8486612708565b9081978893612b2d8b978761249e565b978b935b878510612c2457505050505090612b479161249e565b9060648202918083046064149015171561264e579061255c612b69928561249e565b91606485028581046064148615171561264e57612b8a929161258391612183565b8490845b6101008310612bdc5760405162461bcd60e51b815260206004820152601e60248201527f417070726f78696d6174696f6e20646964206e6f7420636f6e766572676500006044820152606490fd5b8092612bec856125eb848061249e565b9160019281841b60029280820484149015171561263a57612c189161255c8b6123748961261c956124f7565b1061262f570191612b8e565b919395879084889a9395979a14600014612c6c579161255c612c5d92612c57600195612c518a80966124f7565b9d61249e565b9261249e565b9501935b918a95949391612b31565b9050868314612c985760019161255c89612c57612c5d94612c51612c908d8b6124b1565b5180966124f7565b50969460010193612c61565b60405162461bcd60e51b815260206004820152600f60248201526e1d1bdad95b881b9bdd08199bdd5b99608a1b6044820152606490fd5b50828510612b0c565b91808211612d3157825191612cf8836124c5565b9360005b848110612d0b57505050505090565b80612d20856122b3866126a7600196886124b1565b612d2a82896124b1565b5201612cfc565b60405162461bcd60e51b815260206004820152601360248201527265786365656420746f74616c20737570706c7960681b6044820152606490fd5b919081101561205c5760051b0190565b909392612d8b600a8301611ff3565b94855195868503612eda57612d9f846121a3565b96612dac60098601611ff3565b92612dc089612dbb8686612881565b612708565b9660005b838110612e6f575050505060049596612dbb602093612de293612881565b6007909301546040516318160ddd60e01b815295869182906001600160a01b03165afa9384156129d457600094612e3c575b5015612e2b57612379926127c2836122b3936121ed565b612379926127c26122b392846121ed565b90936020823d8211612e67575b81612e5660209383611fd2565b810103126101a35750519238612e14565b3d9150612e49565b6001908715612eaa57612e98612e8582886124b1565b51612e91838688612d6c565b35906124f7565b612ea282886124b1565b525b01612dc4565b612eca612eb782886124b1565b51612ec3838688612d6c565b35906121ed565b612ed482886124b1565b52612ea4565b60405162461bcd60e51b815260206004820152601960248201527f696e76616c6964206c656e677468206f6620616d6f756e7473000000000000006044820152606490fd5b81612f299161249e565b9060001981019081116121fa578060021b90808204600414901517156121fa5761237991612183565b15612f5957565b60405162461bcd60e51b815260206004820152600d60248201526c191a5cd8589b1959081c1bdbdb609a1b6044820152606490fd5b919091612fa260ff600c8301541615612f52565b60088101612fb08482612044565b90546040516370a0823160e01b81523360048201526001600160a01b03939260209260039190911b1c8416908281602481855afa9081156129d45760009161318b575b50881161314d5787613004916131b8565b600a84019061301282611ff3565b90613020828a898b8a6129e0565b91909a8b1061311c5750866130d4946130b76130c88d966103b1858f8f907f28d4cf2d5709da3b474b5f05cfd7083faffd601f9500d1f8439b8a13ec7df3209f9e9d9a8c8f612374926130be6103ab966104239f6130a18561235d8c60096402540be4006130996103b1976006610ac09d01549061249e565b049301612044565b9d8e986130b160ff8516876124b1565b516124f7565b918c612044565b60ff8716906124b1565b806130fc575b50612044565b54604080519586526020860187905260ff94851690860152921660608401523392608090a390565b613116906103b1846103ab600b8c01936104c38386612044565b386130ce565b6064906040519062461bcd60e51b82526004820152600a6024820152696479203c206d696e447960b01b6044820152fd5b60405162461bcd60e51b815260048101839052601660248201527539bbb0b81036b7b932903a3430b7103cb7ba9037bbb760511b6044820152606490fd5b908382813d83116131b1575b6131a18183611fd2565b810103126101a357505138612ff3565b503d613197565b8115613316576001600160a01b031690811561330457604080516370a0823160e01b80825230600483015291936020928383602481855afa9283156132f9576000936132ca575b5085516323b872dd60e01b85820152336024820152306044820152606480820187905281529060a082016001600160401b03811183821017611f8d5785926132499189528461331a565b602487518094819382523060048301525afa9081156132bf5760009161328d575b5061327592506121ed565b0361327d5750565b51630e40773560e21b8152600490fd5b919282813d83116132b8575b6132a38183611fd2565b810103126101a357509061327591513861326a565b503d613299565b85513d6000823e3d90fd5b90928482813d83116132f2575b6132e18183611fd2565b810103126101a357505191386131ff565b503d6132d7565b86513d6000823e3d90fd5b604051632a38b13360e01b8152600490fd5b5050565b60018060a01b031690604051604081016001600160401b039082811082821117611f8d576040526020938483527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564858401526000808587829751910182855af1903d15613453573d92831161343f57906133b4939291604051926133a788601f19601f8401160185611fd2565b83523d868885013e61345e565b8051806133c2575b50505050565b818491810103126104a557820151908115918215036101a357506133e8578080806133bc565b6084906040519062461bcd60e51b82526004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152fd5b634e487b7160e01b85526041600452602485fd5b906133b49392506060915b919290156134c05750815115613472575090565b3b1561347b5790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b8251909150156134d35750805190602001fd5b6040519062461bcd60e51b82528160208060048301528251908160248401526000935b828510613519575050604492506000838284010152601f80199101168101030190fd5b84810182015186860160440152938101938593506134f6565b919091811561359e576001600160a01b0316801561358c5760405163a9059cbb60e01b60208201526001600160a01b039390931660248401526044808401929092529082526120289190613587606483611fd2565b61331a565b604051633a48ca7b60e11b8152600490fd5b505050565b906060926135c06135ce9297969597608085526080850190611efc565b908382036020850152611efc565b9460408201520152565b156135df57565b60405162461bcd60e51b815260206004820152600d60248201526c1f2628173130b630b731b2a7b360991b6044820152606490fdfea2646970667358221220a1eae12ad3cdba0d3a39e38f5dc4f508d3a005ba67a8f0c9f9ecd6cda89d958c64736f6c63430008110033";

type StableSwapFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StableSwapFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StableSwapFacet__factory extends ContractFactory {
  constructor(...args: StableSwapFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<StableSwapFacet> {
    return super.deploy(overrides || {}) as Promise<StableSwapFacet>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): StableSwapFacet {
    return super.attach(address) as StableSwapFacet;
  }
  override connect(signer: Signer): StableSwapFacet__factory {
    return super.connect(signer) as StableSwapFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StableSwapFacetInterface {
    return new utils.Interface(_abi) as StableSwapFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StableSwapFacet {
    return new Contract(address, _abi, signerOrProvider) as StableSwapFacet;
  }
}
