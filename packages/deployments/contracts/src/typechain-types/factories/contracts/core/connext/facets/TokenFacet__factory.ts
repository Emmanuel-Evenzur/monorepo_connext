/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  TokenFacet,
  TokenFacetInterface,
} from "../../../../../contracts/core/connext/facets/TokenFacet";

const _abi = [
  {
    inputs: [],
    name: "AssetLogic__getConfig_notRegistered",
    type: "error",
  },
  {
    inputs: [],
    name: "BaseConnextFacet__getAdoptedAsset_assetNotFound",
    type: "error",
  },
  {
    inputs: [],
    name: "BaseConnextFacet__getApprovedCanonicalId_notAllowlisted",
    type: "error",
  },
  {
    inputs: [],
    name: "BaseConnextFacet__nonReentrant_reentrantCall",
    type: "error",
  },
  {
    inputs: [],
    name: "BaseConnextFacet__nonXCallReentrant_reentrantCall",
    type: "error",
  },
  {
    inputs: [],
    name: "BaseConnextFacet__onlyOwnerOrAdmin_notOwnerOrAdmin",
    type: "error",
  },
  {
    inputs: [],
    name: "BaseConnextFacet__onlyOwnerOrRouter_notOwnerOrRouter",
    type: "error",
  },
  {
    inputs: [],
    name: "BaseConnextFacet__onlyOwnerOrWatcher_notOwnerOrWatcher",
    type: "error",
  },
  {
    inputs: [],
    name: "BaseConnextFacet__onlyOwner_notOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "BaseConnextFacet__onlyProposed_notProposedOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "BaseConnextFacet__whenNotPaused_paused",
    type: "error",
  },
  {
    inputs: [],
    name: "TokenFacet__addAssetId_alreadyAdded",
    type: "error",
  },
  {
    inputs: [],
    name: "TokenFacet__addAssetId_badBurn",
    type: "error",
  },
  {
    inputs: [],
    name: "TokenFacet__addAssetId_badMint",
    type: "error",
  },
  {
    inputs: [],
    name: "TokenFacet__enrollAdoptedAndLocalAssets_emptyCanonical",
    type: "error",
  },
  {
    inputs: [],
    name: "TokenFacet__removeAssetId_invalidParams",
    type: "error",
  },
  {
    inputs: [],
    name: "TokenFacet__removeAssetId_notAdded",
    type: "error",
  },
  {
    inputs: [],
    name: "TokenFacet__removeAssetId_remainsCustodied",
    type: "error",
  },
  {
    inputs: [],
    name: "TokenFacet__setLiquidityCap_notCanonicalDomain",
    type: "error",
  },
  {
    inputs: [],
    name: "TokenFacet__setupAssetWithDeployedRepresentation_invalidRepresentation",
    type: "error",
  },
  {
    inputs: [],
    name: "TokenFacet__setupAssetWithDeployedRepresentation_onCanonicalDomain",
    type: "error",
  },
  {
    inputs: [],
    name: "TokenFacet__setupAsset_invalidCanonicalConfiguration",
    type: "error",
  },
  {
    inputs: [],
    name: "TokenFacet__setupAsset_representationListed",
    type: "error",
  },
  {
    inputs: [],
    name: "TokenFacet__transferTokenOwnership_localNotFound",
    type: "error",
  },
  {
    inputs: [],
    name: "TokenFacet__transferTokenOwnership_nonzeroSupply",
    type: "error",
  },
  {
    inputs: [],
    name: "TokenFacet__transferTokenOwnership_notApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "TokenFacet__transferTokenOwnership_onlyRemote",
    type: "error",
  },
  {
    inputs: [],
    name: "TokenFacet__updateDetails_localNotFound",
    type: "error",
  },
  {
    inputs: [],
    name: "TokenFacet__updateDetails_notApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "TokenFacet__updateDetails_onlyRemote",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "canonicalId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "adoptedAsset",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "localAsset",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "AssetAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "AssetRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "canonicalId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "cap",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "LiquidityCapUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "canonicalId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "swapPool",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "StableSwapAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "representation",
        type: "address",
      },
    ],
    name: "TokenDeployed",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "domain",
            type: "uint32",
          },
          {
            internalType: "bytes32",
            name: "id",
            type: "bytes32",
          },
        ],
        internalType: "struct TokenId",
        name: "_canonical",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "_stableSwapPool",
        type: "address",
      },
    ],
    name: "addStableSwapPool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_adopted",
        type: "address",
      },
    ],
    name: "adoptedToCanonical",
    outputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "domain",
            type: "uint32",
          },
          {
            internalType: "bytes32",
            name: "id",
            type: "bytes32",
          },
        ],
        internalType: "struct TokenId",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "domain",
            type: "uint32",
          },
          {
            internalType: "bytes32",
            name: "id",
            type: "bytes32",
          },
        ],
        internalType: "struct TokenId",
        name: "_canonical",
        type: "tuple",
      },
    ],
    name: "adoptedToLocalExternalPools",
    outputs: [
      {
        internalType: "contract IStableSwap",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_key",
        type: "bytes32",
      },
    ],
    name: "adoptedToLocalExternalPools",
    outputs: [
      {
        internalType: "contract IStableSwap",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_key",
        type: "bytes32",
      },
    ],
    name: "approvedAssets",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "domain",
            type: "uint32",
          },
          {
            internalType: "bytes32",
            name: "id",
            type: "bytes32",
          },
        ],
        internalType: "struct TokenId",
        name: "_canonical",
        type: "tuple",
      },
    ],
    name: "approvedAssets",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_key",
        type: "bytes32",
      },
    ],
    name: "canonicalToAdopted",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "domain",
            type: "uint32",
          },
          {
            internalType: "bytes32",
            name: "id",
            type: "bytes32",
          },
        ],
        internalType: "struct TokenId",
        name: "_canonical",
        type: "tuple",
      },
    ],
    name: "canonicalToAdopted",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_key",
        type: "bytes32",
      },
    ],
    name: "canonicalToRepresentation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "domain",
            type: "uint32",
          },
          {
            internalType: "bytes32",
            name: "id",
            type: "bytes32",
          },
        ],
        internalType: "struct TokenId",
        name: "_canonical",
        type: "tuple",
      },
    ],
    name: "canonicalToRepresentation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_key",
        type: "bytes32",
      },
    ],
    name: "getCustodiedAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_id",
        type: "bytes32",
      },
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
    ],
    name: "getLocalAndAdoptedToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_candidate",
        type: "address",
      },
    ],
    name: "getTokenId",
    outputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "domain",
            type: "uint32",
          },
          {
            internalType: "bytes32",
            name: "id",
            type: "bytes32",
          },
        ],
        internalType: "struct TokenId",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "domain",
            type: "uint32",
          },
          {
            internalType: "bytes32",
            name: "id",
            type: "bytes32",
          },
        ],
        internalType: "struct TokenId",
        name: "_canonical",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "_adoptedAssetId",
        type: "address",
      },
      {
        internalType: "address",
        name: "_representation",
        type: "address",
      },
    ],
    name: "removeAssetId",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_key",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "_adoptedAssetId",
        type: "address",
      },
      {
        internalType: "address",
        name: "_representation",
        type: "address",
      },
    ],
    name: "removeAssetId",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_representation",
        type: "address",
      },
    ],
    name: "representationToCanonical",
    outputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "domain",
            type: "uint32",
          },
          {
            internalType: "bytes32",
            name: "id",
            type: "bytes32",
          },
        ],
        internalType: "struct TokenId",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "domain",
            type: "uint32",
          },
          {
            internalType: "bytes32",
            name: "id",
            type: "bytes32",
          },
        ],
        internalType: "struct TokenId",
        name: "_canonical",
        type: "tuple",
      },
      {
        internalType: "uint8",
        name: "_canonicalDecimals",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "_representationName",
        type: "string",
      },
      {
        internalType: "string",
        name: "_representationSymbol",
        type: "string",
      },
      {
        internalType: "address",
        name: "_adoptedAssetId",
        type: "address",
      },
      {
        internalType: "address",
        name: "_stableSwapPool",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_cap",
        type: "uint256",
      },
    ],
    name: "setupAsset",
    outputs: [
      {
        internalType: "address",
        name: "_local",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "domain",
            type: "uint32",
          },
          {
            internalType: "bytes32",
            name: "id",
            type: "bytes32",
          },
        ],
        internalType: "struct TokenId",
        name: "_canonical",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "_representation",
        type: "address",
      },
      {
        internalType: "address",
        name: "_adoptedAssetId",
        type: "address",
      },
      {
        internalType: "address",
        name: "_stableSwapPool",
        type: "address",
      },
    ],
    name: "setupAssetWithDeployedRepresentation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "domain",
            type: "uint32",
          },
          {
            internalType: "bytes32",
            name: "id",
            type: "bytes32",
          },
        ],
        internalType: "struct TokenId",
        name: "_canonical",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "_newOwner",
        type: "address",
      },
    ],
    name: "transferTokenOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "domain",
            type: "uint32",
          },
          {
            internalType: "bytes32",
            name: "id",
            type: "bytes32",
          },
        ],
        internalType: "struct TokenId",
        name: "_canonical",
        type: "tuple",
      },
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
    ],
    name: "updateDetails",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "domain",
            type: "uint32",
          },
          {
            internalType: "bytes32",
            name: "id",
            type: "bytes32",
          },
        ],
        internalType: "struct TokenId",
        name: "_canonical",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "_updated",
        type: "uint256",
      },
    ],
    name: "updateLiquidityCap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50613c6e806100206000396000f3fe60806040523480156200001157600080fd5b5060043610620001515760003560e01c80639b59851911620000c7578063b64a5e071162000086578063b64a5e07146200040b578063bd8671a71462000422578063c40584291462000439578063e1cb39581462000450578063e9d7bcec1462000467578063f1537686146200047e57600080fd5b80639b5985191462000380578063a1b1930114620003af578063ad4c777114620003c6578063ae8bc0de14620003dd578063b21caef714620003f457600080fd5b806357bd0a32116200011457806357bd0a3214620002785780635a2164e514620002b95780636006209114620002d057806380dc22481462000334578063949de969146200034b57600080fd5b806303e418c2146200015657806307a38d7b14620001e05780631506e46314620002185780631ecf6f9f14620002315780632c1999d01462000261575b600080fd5b620001ba6200016736600462001cca565b6040805180820190915260008082526020820152506040805180820182526001600160a01b03909216600081815260066020818152938220805463ffffffff168652929091528252600101549082015290565b60408051825163ffffffff16815260209283015192810192909252015b60405180910390f35b620001f7620001f136600462001cfd565b62000495565b604080516001600160a01b03938416815292909116602083015201620001d7565b6200022f6200022936600462001d45565b620004bb565b005b620002486200024236600462001d75565b62000557565b6040516001600160a01b039091168152602001620001d7565b620002486200027236600462001d75565b6200056a565b620002a86200028936600462001d75565b600090815260076020526040902060020154600160a01b900460ff1690565b6040519015158152602001620001d7565b6200022f620002ca36600462001d8f565b62000577565b620001ba620002e136600462001cca565b6040805180820190915260008082526020820152506040805180820182526001600160a01b03909216600081815260056020818152938220805463ffffffff168652929091528252600101549082015290565b620002486200034536600462001dda565b6200061f565b620003716200035c36600462001d75565b60009081526007602052604090206004015490565b604051908152602001620001d7565b620002486200039136600462001d75565b6000908152600760205260409020600201546001600160a01b031690565b6200022f620003c036600462001df9565b6200063c565b62000248620003d736600462001dda565b620006e9565b620002a8620003ee36600462001dda565b6200070c565b6200022f6200040536600462001d45565b62000729565b620002486200041c36600462001eef565b62000947565b620002486200043336600462001dda565b62000b18565b6200022f6200044a36600462001fb2565b62000b3b565b620002486200046136600462002030565b62000cd7565b6200022f620004783660046200208e565b62000e47565b620001ba6200048f36600462001cca565b62000ed8565b600080620004b0620004a8858562000ef7565b858562000f3a565b915091509250929050565b33620004c662000f6b565b6001600160a01b03161415801562000505575060033360009081526014602052604090205460ff166003811115620005025762000502620020bc565b14155b156200052457604051637b32c26b60e01b815260040160405180910390fd5b600062000543602084018035906200053d9086620020d2565b62000ef7565b90506200055283838362000f99565b505050565b6000620005648262001034565b92915050565b6000620005648262001053565b336200058262000f6b565b6001600160a01b031614158015620005c1575060033360009081526014602052604090205460ff166003811115620005be57620005be620020bc565b14155b15620005e057604051637b32c26b60e01b815260040160405180910390fd5b6000620005f9602085018035906200053d9087620020d2565b9050620006198184846200061336899003890189620020f0565b6200108f565b50505050565b60006200056462000391602084018035906200053d9086620020d2565b336200064762000f6b565b6001600160a01b03161415801562000686575060033360009081526014602052604090205460ff166003811115620006835762000683620020bc565b14155b15620006a557604051637b32c26b60e01b815260040160405180910390fd5b6001600160a01b0382166000908152600560209081526040918290208251808401909352805463ffffffff168352600101549082015262000619848484846200108f565b60006200056462000706602084018035906200053d9086620020d2565b62001034565b60006200056462000289602084018035906200053d9086620020d2565b336200073462000f6b565b6001600160a01b03161415801562000773575060033360009081526014602052604090205460ff166003811115620007705762000770620020bc565b14155b156200079257604051637b32c26b60e01b815260040160405180910390fd5b6000620007ab602084018035906200053d9086620020d2565b90506000620007ba826200130d565b546001600160a01b0316905080620007e55760405163de3f231760e01b815260040160405180910390fd5b620007f46020850185620020d2565b60045463ffffffff9182169116036200082057604051630d6502fd60e31b815260040160405180910390fd5b600082815260076020526040902060020154600160a01b900460ff166200085a5760405163012cae9360e31b815260040160405180910390fd5b6000816001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200089b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620008c191906200214d565b1115620008e457604051600162cde7d360e01b0319815260040160405180910390fd5b60405163f2fde38b60e01b81526001600160a01b03848116600483015282169063f2fde38b90602401600060405180830381600087803b1580156200092857600080fd5b505af11580156200093d573d6000803e3d6000fd5b5050505050505050565b6000336200095462000f6b565b6001600160a01b03161415801562000993575060033360009081526014602052604090205460ff166003811115620009905762000990620020bc565b14155b15620009b257604051637b32c26b60e01b815260040160405180910390fd5b6000620009cb60208a018035906200053d908c620020d2565b60045490915060009063ffffffff16620009e960208c018c620020d2565b63ffffffff16149050801562000a795760208a013592506001600160a01b0386161580159062000a2b5750826001600160a01b0316866001600160a01b031614155b8062000a3f57506001600160a01b03851615155b1562000a5e5760405163022d833560e01b815260040160405180910390fd5b62000a7360018a60008660008f8a8962001356565b62000b0b565b6000828152600760205260409020546001600160a01b031615158062000ab65750600082815260076020526040902054600160a01b900460ff1615155b1562000ad55760405163ae154e0360e01b815260040160405180910390fd5b62000af560208b0180359062000aec908d620020d2565b8b8b8b62001939565b925062000b0b60008a8886898f60008962001356565b5050979650505050505050565b60006200056462000b35602084018035906200053d9086620020d2565b62001053565b3362000b4662000f6b565b6001600160a01b03161415801562000b85575060033360009081526014602052604090205460ff16600381111562000b825762000b82620020bc565b14155b1562000ba457604051637b32c26b60e01b815260040160405180910390fd5b600062000bbd602085018035906200053d9087620020d2565b9050600062000bcc826200130d565b546001600160a01b031690508062000bf757604051639db40a2560e01b815260040160405180910390fd5b62000c066020860186620020d2565b60045463ffffffff91821691160362000c3257604051630e5a87cb60e21b815260040160405180910390fd5b600082815260076020526040902060020154600160a01b900460ff1662000c6c57604051634d665d9960e01b815260040160405180910390fd5b604051635bd8487760e11b81526001600160a01b0382169063b7b090ee9062000c9c9087908790600401620021af565b600060405180830381600087803b15801562000cb757600080fd5b505af115801562000ccc573d6000803e3d6000fd5b505050505050505050565b60003362000ce462000f6b565b6001600160a01b03161415801562000d23575060033360009081526014602052604090205460ff16600381111562000d205762000d20620020bc565b14155b1562000d4257604051637b32c26b60e01b815260040160405180910390fd5b6001600160a01b03841662000d6a57604051631363580360e21b815260040160405180910390fd5b60045463ffffffff1662000d826020870187620020d2565b63ffffffff160362000da75760405163333de67d60e21b815260040160405180910390fd5b600062000dc0602087018035906200053d9089620020d2565b905062000e3a6000866001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000e07573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000e2d9190620021e1565b8688878b60008862001356565b849150505b949350505050565b3362000e5262000f6b565b6001600160a01b03161415801562000e91575060033360009081526014602052604090205460ff16600381111562000e8e5762000e8e620020bc565b14155b1562000eb057604051637b32c26b60e01b815260040160405180910390fd5b600062000ec9602084018035906200053d9086620020d2565b905062000552838383620019c1565b6040805180820190915260008082526020820152620005648262001aff565b6000828260405160200162000f1c92919091825263ffffffff16602082015260400190565b60405160208183030381529060405280519060200120905092915050565b600080600062000f4e868686600062001b20565b9050600062000f5d8762001053565b919791965090945050505050565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c1320546001600160a01b031690565b600081815260076020908152604090912060020180546001600160a01b0319166001600160a01b03851617905562000fd490840184620020d2565b63ffffffff168360200135827f16285b1cf634d546d51fefe55f6e63e5edf970d2a3d2bd50b55a8cfad25e8b568533604051620010279291906001600160a01b0392831681529116602082015260400190565b60405180910390a4505050565b60008062001042836200130d565b546001600160a01b03169392505050565b60008062001061836200130d565b600101546001600160a01b03169050806200056457604051630558a50760e31b815260040160405180910390fd5b60008481526007602052604090206002810154600160a01b900460ff16620010ca57604051631c999e7d60e11b815260040160405180910390fd5b60018101546001600160a01b038581169116141580620010f7575080546001600160a01b03848116911614155b1562001116576040516318707fc960e31b815260040160405180910390fd5b815160045463ffffffff9081169116148015620011d35760006200113b846020015190565b6040516370a0823160e01b81523060048201529091506000906001600160a01b038316906370a0823190602401602060405180830381865afa15801562001186573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620011ac91906200214d565b1115620011cc5760405163454732f160e11b815260040160405180910390fd5b506200125a565b6000846001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562001214573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200123a91906200214d565b11156200125a5760405163454732f160e11b815260040160405180910390fd5b6000868152600760209081526040808320600180820180546001600160a81b0319908116909155600283018054909116905560039091018490556001600160a01b03888116855260068452828520805463ffffffff199081168255908301869055908a16855260058452828520805490911681550192909255905133815287917f9d181adb70e733f5235f839c1eed929407ea8526e41d01f49b9fef703e78dddf910160405180910390a2505050505050565b6000818152600760205260408120600180820154839291600160a01b90910460ff1610156200134f5760405163618cca3f60e11b815260040160405180910390fd5b9392505050565b620013656020840184620020d2565b63ffffffff1615806200137a57506020830135155b1562001399576040516375ba0d7960e11b815260040160405180910390fd5b6001600160a01b03861615600081620013b35787620013b5565b865b90506000620013c86020870187620020d2565b60045460008681526007602052604090206002015463ffffffff92831692909116919091149150600160a01b900460ff1615620014185760405163bfa2bf9b60e01b815260040160405180910390fd5b806200167d576040516370a0823160e01b815230600482015288906000906001600160a01b038316906370a0823190602401602060405180830381865afa15801562001468573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200148e91906200214d565b6040516340c10f1960e01b8152306004820152600160248201529091506001600160a01b038316906340c10f1990604401600060405180830381600087803b158015620014da57600080fd5b505af1158015620014ef573d6000803e3d6000fd5b5050505080600162001502919062002201565b6040516370a0823160e01b81523060048201526001600160a01b038416906370a0823190602401602060405180830381865afa15801562001547573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200156d91906200214d565b146200158c5760405163016dd8ed60e71b815260040160405180910390fd5b604051632770a7eb60e21b8152306004820152600160248201526001600160a01b03831690639dc29fac90604401600060405180830381600087803b158015620015d557600080fd5b505af1158015620015ea573d6000803e3d6000fd5b50506040516370a0823160e01b81523060048201528392506001600160a01b03851691506370a0823190602401602060405180830381865afa15801562001635573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200165b91906200214d565b146200167a5760405163ad6f16e360e01b815260040160405180910390fd5b50505b6040518061010001604052808c62001696578962001699565b60005b6001600160a01b031681526020018b60ff168152602001836001600160a01b03168152602001846200173057836001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801562001704573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200172a9190620021e1565b62001732565b8b5b60ff90811682526000602080840182905260016040808601829052606080870185905260809687018590528b8552600784529381902087518154898601518816600160a01b9081026001600160a81b03199283166001600160a01b0394851617178455938a01519483018054978b0151909816840296811694821694909417959095179095559486015160028501805460a089015115159097029690921693169290921793909317905560c0830151600382015560e0909201516004909201919091556200180390870187620020d2565b6001600160a01b0383166000908152600560209081526040909120805463ffffffff191663ffffffff939093169290921782558701356001909101558a620018a357620018546020870187620020d2565b6001600160a01b0389166000908152600660209081526040909120805463ffffffff191663ffffffff939093169290921782558701356001909101556200189d86888662000f99565b620018b7565b8415620018b757620018b7868686620019c1565b620018c66020870187620020d2565b63ffffffff168660200135857f0c58c78506e2d526f5ccdba28119c9ca3b5ce48e1462e0e19bc39232db11c632858c3360405162001924939291906001600160a01b0393841681529183166020830152909116604082015260600190565b60405180910390a45050505050505050505050565b60008383836040516200194c9062001c9f565b6200195a9392919062002223565b604051809103906000f08015801562001977573d6000803e3d6000fd5b509050806001600160a01b0316868663ffffffff167f84d5e3618bf276f3d29a931646fdd996b398a3efa3cf6bceefc1fe7f0304059f60405160405180910390a495945050505050565b620019d06020840184620020d2565b60045463ffffffff908116911614620019fc5760405163a56029bd60e01b815260040160405180910390fd5b6000818152600760205260409020600301829055811562001aa057600060208401356040516370a0823160e01b81523060048201529091506001600160a01b038216906370a0823190602401602060405180830381865afa15801562001a66573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001a8c91906200214d565b600083815260076020526040902060040155505b62001aaf6020840184620020d2565b63ffffffff168360200135827f8976b61819dcee01042166c2c5612babc4f820a30843a7f8b23c0ddc343f6ef48533604051620010279291909182526001600160a01b0316602082015260400190565b60408051808201909152600080825260208201526200056482600062001b5e565b600481015460009063ffffffff9081169084160362001b4157508262000e3f565b62001b4c856200130d565b546001600160a01b0316905062000e3f565b604080518082019091526000808252602082015260408051808201909152600080825260208201526001600160a01b03841662001b9d57905062000564565b506001600160a01b03831660009081526005830160209081526040918290208251808401909352805463ffffffff16808452600190910154918301919091521562001bea57905062000564565b62001bf6848462001c5e565b1562001c1e57600483015463ffffffff1681526001600160a01b03841660208201526200134f565b506001600160a01b03831660009081526006830160209081526040918290208251808401909352805463ffffffff16835260010154908201529392505050565b6001600160a01b038216600090815260068201602052604081205463ffffffff161562001c8e5750600062000564565b50506001600160a01b03163b151590565b6119d9806200226083390190565b80356001600160a01b038116811462001cc557600080fd5b919050565b60006020828403121562001cdd57600080fd5b6200134f8262001cad565b803563ffffffff8116811462001cc557600080fd5b6000806040838503121562001d1157600080fd5b8235915062001d236020840162001ce8565b90509250929050565b60006040828403121562001d3f57600080fd5b50919050565b6000806060838503121562001d5957600080fd5b62001d65848462001d2c565b915062001d236040840162001cad565b60006020828403121562001d8857600080fd5b5035919050565b60008060006080848603121562001da557600080fd5b62001db1858562001d2c565b925062001dc16040850162001cad565b915062001dd16060850162001cad565b90509250925092565b60006040828403121562001ded57600080fd5b6200134f838362001d2c565b60008060006060848603121562001e0f57600080fd5b8335925062001e216020850162001cad565b915062001dd16040850162001cad565b60ff8116811462001e4157600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b600082601f83011262001e6c57600080fd5b813567ffffffffffffffff8082111562001e8a5762001e8a62001e44565b604051601f8301601f19908116603f0116810190828211818310171562001eb55762001eb562001e44565b8160405283815286602085880101111562001ecf57600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806000806000806000610100888a03121562001f0c57600080fd5b62001f18898962001d2c565b9650604088013562001f2a8162001e31565b9550606088013567ffffffffffffffff8082111562001f4857600080fd5b62001f568b838c0162001e5a565b965060808a013591508082111562001f6d57600080fd5b5062001f7c8a828b0162001e5a565b94505062001f8d60a0890162001cad565b925062001f9d60c0890162001cad565b915060e0880135905092959891949750929550565b60008060006080848603121562001fc857600080fd5b62001fd4858562001d2c565b9250604084013567ffffffffffffffff8082111562001ff257600080fd5b620020008783880162001e5a565b935060608601359150808211156200201757600080fd5b50620020268682870162001e5a565b9150509250925092565b60008060008060a085870312156200204757600080fd5b62002053868662001d2c565b9350620020636040860162001cad565b9250620020736060860162001cad565b9150620020836080860162001cad565b905092959194509250565b60008060608385031215620020a257600080fd5b620020ae848462001d2c565b946040939093013593505050565b634e487b7160e01b600052602160045260246000fd5b600060208284031215620020e557600080fd5b6200134f8262001ce8565b6000604082840312156200210357600080fd5b6040516040810181811067ffffffffffffffff8211171562002129576200212962001e44565b604052620021378362001ce8565b8152602083013560208201528091505092915050565b6000602082840312156200216057600080fd5b5051919050565b6000815180845260005b818110156200218f5760208185018101518683018201520162002171565b506000602082860101526020601f19601f83011685010191505092915050565b604081526000620021c4604083018562002167565b8281036020840152620021d8818562002167565b95945050505050565b600060208284031215620021f457600080fd5b81516200134f8162001e31565b808201808211156200056457634e487b7160e01b600052601160045260246000fd5b60ff8416815260606020820152600062002241606083018562002167565b828103604084015262002255818562002167565b969550505050505056fe60e06040523480156200001157600080fd5b50604051620019d9380380620019d9833981016040819052620000349162000245565b828282604051806040016040528060018152602001603160f81b8152506200006b620000656200012c60201b60201c565b62000130565b600462000079848262000358565b50600562000088838262000358565b506006805460ff191660ff9590951694909417909355508051602091820120825192820192909220600983905560c0818152466080818152604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f818801528082019790975260608701949094528501523060a08086018290528351808703820181529590920190925283519390920192909220600855525062000424915050565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620001a857600080fd5b81516001600160401b0380821115620001c557620001c562000180565b604051601f8301601f19908116603f01168101908282118183101715620001f057620001f062000180565b816040528381526020925086838588010111156200020d57600080fd5b600091505b8382101562000231578582018301518183018401529082019062000212565b600093810190920192909252949350505050565b6000806000606084860312156200025b57600080fd5b835160ff811681146200026d57600080fd5b60208501519093506001600160401b03808211156200028b57600080fd5b620002998783880162000196565b93506040860151915080821115620002b057600080fd5b50620002bf8682870162000196565b9150509250925092565b600181811c90821680620002de57607f821691505b602082108103620002ff57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200035357600081815260208120601f850160051c810160208610156200032e5750805b601f850160051c820191505b818110156200034f578281556001016200033a565b5050505b505050565b81516001600160401b0381111562000374576200037462000180565b6200038c81620003858454620002c9565b8462000305565b602080601f831160018114620003c45760008415620003ab5750858301515b600019600386901b1c1916600185901b1785556200034f565b600085815260208120601f198616915b82811015620003f557888601518255948401946001909101908401620003d4565b5085821015620004145787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60805160a05160c05161157e6200045b600039600081816105400152610ba601526000610b2501526000610b4f015261157e6000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c80637ecebe00116100ad578063a9059cbb11610071578063a9059cbb14610269578063b7b090ee1461027c578063d505accf1461028f578063dd62ed3e146102a2578063f2fde38b146102b557600080fd5b80637ecebe001461020d5780638da5cb5b1461022057806395d89b411461023b5780639dc29fac14610243578063a457c2d71461025657600080fd5b80633644e515116100f45780633644e515146101ac57806339509351146101b457806340c10f19146101c757806370a08231146101dc578063715018a61461020557600080fd5b806306fdde0314610131578063095ea7b31461014f57806318160ddd1461017257806323b872dd14610184578063313ce56714610197575b600080fd5b6101396102c8565b604051610146919061115b565b60405180910390f35b61016261015d3660046111c5565b61035a565b6040519015158152602001610146565b6003545b604051908152602001610146565b6101626101923660046111ef565b610371565b60065460405160ff9091168152602001610146565b610176610393565b6101626101c23660046111c5565b6103a2565b6101da6101d53660046111c5565b6103de565b005b6101766101ea36600461122b565b6001600160a01b031660009081526001602052604090205490565b6101da6103f4565b61017661021b36600461122b565b610408565b6000546040516001600160a01b039091168152602001610146565b610139610426565b6101da6102513660046111c5565b610435565b6101626102643660046111c5565b610447565b6101626102773660046111c5565b6104c6565b6101da61028a366004611296565b6104d3565b6101da61029d366004611302565b6105c6565b6101766102b0366004611375565b61072a565b6101da6102c336600461122b565b610755565b6060600480546102d7906113a8565b80601f0160208091040260200160405190810160405280929190818152602001828054610303906113a8565b80156103505780601f1061032557610100808354040283529160200191610350565b820191906000526020600020905b81548152906001019060200180831161033357829003601f168201915b5050505050905090565b60006103673384846107ce565b5060015b92915050565b600061037e8433846108f3565b61038984848461096d565b5060019392505050565b600061039d610b18565b905090565b3360008181526002602090815260408083206001600160a01b038716845290915281205490916103679185906103d99086906113dc565b6107ce565b6103e6610bca565b6103f08282610c24565b5050565b6103fc610bca565b6104066000610ce5565b565b6001600160a01b03811660009081526007602052604081205461036b565b6060600580546102d7906113a8565b61043d610bca565b6103f08282610d35565b600080610454338561072a565b9050828110156104b95760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b61038933858584036107ce565b600061036733848461096d565b6104db610bca565b60046104e8848683611461565b5060056104f6828483611461565b5060008484604051610509929190611522565b604051908190039020600981905590506105647f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f827f0000000000000000000000000000000000000000000000000000000000000000610e66565b6008556040516105779084908490611522565b6040518091039020858560405161058f929190611522565b604051908190038120907f1ec4c73af923253fb2c28a509dd78d342709289a09929d78c64c0b8e047efbcd90600090a35050505050565b834211156106165760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e6500000060448201526064016104b0565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98888886106458c610eaf565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e00160405160208183030381529060405280519060200120905060006106a082610ed7565b905060006106b082878787610f25565b9050896001600160a01b0316816001600160a01b0316146107135760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e6174757265000060448201526064016104b0565b61071e8a8a8a6107ce565b50505050505050505050565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b61075d610bca565b6001600160a01b0381166107c25760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104b0565b6107cb81610ce5565b50565b6001600160a01b0383166108305760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016104b0565b6001600160a01b0382166108915760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016104b0565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b60006108ff848461072a565b90506000198114610967578181101561095a5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016104b0565b61096784848484036107ce565b50505050565b6001600160a01b0383166109d15760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016104b0565b6001600160a01b038216610a335760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016104b0565b6001600160a01b03831660009081526001602052604090205481811015610aab5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016104b0565b6001600160a01b0380851660008181526001602052604080822086860390559286168082529083902080548601905591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610b0b9086815260200190565b60405180910390a3610967565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148015610b7157507f000000000000000000000000000000000000000000000000000000000000000046145b15610b7d575060085490565b61039d7f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6009547f0000000000000000000000000000000000000000000000000000000000000000610e66565b6000546001600160a01b031633146104065760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104b0565b6001600160a01b038216610c7a5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016104b0565b8060036000828254610c8c91906113dc565b90915550506001600160a01b0382166000818152600160209081526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b038216610d955760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016104b0565b6001600160a01b03821660009081526001602052604090205481811015610e095760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016104b0565b6001600160a01b03831660008181526001602090815260408083208686039055600380548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91016108e6565b505050565b6040805160208101859052908101839052606081018290524660808201523060a082015260009060c0016040516020818303038152906040528051906020012090509392505050565b6001600160a01b03811660009081526007602052604090208054600181018255905b50919050565b600061036b610ee4610b18565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b6000806000610f3687878787610f4d565b91509150610f4381611011565b5095945050505050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115610f845750600090506003611008565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015610fd8573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661100157600060019250925050611008565b9150600090505b94509492505050565b600081600481111561102557611025611532565b0361102d5750565b600181600481111561104157611041611532565b0361108e5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016104b0565b60028160048111156110a2576110a2611532565b036110ef5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016104b0565b600381600481111561110357611103611532565b036107cb5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016104b0565b600060208083528351808285015260005b818110156111885785810183015185820160400152820161116c565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146111c057600080fd5b919050565b600080604083850312156111d857600080fd5b6111e1836111a9565b946020939093013593505050565b60008060006060848603121561120457600080fd5b61120d846111a9565b925061121b602085016111a9565b9150604084013590509250925092565b60006020828403121561123d57600080fd5b611246826111a9565b9392505050565b60008083601f84011261125f57600080fd5b50813567ffffffffffffffff81111561127757600080fd5b60208301915083602082850101111561128f57600080fd5b9250929050565b600080600080604085870312156112ac57600080fd5b843567ffffffffffffffff808211156112c457600080fd5b6112d08883890161124d565b909650945060208701359150808211156112e957600080fd5b506112f68782880161124d565b95989497509550505050565b600080600080600080600060e0888a03121561131d57600080fd5b611326886111a9565b9650611334602089016111a9565b95506040880135945060608801359350608088013560ff8116811461135857600080fd5b9699959850939692959460a0840135945060c09093013592915050565b6000806040838503121561138857600080fd5b611391836111a9565b915061139f602084016111a9565b90509250929050565b600181811c908216806113bc57607f821691505b602082108103610ed157634e487b7160e01b600052602260045260246000fd5b8082018082111561036b57634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b601f821115610e6157600081815260208120601f850160051c8101602086101561143a5750805b601f850160051c820191505b8181101561145957828155600101611446565b505050505050565b67ffffffffffffffff831115611479576114796113fd565b61148d8361148783546113a8565b83611413565b6000601f8411600181146114c157600085156114a95750838201355b600019600387901b1c1916600186901b17835561151b565b600083815260209020601f19861690835b828110156114f257868501358255602094850194600190920191016114d2565b508682101561150f5760001960f88860031b161c19848701351681555b505060018560011b0183555b5050505050565b8183823760009101908152919050565b634e487b7160e01b600052602160045260246000fdfea26469706673582212208113c928e03165e19b5c7ac5b67b85c32ab586cd042677306fbd142d27afccf664736f6c63430008110033a2646970667358221220645f4f4167695bf724feed63449efc778c280e2a201a395685eb5093340e309164736f6c63430008110033";

type TokenFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TokenFacet__factory extends ContractFactory {
  constructor(...args: TokenFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TokenFacet> {
    return super.deploy(overrides || {}) as Promise<TokenFacet>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TokenFacet {
    return super.attach(address) as TokenFacet;
  }
  override connect(signer: Signer): TokenFacet__factory {
    return super.connect(signer) as TokenFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenFacetInterface {
    return new utils.Interface(_abi) as TokenFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TokenFacet {
    return new Contract(address, _abi, signerOrProvider) as TokenFacet;
  }
}
