/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../../common";
import type {
  OptimismL2Connector,
  OptimismL2ConnectorInterface,
} from "../../../../../../contracts/core/messaging/connectors/OptimismConnector.sol/OptimismL2Connector";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "_mirrorDomain",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_amb",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rootManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_mirrorProcessGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_processGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_reserveGas",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ProposedOwnable__acceptProposedOwner_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyOwner_notOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyProposed_notProposedOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_noOwnershipChange",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_noProposal",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "current",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "previous",
        type: "bytes32",
      },
    ],
    name: "AggregateRootUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
    ],
    name: "Dispatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageProcessed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previous",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "current",
        type: "address",
      },
    ],
    name: "MirrorConnectorUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "proposedOwner",
        type: "address",
      },
    ],
    name: "OwnershipProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "returnData",
        type: "bytes",
      },
    ],
    name: "Process",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "SenderAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "SenderRemoved",
    type: "event",
  },
  {
    inputs: [],
    name: "AMB",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PROCESS_GAS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "RESERVE_GAS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_MANAGER",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptProposedOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
    ],
    name: "addSender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "aggregateRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "count",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "delay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_destinationDomain",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "_recipientAddress",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_messageBody",
        type: "bytes",
      },
    ],
    name: "dispatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "domain",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "home",
    outputs: [
      {
        internalType: "contract Connector",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_potentialReplica",
        type: "address",
      },
    ],
    name: "isReplica",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "localDomain",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "messages",
    outputs: [
      {
        internalType: "enum Connector.MessageStatus",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mirrorConnector",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mirrorDomain",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mirrorProcessGas",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "outboundRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "processMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newlyProposed",
        type: "address",
      },
    ],
    name: "proposeNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proposed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposedTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes",
      },
      {
        internalType: "bytes32[32]",
        name: "_proof",
        type: "bytes32[32]",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "proveAndProcess",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "provenRoots",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
    ],
    name: "removeSender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounced",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "root",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "send",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "sendMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
    ],
    name: "setMirrorConnector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "tree",
    outputs: [
      {
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_expected",
        type: "address",
      },
    ],
    name: "verifySender",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "whitelistedSenders",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6101606040523480156200001257600080fd5b5060405162002caa38038062002caa8339810160408190526200003591620002ad565b87878787878787878787878787878787878063ffffffff166000036200008c5760405162461bcd60e51b815260206004820152600760248201526610b237b6b0b4b760c91b60448201526064015b60405180910390fd5b63ffffffff9081166080528816620000d15760405162461bcd60e51b815260206004820152600760248201526610b237b6b0b4b760c91b604482015260640162000083565b6001600160a01b038516620001185760405162461bcd60e51b815260206004820152600c60248201526b10b937b7ba26b0b730b3b2b960a11b604482015260640162000083565b62000123336200021c565b63ffffffff88811660a0526001600160a01b0387811660c05286811660e05290881661010052602480546001600160a01b0319169186169190911790556025839055620cf850821015620001a95760405162461bcd60e51b815260206004820152600c60248201526b2170726f636573732067617360a01b604482015260640162000083565b613a98811015620001ec5760405162461bcd60e51b815260206004820152600c60248201526b21726573657276652067617360a01b604482015260640162000083565b8161012081815250508061014081815250505050505050505050505050505050505050505050505050506200033a565b600080546001600160a01b038381166001600160a01b0319808416821785556002859055600180549091169055604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b805163ffffffff811681146200029057600080fd5b919050565b80516001600160a01b03811681146200029057600080fd5b600080600080600080600080610100898b031215620002cb57600080fd5b620002d6896200027b565b9750620002e660208a016200027b565b9650620002f660408a0162000295565b95506200030660608a0162000295565b94506200031660808a0162000295565b935060a0890151925060c0890151915060e089015190509295985092959890939650565b60805160a05160c05160e0516101005161012051610140516128d6620003d4600039600081816102530152610dc401526000818161054401528181610de50152610e6c015260006102e60152600061039501526000818161051d01528181611015015281816110e0015261114301526000818161035b01528181610ae20152610cc601526000818161041101526104b801526128d66000f3fe608060405234801561001057600080fd5b50600436106102325760003560e01c80639fa92f9d11610130578063d1851c92116100b8578063ebf0c7171161007c578063ebf0c71714610579578063ee250e0614610581578063f38a267b1461058a578063fa31de01146105ad578063fd54b228146105c057600080fd5b8063d1851c92146104f5578063d232c22014610506578063d69f9d6114610518578063d88beda21461053f578063db1b76591461056657600080fd5b8063b697f531116100ff578063b697f5311461047a578063b95a20011461048d578063c2fb26a6146104b3578063c5b350df146104da578063cc394283146104e257600080fd5b80639fa92f9d14610446578063b1f8100d1461044c578063b2f876431461045f578063b46300ec1461047257600080fd5b806352a9674b116101be5780636a42b8f8116101825780636a42b8f8146103eb578063715018a6146103f457806382646a58146103fc5780638d3638f41461040f5780638da5cb5b1461043557600080fd5b806352a9674b146103565780635bd11efc1461037d5780635f61e3ec146103905780636188af0e146103cf57806365eaf11b146103e257600080fd5b80632bbd59ca116102055780632bbd59ca146102b15780633490334a146102e15780633cf52ffb1461031d5780634ff746f6146103255780635190bc531461033a57600080fd5b806306661abd1461023757806325e3beda1461024e578063272efc691461027557806329460bd0146102a8575b600080fd5b6023545b6040519081526020015b60405180910390f35b61023b7f000000000000000000000000000000000000000000000000000000000000000081565b6102986102833660046121ab565b60296020526000908152604090205460ff1681565b6040519015158152602001610245565b61023b60255481565b6102d46102bf3660046121c8565b602b6020526000908152604090205460ff1681565b60405161024591906121f7565b6103087f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff9091168152602001610245565b60025461023b565b6103386103333660046122c2565b6105ca565b005b6102986103483660046121ab565b6001600160a01b0316301490565b6103087f000000000000000000000000000000000000000000000000000000000000000081565b61033861038b3660046121ab565b61060f565b6103b77f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610245565b6103386103dd3660046122f7565b6106a3565b61023b60275481565b62093a8061023b565b6103386106fe565b61033861040a3660046122c2565b6107bd565b7f0000000000000000000000000000000000000000000000000000000000000000610308565b6000546001600160a01b03166103b7565b306103b7565b61033861045a3660046121ab565b6107f7565b61033861046d3660046121ab565b61089f565b61033861091b565b6103386104883660046121ab565b610947565b61030861049b366004612370565b602a6020526000908152604090205463ffffffff1681565b6103087f000000000000000000000000000000000000000000000000000000000000000081565b6103386109c6565b6024546103b7906001600160a01b031681565b6001546001600160a01b03166103b7565b6000546001600160a01b031615610298565b6103b77f000000000000000000000000000000000000000000000000000000000000000081565b61023b7f000000000000000000000000000000000000000000000000000000000000000081565b6102986105743660046121ab565b610a21565b61023b610a32565b61023b60265481565b6102986105983660046121c8565b60286020526000908152604090205460ff1681565b6103386105bb36600461238b565b610a43565b60235461023b9081565b6105d381610b86565b7fb3abc57bfeebd2cac918901db582f71972a8e628bccf19f5ae3e3482b98a5ced813360405161060492919061243a565b60405180910390a150565b6000546001600160a01b0316331461063a576040516311a8a1bb60e31b815260040160405180910390fd5b602454604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1602480546001600160a01b0319166001600160a01b0392909216919091179055565b6106b583805190602001208383610c22565b6106ef5760405162461bcd60e51b81526020600482015260066024820152652170726f766560d01b60448201526064015b60405180910390fd5b6106f883610cb0565b50505050565b6000546001600160a01b03163314610729576040516311a8a1bb60e31b815260040160405180910390fd5b60025460000361074c57604051630e4b303f60e21b815260040160405180910390fd5b62093a806002544261075e919061247a565b1161077c576040516386d4b3f160e01b815260040160405180910390fd5b6001546001600160a01b0316156107a6576040516323295ef960e01b815260040160405180910390fd5b6001546107bb906001600160a01b0316610f99565b565b6107c681610ff8565b7fa69577a1e55dd0712044e7078b408c39fadff8b3e1b334b202ff17e70eda9fdc813360405161060492919061243a565b6000546001600160a01b03163314610822576040516311a8a1bb60e31b815260040160405180910390fd5b6001546001600160a01b03828116911614801561084757506001600160a01b03811615155b15610865576040516311bc066560e11b815260040160405180910390fd5b6000546001600160a01b0380831691160361089357604051634a2fb73f60e11b815260040160405180910390fd5b61089c81611085565b50565b6000546001600160a01b031633146108ca576040516311a8a1bb60e31b815260040160405180910390fd5b6001600160a01b038116600081815260296020908152604091829020805460ff1916905590519182527f384859c5ef5fafac31e8bc92ce7fb48b1f2c74c4dd5e212eb84ec202fa5d9fad9101610604565b6107bb60275460405160200161093391815260200190565b604051602081830303815290604052610ff8565b6000546001600160a01b03163314610972576040516311a8a1bb60e31b815260040160405180910390fd5b6001600160a01b038116600081815260296020908152604091829020805460ff1916600117905590519182527fd65eca5d561d3a4568c87b9b13ced4ab52a69edadfdfdb22d76bc595f36d7d879101610604565b6001546001600160a01b031633146109f1576040516311a7f27160e11b815260040160405180910390fd5b62093a8060025442610a03919061247a565b116107a65760405163d39c12bb60e01b815260040160405180910390fd5b6000610a2c826110d3565b92915050565b6000610a3e60036111d5565b905090565b3360009081526029602052604090205460ff16610a915760405162461bcd60e51b815260206004820152600c60248201526b085dda1a5d195b1a5cdd195960a21b60448201526064016106e6565b63ffffffff8084166000908152602a602052604090205416610ab4816001612491565b63ffffffff8581166000908152602a60205260408120805463ffffffff191693909216929092179055610b0b7f000000000000000000000000000000000000000000000000000000000000000033848888886111e8565b80516020820120909150610b20600382611220565b610b28610a32565b6027557f40f08ee347fc927ae45902edc87debb024aab1a311943731968607f603f2152f816001610b5860235490565b610b62919061247a565b60275485604051610b7694939291906124b9565b60405180910390a1505050505050565b602454610b9b906001600160a01b03166110d3565b610bd65760405162461bcd60e51b815260206004820152600c60248201526b10b618a1b7b73732b1ba37b960a11b60448201526064016106e6565b8051602014610c115760405162461bcd60e51b8152602060048201526007602482015266042d8cadccee8d60cb1b60448201526064016106e6565b61089c610c1d826124de565b61133d565b6000806000858152602b602052604090205460ff166002811115610c4857610c486121e1565b14610c8b5760405162461bcd60e51b8152602060048201526013602482015272214d6573736167655374617475732e4e6f6e6560681b60448201526064016106e6565b506000838152602b60205260409020805460ff191660019081179091555b9392505050565b600080610cbd83826113ca565b905063ffffffff7f000000000000000000000000000000000000000000000000000000000000000016610cf562ffffff1983166113ee565b63ffffffff1614610d375760405162461bcd60e51b815260206004820152600c60248201526b10b232b9ba34b730ba34b7b760a11b60448201526064016106e6565b6000610d4862ffffff198316611403565b905060016000828152602b602052604090205460ff166002811115610d6f57610d6f6121e1565b14610da65760405162461bcd60e51b815260206004820152600760248201526610b83937bb32b760c91b60448201526064016106e6565b6000818152602b60205260409020805460ff19166002179055610e097f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000612502565b5a1015610e415760405162461bcd60e51b81526004016106e6906020808252600490820152632167617360e01b604082015260600190565b6000610e5262ffffff19841661144c565b6040805161010080825261012082019092529192506000917f0000000000000000000000000000000000000000000000000000000000000000908390836020820181803683370190505090506000610eaf62ffffff19891661145d565b610ebe62ffffff198a16611471565b610ecd62ffffff198b16611486565b610eea610edf62ffffff198d1661149b565b62ffffff19166114c9565b604051602401610efd949392919061251a565b60408051601f198184030181529190526020810180516001600160e01b031663ab2dc3f560e01b17815281519192506000918291828a88f198503d945083851115610f46578394505b848252846000602084013e7fd42de95a9b26f1be134c8ecce389dc4fcfa18753d01661b7b361233569e8fe48878a84604051610f8493929190612549565b60405180910390a15050505050505050919050565b600080546001600160a01b038381166001600160a01b0319808416821785556002859055600180549091169055604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b602454602554604051633dbb202b60e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811693633dbb202b93611050939190921691869160040161256a565b600060405180830381600087803b15801561106a57600080fd5b505af115801561107e573d6000803e3d6000fd5b5050505050565b42600255600180546001600160a01b0319166001600160a01b0383169081179091556040517f6ab4d119f23076e8ad491bc65ce85f017fb0591dce08755ba8591059cc51737a90600090a250565b6000336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146111375760405162461bcd60e51b81526020600482015260076024820152662162726964676560c81b60448201526064016106e6565b816001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316636e296e456040518163ffffffff1660e01b81526004016020604051808303816000875af11580156111a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111c591906125a4565b6001600160a01b03161492915050565b6000610a2c826111e3611512565b6119d3565b6060868686868686604051602001611205969594939291906125c1565b60405160208183030381529060405290509695505050505050565b600161122e602060026126ff565b611238919061247a565b82602001541061127d5760405162461bcd60e51b815260206004820152601060248201526f1b595c9adb19481d1c995948199d5b1b60821b60448201526064016106e6565b60018260200160008282546112929190612502565b9091555050602082015460005b602081101561132f57816001166001036112ce57828482602081106112c6576112c661270b565b015550505050565b8381602081106112e0576112e061270b565b0154604080516020810192909252810184905260600160405160208183030381529060405280519060200120925060028261131b9190612721565b91508061132781612743565b91505061129f565b5061133861275c565b505050565b602454611352906001600160a01b03166110d3565b6113885760405162461bcd60e51b815260206004820152600760248201526610b9b2b73232b960c91b60448201526064016106e6565b6026546040805183815260208101929092527fd93b9a9123395d96a15a0cff10295f286f99a0962c9adb978bad3ab6aaea7213910160405180910390a1602655565b8151600090602084016113e564ffffffffff85168284611aa5565b95945050505050565b6000610a2c62ffffff19831660286004611aec565b6000806114198360781c6001600160601b031690565b6001600160601b0316905060006114398460181c6001600160601b031690565b6001600160601b03169091209392505050565b6000610a2c61145a83611b1c565b90565b6000610a2c62ffffff198316826004611aec565b6000610a2c62ffffff19831660246004611aec565b6000610a2c62ffffff19831660046020611b2d565b6000610a2c604c6114b981601886901c6001600160601b031661247a565b62ffffff19851691906000611c89565b60606000806114e18460181c6001600160601b031690565b6001600160601b0316905060405191508192506115018483602001611d05565b508181016020016040529052919050565b61151a612177565b600081527fad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb560208201527fb4c11951957c6f8f642c4af61cd6b24640fec6dc7fc607ee8206a99e92410d3060408201527f21ddb9a356815c3fac1026b6dec5df3124afbadb485c9ba5a3e3398a04b7ba8560608201527fe58769b32a1beaf1ea27375a44095a0d1fb664ce2dd358e7fcbfb78c26a1934460808201527f0eb01ebfc9ed27500cd4dfc979272d1f0913cc9f66540d7e8005811109e1cf2d60a08201527f887c22bd8750d34016ac3c66b5ff102dacdd73f6b014e710b51e8022af9a196860c08201527fffd70157e48063fc33c97a050f7f640233bf646cc98d9524c6b92bcf3ab56f8360e08201527f9867cc5f7f196b93bae1e27e6320742445d290f2263827498b54fec539f756af6101008201527fcefad4e508c098b9a7e1d8feb19955fb02ba9675585078710969d3440f5054e06101208201527ff9dc3e7fe016e050eff260334f18a5d4fe391d82092319f5964f2e2eb7c1c3a56101408201527ff8b13a49e282f609c317a833fb8d976d11517c571d1221a265d25af778ecf8926101608201527f3490c6ceeb450aecdc82e28293031d10c7d73bf85e57bf041a97360aa2c5d99c6101808201527fc1df82d9c4b87413eae2ef048f94b4d3554cea73d92b0f7af96e0271c691e2bb6101a08201527f5c67add7c6caf302256adedf7ab114da0acfe870d449a3a489f781d659e8becc6101c08201527fda7bce9f4e8618b6bd2f4132ce798cdc7a60e7e1460a7299e3c6342a579626d26101e08201527f2733e50f526ec2fa19a22b31e8ed50f23cd1fdf94c9154ed3a7609a2f1ff981f6102008201527fe1d3b5c807b281e4683cc6d6315cf95b9ade8641defcb32372f1c126e398ef7a6102208201527f5a2dce0a8a7f68bb74560f8f71837c2c2ebbcbf7fffb42ae1896f13f7c7479a06102408201527fb46a28b6f55540f89444f63de0378e3d121be09e06cc9ded1c20e65876d36aa06102608201527fc65e9645644786b620e2dd2ad648ddfcbf4a7e5b1a3a4ecfe7f64667a3f0b7e26102808201527ff4418588ed35a2458cffeb39b93d26f18d2ab13bdce6aee58e7b99359ec2dfd96102a08201527f5a9c16dc00d6ef18b7933a6f8dc65ccb55667138776f7dea101070dc8796e3776102c08201527f4df84f40ae0c8229d0d6069e5c8f39a7c299677a09d367fc7b05e3bc380ee6526102e08201527fcdc72595f74c7b1043d0e1ffbab734648c838dfb0527d971b602bc216c9619ef6103008201527f0abf5ac974a1ed57f4050aa510dd9c74f508277b39d7973bb2dfccc5eeb0618d6103208201527fb8cd74046ff337f0a7bf2c8e03e10f642c1886798d71806ab1e888d9e5ee87d06103408201527f838c5655cb21c6cb83313b5a631175dff4963772cce9108188b34ac87c81c41e6103608201527f662ee4dd2dd7b2bc707961b1e646c4047669dcb6584f0d8d770daf5d7e7deb2e6103808201527f388ab20e2573d171a88108e79d820e98f26c0b84aa8b2f4aa4968dbb818ea3226103a08201527f93237c50ba75ee485f4c22adf2f741400bdf8d6a9cc7df7ecae576221665d7356103c08201527f8448818bb4ae4562849e949e17ac16e0be16688e156b5cf15e098c627c0056a96103e082015290565b6020820154600090815b6020811015611a9d57600182821c166000868360208110611a0057611a0061270b565b0154905081600103611a3d576040805160208101839052908101869052606001604051602081830303815290604052805190602001209450611a88565b84868460208110611a5057611a5061270b565b6020020151604051602001611a6f929190918252602082015260400190565b6040516020818303038152906040528051906020012094505b50508080611a9590612743565b9150506119dd565b505092915050565b600080611ab28385612502565b9050604051811115611ac2575060005b80600003611ad75762ffffff19915050610ca9565b5050606092831b9190911790911b1760181b90565b6000611af9826020612772565b611b04906008612795565b60ff16611b12858585611b2d565b901c949350505050565b6000610a2c62ffffff198316602c60205b60008160ff16600003611b4257506000610ca9565b611b558460181c6001600160601b031690565b6001600160601b0316611b6b60ff841685612502565b1115611bcf57611bb6611b878560781c6001600160601b031690565b6001600160601b0316611ba38660181c6001600160601b031690565b6001600160601b0316858560ff16611e66565b60405162461bcd60e51b81526004016106e691906127b6565b60208260ff161115611c495760405162461bcd60e51b815260206004820152603a60248201527f54797065644d656d566965772f696e646578202d20417474656d70746564207460448201527f6f20696e646578206d6f7265207468616e20333220627974657300000000000060648201526084016106e6565b600882026000611c628660781c6001600160601b031690565b6001600160601b031690506000600160ff1b60001984011d91909501511695945050505050565b600080611c9f8660781c6001600160601b031690565b6001600160601b03169050611cb386611ed4565b84611cbe8784612502565b611cc89190612502565b1115611cdb5762ffffff19915050611cfd565b611ce58582612502565b9050611cf98364ffffffffff168286611aa5565b9150505b949350505050565b600062ffffff1980841603611d6d5760405162461bcd60e51b815260206004820152602860248201527f54797065644d656d566965772f636f7079546f202d204e756c6c20706f696e7460448201526732b9103232b932b360c11b60648201526084016106e6565b611d7683611f0d565b611dd65760405162461bcd60e51b815260206004820152602b60248201527f54797065644d656d566965772f636f7079546f202d20496e76616c696420706f60448201526a34b73a32b9103232b932b360a91b60648201526084016106e6565b6000611deb8460181c6001600160601b031690565b6001600160601b031690506000611e0b8560781c6001600160601b031690565b6001600160601b031690506000604051905084811115611e2b5760206060fd5b8285848460045afa50611e5c611e418760d81c90565b64ffffffffff60601b606091821b168717901b841760181b90565b9695505050505050565b60606000611e7386611f4a565b9150506000611e8186611f4a565b9150506000611e8f86611f4a565b9150506000611e9d86611f4a565b91505083838383604051602001611eb794939291906127c9565b604051602081830303815290604052945050505050949350505050565b6000611ee98260181c6001600160601b031690565b611efc8360781c6001600160601b031690565b016001600160601b03169050919050565b6000611f198260d81c90565b64ffffffffff1664ffffffffff03611f3357506000919050565b6000611f3e83611ed4565b60405110199392505050565b600080601f5b600f8160ff161115611f9f576000611f69826008612795565b60ff1685901c9050611f7a81611ff8565b61ffff16841793508160ff16601014611f9557601084901b93505b5060001901611f50565b50600f5b60ff8160ff161015611ff2576000611fbc826008612795565b60ff1685901c9050611fcd81611ff8565b61ffff16831792508160ff16600014611fe857601083901b92505b5060001901611fa3565b50915091565b600061200a60048360ff16901c61202a565b60ff1661ffff919091161760081b6120218261202a565b60ff1617919050565b600060f08083179060ff821690036120455750603092915050565b8060ff1660f1036120595750603192915050565b8060ff1660f20361206d5750603292915050565b8060ff1660f3036120815750603392915050565b8060ff1660f4036120955750603492915050565b8060ff1660f5036120a95750603592915050565b8060ff1660f6036120bd5750603692915050565b8060ff1660f7036120d15750603792915050565b8060ff1660f8036120e55750603892915050565b8060ff1660f9036120f95750603992915050565b8060ff1660fa0361210d5750606192915050565b8060ff1660fb036121215750606292915050565b8060ff1660fc036121355750606392915050565b8060ff1660fd036121495750606492915050565b8060ff1660fe0361215d5750606592915050565b8060ff1660ff036121715750606692915050565b50919050565b6040518061040001604052806020906020820280368337509192915050565b6001600160a01b038116811461089c57600080fd5b6000602082840312156121bd57600080fd5b8135610ca981612196565b6000602082840312156121da57600080fd5b5035919050565b634e487b7160e01b600052602160045260246000fd5b602081016003831061221957634e487b7160e01b600052602160045260246000fd5b91905290565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261224657600080fd5b813567ffffffffffffffff808211156122615761226161221f565b604051601f8301601f19908116603f011681019082821181831017156122895761228961221f565b816040528381528660208588010111156122a257600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000602082840312156122d457600080fd5b813567ffffffffffffffff8111156122eb57600080fd5b611cfd84828501612235565b6000806000610440848603121561230d57600080fd5b833567ffffffffffffffff81111561232457600080fd5b61233086828701612235565b93505061042084018581111561234557600080fd5b60208501925080359150509250925092565b803563ffffffff8116811461236b57600080fd5b919050565b60006020828403121561238257600080fd5b610ca982612357565b6000806000606084860312156123a057600080fd5b6123a984612357565b925060208401359150604084013567ffffffffffffffff8111156123cc57600080fd5b6123d886828701612235565b9150509250925092565b60005b838110156123fd5781810151838201526020016123e5565b838111156106f85750506000910152565b600081518084526124268160208601602086016123e2565b601f01601f19169290920160200192915050565b60408152600061244d604083018561240e565b905060018060a01b03831660208301529392505050565b634e487b7160e01b600052601160045260246000fd5b60008282101561248c5761248c612464565b500390565b600063ffffffff8083168185168083038211156124b0576124b0612464565b01949350505050565b848152836020820152826040820152608060608201526000611e5c608083018461240e565b805160208083015191908110156121715760001960209190910360031b1b16919050565b6000821982111561251557612515612464565b500190565b600063ffffffff808716835280861660208401525083604083015260806060830152611e5c608083018461240e565b83815282151560208201526060604082015260006113e5606083018461240e565b6001600160a01b038416815260606020820181905260009061258e9083018561240e565b905063ffffffff83166040830152949350505050565b6000602082840312156125b657600080fd5b8151610ca981612196565b600063ffffffff60e01b808960e01b168352876004840152808760e01b166024840152808660e01b1660288401525083602c830152825161260981604c8501602087016123e2565b91909101604c01979650505050505050565b600181815b8085111561265657816000190482111561263c5761263c612464565b8085161561264957918102915b93841c9390800290612620565b509250929050565b60008261266d57506001610a2c565b8161267a57506000610a2c565b8160018114612690576002811461269a576126b6565b6001915050610a2c565b60ff8411156126ab576126ab612464565b50506001821b610a2c565b5060208310610133831016604e8410600b84101617156126d9575081810a610a2c565b6126e3838361261b565b80600019048211156126f7576126f7612464565b029392505050565b6000610ca9838361265e565b634e487b7160e01b600052603260045260246000fd5b60008261273e57634e487b7160e01b600052601260045260246000fd5b500490565b60006001820161275557612755612464565b5060010190565b634e487b7160e01b600052600160045260246000fd5b600060ff821660ff84168082101561278c5761278c612464565b90039392505050565b600060ff821660ff84168160ff04811182151516156126f7576126f7612464565b602081526000610ca9602083018461240e565b7f54797065644d656d566965772f696e646578202d204f76657272616e20746865815274040ecd2caee5c40a6d8d2c6ca40d2e640c2e84060f605b1b60208201526001600160d01b031960d086811b821660358401526e040eed2e8d040d8cadccee8d04060f608b1b603b840181905286821b8316604a8501527f2e20417474656d7074656420746f20696e646578206174206f666673657420306050850152600f60fb1b607085015285821b83166071850152607784015283901b166086820152601760f91b608c8201526000608d8201611e5c56fea26469706673582212202904034aae2dc841ff7e028bdd2ae82bc996f1b4a9d6aa0c19d0b68a5fb2629f64736f6c634300080f0033";

type OptimismL2ConnectorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OptimismL2ConnectorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OptimismL2Connector__factory extends ContractFactory {
  constructor(...args: OptimismL2ConnectorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _mirrorProcessGas: PromiseOrValue<BigNumberish>,
    _processGas: PromiseOrValue<BigNumberish>,
    _reserveGas: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<OptimismL2Connector> {
    return super.deploy(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _mirrorProcessGas,
      _processGas,
      _reserveGas,
      overrides || {}
    ) as Promise<OptimismL2Connector>;
  }
  override getDeployTransaction(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _mirrorProcessGas: PromiseOrValue<BigNumberish>,
    _processGas: PromiseOrValue<BigNumberish>,
    _reserveGas: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _mirrorProcessGas,
      _processGas,
      _reserveGas,
      overrides || {}
    );
  }
  override attach(address: string): OptimismL2Connector {
    return super.attach(address) as OptimismL2Connector;
  }
  override connect(signer: Signer): OptimismL2Connector__factory {
    return super.connect(signer) as OptimismL2Connector__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OptimismL2ConnectorInterface {
    return new utils.Interface(_abi) as OptimismL2ConnectorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OptimismL2Connector {
    return new Contract(address, _abi, signerOrProvider) as OptimismL2Connector;
  }
}
