/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  Unwrapper,
  UnwrapperInterface,
} from "../../../../../contracts/core/xreceivers/Unwrapper.sol/Unwrapper";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "connext",
        type: "address",
      },
      {
        internalType: "address",
        name: "wrapper",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyOwner_notOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyProposed_notProposedOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__ownershipDelayElapsed_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_noOwnershipChange",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_noProposal",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "FundsDelivered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "proposedOwner",
        type: "address",
      },
    ],
    name: "OwnershipProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "WrongAsset",
    type: "event",
  },
  {
    inputs: [],
    name: "CONNEXT",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "WRAPPER",
    outputs: [
      {
        internalType: "contract IWrapper",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptProposedOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "delay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newlyProposed",
        type: "address",
      },
    ],
    name: "proposeNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proposed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposedTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounced",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "sweep",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "unwrapAndSweep",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
      {
        internalType: "bytes",
        name: "callData",
        type: "bytes",
      },
    ],
    name: "xReceive",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60c0346100e457601f610ce038819003918201601f19168301916001600160401b038311848410176100e95780849260409485528339810103126100e457610052602061004b836100ff565b92016100ff565b906000546040519260018060a01b0391338382167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a36001600160a01b0319908116331760009081556002556001805490911690551660a052608052610bcc908161011482396080518181816101570152610557015260a0518181816102320152818161029f01526107dd0152f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b03821682036100e45756fe6080604081815260049182361015610022575b505050361561002057600080fd5b005b600090813560e01c9081633cf52ffb146107255750806362c06767146106925780636a42b8f814610674578063715018a6146105ae5780638da5cb5b1461058657806392f75cb214610542578063b1f8100d14610484578063c5b350df146103e0578063d1851c92146103b7578063d232c2201461038e578063e03720c014610265578063e1eb13c11461021d5763fd614f4103610012573461021a5760c036600319011261021a576001600160a01b03604435818116810361021557606435828116036102155760843563ffffffff8116036102115760a4359467ffffffffffffffff861161020d573660238701121561020d5785810135926101258461078f565b9361013287519586610757565b808552366024828a0101116102095760249781879260209a8b930183890137860101527f00000000000000000000000000000000000000000000000000000000000000001633036101d3575061018d849286926024356107ab565b82519382859384528251928382860152825b8481106101bd57505050828201840152601f01601f19168101030190f35b818101830151888201880152879550820161019f565b845162461bcd60e51b8152908101869052601060248201526f1d5b9ddc985c0e880858dbdb9b995e1d60821b6044820152606490fd5b8580fd5b8380fd5b8280fd5b600080fd5b80fd5b509034610261578160031936011261026157517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b5080fd5b50903461026157806003193601126102615761027f610741565b825460243592906001600160a01b03908116330361037e57831561033b577f000000000000000000000000000000000000000000000000000000000000000016803b1561033757908480926024835180958193632e1a7d4d60e01b8352898c8401525af1801561032d576102fc575b846102f98585610907565b80f35b67ffffffffffffffff829593951161031a57529192508238806102ee565b634e487b7160e01b835260418652602483fd5b81513d87823e3d90fd5b8480fd5b815162461bcd60e51b8152602081880152601760248201527f756e77726170416e6453776565703a2021616d6f756e740000000000000000006044820152606490fd5b81516311a8a1bb60e31b81528690fd5b509034610261578160031936011261026157905490516001600160a01b03909116158152602090f35b50903461026157816003193601126102615760015490516001600160a01b039091168152602090f35b509190346102115782600319360112610211576001546001600160a01b0392909183831691903383036104775762093a8061041d60025442610b73565b111561046a5750508084549384167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08680a36001600160a01b031992831617835560028390551660015580f35b516324e0285f60e21b8152fd5b516311a7f27160e11b8152fd5b5091346102115760203660031901126102115761049f610741565b83546001600160a01b039391929190841633810361053457846001549416809585161480610529575b61051b57841461050e575050426002556001600160a01b03191681176001557f6ab4d119f23076e8ad491bc65ce85f017fb0591dce08755ba8591059cc51737a8280a280f35b51634a2fb73f60e11b8152fd5b50516311bc066560e11b8152fd5b5060025415156104c8565b50516311a8a1bb60e31b8152fd5b509034610261578160031936011261026157517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b509034610261578160031936011261026157905490516001600160a01b039091168152602090f35b5091346102115782600319360112610211578254916001600160a01b0391828416913383036106675760025462093a806105e88242610b73565b1115610659571561064c5760015493841661063f57505083907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a36001600160a01b0319918216835560028390551660015580f35b516323295ef960e01b8152fd5b51630e4b303f60e21b8152fd5b50516324e0285f60e21b8152fd5b516311a8a1bb60e31b8152fd5b5090346102615781600319360112610261576020905162093a808152f35b508234610261576060366003190112610261576106ad610741565b6001600160a01b039160243591908383168303610337576044359385541633036107175783156106e357506102f9939450610a3c565b606490602087519162461bcd60e51b8352820152600e60248201526d1cddd9595c0e8808585b5bdd5b9d60921b6044820152fd5b85516311a8a1bb60e31b8152fd5b9050346102615781600319360112610261576020906002548152f35b600435906001600160a01b038216820361021557565b90601f8019910116810190811067ffffffffffffffff82111761077957604052565b634e487b7160e01b600052604160045260246000fd5b67ffffffffffffffff811161077957601f01601f191660200190565b6060939281156108d05760208180518101031261021557602001516001600160a01b03928382169182900361021557837f00000000000000000000000000000000000000000000000000000000000000001693811684810361086d575050823b156102155760008093602460405180968193632e1a7d4d60e01b83528760048401525af1801561086157610846575b6108449250610907565b565b67ffffffffffffffff8311610779576108449260405261083a565b6040513d6000823e3d90fd5b6108ac9596507f9f79eedfea1da16b88bd43866c5385861173a9895ac74e1628662f7f2192962e919394506040908151908482526020820152a1610a3c565b6040516020810181811067ffffffffffffffff821117610779576040526000815290565b60405162461bcd60e51b815260206004820152600f60248201526e1d5b9ddc985c0e8808585b5bdd5b9d608a1b6044820152606490fd5b6001600160a01b03164782116109f7576000908180808086855af13d156109f2573d6109328161078f565b906109406040519283610757565b81528360203d92013e5b15610987577f91ebf95f2932ae1bb84918555319ba9cf24fd2359b03932337af5599f2553fa99260609260405192835260208301526040820152a1565b60405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d617920686176652072657665727465640000000000006064820152608490fd5b61094a565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e63650000006044820152606490fd5b6001600160a01b039182169283610acc578047106109f7576000808080848787165af13d15610ac7573d610a6f8161078f565b90610a7d6040519283610757565b8152600060203d92013e5b15610987577f91ebf95f2932ae1bb84918555319ba9cf24fd2359b03932337af5599f2553fa9936060935b6040519316835260208301526040820152a1565b610a88565b9160409391935163a9059cbb60e01b8152818516600482015283602482015260009060208160448185885af18015610b6857610b31575b5050917f91ebf95f2932ae1bb84918555319ba9cf24fd2359b03932337af5599f2553fa99391606093610ab3565b6020813d8211610b60575b81610b4960209383610757565b8101031261026157518015150361021a5780610b03565b3d9150610b3c565b6040513d84823e3d90fd5b91908203918211610b8057565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220dfa95bd3a232c5b5ab3929842993516c620dc4bed7d8dc2f99b07cc24955802e64736f6c63430008110033";

type UnwrapperConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UnwrapperConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Unwrapper__factory extends ContractFactory {
  constructor(...args: UnwrapperConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    connext: PromiseOrValue<string>,
    wrapper: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Unwrapper> {
    return super.deploy(
      connext,
      wrapper,
      overrides || {}
    ) as Promise<Unwrapper>;
  }
  override getDeployTransaction(
    connext: PromiseOrValue<string>,
    wrapper: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(connext, wrapper, overrides || {});
  }
  override attach(address: string): Unwrapper {
    return super.attach(address) as Unwrapper;
  }
  override connect(signer: Signer): Unwrapper__factory {
    return super.connect(signer) as Unwrapper__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UnwrapperInterface {
    return new utils.Interface(_abi) as UnwrapperInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Unwrapper {
    return new Contract(address, _abi, signerOrProvider) as Unwrapper;
  }
}
