/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  ProposedOwnableFacet,
  ProposedOwnableFacetInterface,
} from "../../../../../contracts/core/connext/facets/ProposedOwnableFacet";

const _abi = [
  {
    inputs: [],
    name: "BaseConnextFacet__getAdoptedAsset_assetNotFound",
    type: "error",
  },
  {
    inputs: [],
    name: "BaseConnextFacet__getApprovedCanonicalId_notAllowlisted",
    type: "error",
  },
  {
    inputs: [],
    name: "BaseConnextFacet__nonReentrant_reentrantCall",
    type: "error",
  },
  {
    inputs: [],
    name: "BaseConnextFacet__nonXCallReentrant_reentrantCall",
    type: "error",
  },
  {
    inputs: [],
    name: "BaseConnextFacet__onlyOwnerOrAdmin_notOwnerOrAdmin",
    type: "error",
  },
  {
    inputs: [],
    name: "BaseConnextFacet__onlyOwnerOrRouter_notOwnerOrRouter",
    type: "error",
  },
  {
    inputs: [],
    name: "BaseConnextFacet__onlyOwnerOrWatcher_notOwnerOrWatcher",
    type: "error",
  },
  {
    inputs: [],
    name: "BaseConnextFacet__onlyOwner_notOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "BaseConnextFacet__onlyProposed_notProposedOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "BaseConnextFacet__whenNotPaused_paused",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnableFacet__acceptProposedOwner_noOwnershipChange",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnableFacet__assignRoleAdmin_invalidInput",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnableFacet__assignRoleRouter_invalidInput",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnableFacet__assignRoleWatcher_invalidInput",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnableFacet__delayElapsed_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnableFacet__proposeAssetAllowlistRemoval_noOwnershipChange",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnableFacet__proposeNewOwner_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnableFacet__proposeNewOwner_noOwnershipChange",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnableFacet__proposeRouterAllowlistRemoval_noOwnershipChange",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnableFacet__removeAssetAllowlist_noOwnershipChange",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnableFacet__removeAssetAllowlist_noProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnableFacet__removeRouterAllowlist_noOwnershipChange",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnableFacet__removeRouterAllowlist_noProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnableFacet__revokeRole_invalidInput",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "admin",
        type: "address",
      },
    ],
    name: "AssignRoleAdmin",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "router",
        type: "address",
      },
    ],
    name: "AssignRoleRouter",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "watcher",
        type: "address",
      },
    ],
    name: "AssignRoleWatcher",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "proposedOwner",
        type: "address",
      },
    ],
    name: "OwnershipProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "revokedAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "enum Role",
        name: "revokedRole",
        type: "uint8",
      },
    ],
    name: "RevokeRole",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "RouterAllowlistRemovalProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "renounced",
        type: "bool",
      },
    ],
    name: "RouterAllowlistRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptProposedOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_admin",
        type: "address",
      },
    ],
    name: "assignRoleAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
    ],
    name: "assignRoleRouterAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_watcher",
        type: "address",
      },
    ],
    name: "assignRoleWatcher",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "delay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newlyProposed",
        type: "address",
      },
    ],
    name: "proposeNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proposeRouterAllowlistRemoval",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proposed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposedTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_role",
        type: "address",
      },
    ],
    name: "queryRole",
    outputs: [
      {
        internalType: "enum Role",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "removeRouterAllowlist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_revoke",
        type: "address",
      },
    ],
    name: "revokeRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "routerAllowlistRemoved",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "routerAllowlistTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523461001657610b9d908161001c8239f35b600080fdfe608060408181526004918236101561001657600080fd5b600092833560e01c9182631223293714610ae55750816323986f7d146109dd5781632ec0c002146108f75781633cf52ffb146108d85781633f4ba83a1461083c5781635c975abb146108155781636a42b8f8146107d75781636be55785146107b357816380e52e3f146106a15781638456cb59146105ec5781638da5cb5b146105b6578163a9943b1b146104d0578163b1f8100d14610405578163bb271a2714610309578163c56ce35814610246578163c5b350df1461015e578163c91cb56a14610116575063d1851c92146100eb57600080fd5b3461011257816003193601126101125760105490516001600160a01b039091168152602090f35b5080fd5b90503461015a57602036600319011261015a57356001600160a01b0381169081900361015a5760ff828461015893602096526014865220541691518092610b01565bf35b8280fd5b9190503461015a578260031936011261015a576010546001600160a01b03808216923384036102375761019360115442610b24565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c132254101561022857600080516020610b488339815191529485549283169185831461021b57505060118690556001600160a01b031992831660105583907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08780a31617905580f35b516355cc507960e01b8152fd5b51637f0369a960e11b81528490fd5b51631b54eee360e11b81528490fd5b90503461015a578260031936011261015a57600080516020610b48833981519152546001600160a01b0316331415806102d5575b6102c75760ff601254166102b9575060207feb0f48d74c7254e5b55ef91a3f6e496e6a4a8676b6dae07f3d6fb0805b9fac93914260135551428152a180f35b90516333bfb93f60e11b8152fd5b9051637b32c26b60e01b8152fd5b50338352601460205260ff8284205416818110156102f6576003141561027a565b634e487b7160e01b845260218252602484fd5b9190503461015a57602036600319011261015a5781356001600160a01b03818116939184900361040157600080516020610b488339815191525416331415806103e0575b6102c757828452601460205260ff8285205416818110156103cd57158015906103c5575b6103b75750816020917e0a317382a4189d8763d4a024ec833785cebd3580a084ff0f887f156b822cb193855260148352808520600360ff1982541617905551908152a180f35b9051631600e74560e31b8152fd5b508215610371565b634e487b7160e01b855260218252602485fd5b50338452601460205260ff8285205416818110156103cd576003141561034d565b8480fd5b9190503461015a57602036600319011261015a576001600160a01b038235818116939192908490036104015782600080516020610b4883398151915254163381036104c257846010549485161480156104ba575b6104ac57841461049f575050426011556001600160a01b03191681176010557f6ab4d119f23076e8ad491bc65ce85f017fb0591dce08755ba8591059cc51737a8280a280f35b51631f677f5160e01b8152fd5b5051630274ac4360e21b8152fd5b508415610459565b50516314e74a2560e21b8152fd5b9190503461015a57602036600319011261015a5781356001600160a01b03818116939184900361040157600080516020610b48833981519152541633141580610595575b6102c757828452601460205260ff8285205416818110156103cd571580159061058d575b61057f5750816020917ffaac289281b8fc57dff30d0ff38b071d28bb5f24cd5ed1bd2379d6fb27f714dd93855260148352808520600260ff1982541617905551908152a180f35b9051630bceab9d60e01b8152fd5b508215610538565b50338452601460205260ff8285205416818110156103cd5760031415610514565b505034610112578160031936011261011257600080516020610b488339815191525490516001600160a01b039091168152602090f35b9190503461015a578260031936011261015a57600080516020610b48833981519152546001600160a01b03163314158061066d575b61066057601a805460ff60a01b1916600160a01b179055827f9e87fac88ff661f02d44f95383c817fece4bce600a3dab7a54406878b965e7528180a180f35b5163bae4c01f60e01b8152fd5b50338352601460205260ff81842054168281101561068e5760021415610621565b634e487b7160e01b845260218352602484fd5b90503461015a57602036600319011261015a5780356001600160a01b03818116929183900361040157600080516020610b48833981519152541633141580610792575b61078457818452601460205260ff838520541690808210156107715781158015610769575b61075b5750906107577fdc6f53b47a9dfbea7a15fceef0cd84711d3d79ccc0952111866167af5e59e2649392828652601460205283862060ff19815416905583519283526020830190610b01565ba180f35b8351630e15d72960e31b8152fd5b508215610709565b634e487b7160e01b855260219052602484fd5b8251637b32c26b60e01b8152fd5b50338452601460205260ff8385205416818110156103cd57600314156106e4565b50503461011257816003193601126101125760209060ff6012541690519015158152f35b5050346101125781600319360112610112576020907fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c1322549051908152f35b50503461011257816003193601126101125760209060ff601a5460a01c1690519015158152f35b9190503461015a578260031936011261015a57600080516020610b48833981519152546001600160a01b0316331415806108b7575b6108aa57601a805460ff60a01b19169055827fa45f47fdea8a1efdd9029a5691c7f759c32b7c698632b563573e155625d169338180a180f35b51637b32c26b60e01b8152fd5b50338352601460205260ff81842054168281101561068e5760031415610871565b5050346101125781600319360112610112576020906011549051908152f35b9190503461015a57602036600319011261015a5781356001600160a01b03818116939184900361040157600080516020610b488339815191525416331415806109bc575b6102c757828452601460205260ff8285205416818110156103cd57158015906109b4575b6109a65750816020917ff294e68c632d2c26e3d36129816c9a3e54bfa0ebada89d07d08e15e87a8e240393855260148352808520600160ff1982541617905551908152a180f35b90516319f546ad60e11b8152fd5b50821561095f565b50338452601460205260ff8285205416818110156103cd576003141561093b565b90503461015a578260031936011261015a57600080516020610b48833981519152546001600160a01b031633141580610ac4575b6102c75760135490610a238242610b24565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c1322541015610ab6576012549160ff8316610aa75715610a9957507f7c21a455b42ac52b1f1cc1103db5afe532e817479e9503a97a734720271c5a7491600160209260ff191617601255836013555160018152a180f35b82516368ad12e160e11b8152fd5b508251634b4da55560e01b8152fd5b8251637f0369a960e11b8152fd5b50338352601460205260ff8284205416818110156102f65760031415610a11565b8490346101125781600319360112610112576020906013548152f35b906004821015610b0e5752565b634e487b7160e01b600052602160045260246000fd5b91908203918211610b3157565b634e487b7160e01b600052601160045260246000fdfec8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c1320a2646970667358221220325c8d06766311d4e0e0b1e4f080990269352a1844c5f3f489c12aff7e08cab964736f6c63430008110033";

type ProposedOwnableFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ProposedOwnableFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ProposedOwnableFacet__factory extends ContractFactory {
  constructor(...args: ProposedOwnableFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ProposedOwnableFacet> {
    return super.deploy(overrides || {}) as Promise<ProposedOwnableFacet>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ProposedOwnableFacet {
    return super.attach(address) as ProposedOwnableFacet;
  }
  override connect(signer: Signer): ProposedOwnableFacet__factory {
    return super.connect(signer) as ProposedOwnableFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ProposedOwnableFacetInterface {
    return new utils.Interface(_abi) as ProposedOwnableFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ProposedOwnableFacet {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ProposedOwnableFacet;
  }
}
