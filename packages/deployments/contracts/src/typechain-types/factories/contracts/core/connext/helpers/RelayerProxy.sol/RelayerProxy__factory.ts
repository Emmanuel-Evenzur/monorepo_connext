/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../../common";
import type {
  RelayerProxy,
  RelayerProxyInterface,
} from "../../../../../../contracts/core/connext/helpers/RelayerProxy.sol/RelayerProxy";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_connext",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spokeConnector",
        type: "address",
      },
      {
        internalType: "address",
        name: "_gelatoRelayer",
        type: "address",
      },
      {
        internalType: "address",
        name: "_feeCollector",
        type: "address",
      },
      {
        internalType: "address",
        name: "_keep3r",
        type: "address",
      },
      {
        internalType: "address",
        name: "_autonolas",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "_autonolasPriority",
        type: "uint8",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyOwner_notOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyProposed_notProposedOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__ownershipDelayElapsed_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_noOwnershipChange",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_noProposal",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_relayer",
        type: "address",
      },
    ],
    name: "RelayerProxy__addRelayer_relayerAdded",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "RelayerProxy__definedAddress_empty",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
    ],
    name: "RelayerProxy__isWorkableBySender_notWorkable",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
    ],
    name: "RelayerProxy__onlyRelayer_notRelayer",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_relayer",
        type: "address",
      },
    ],
    name: "RelayerProxy__removeRelayer_relayerNotAdded",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
    ],
    name: "RelayerProxy__validateAndPayWithCredits_notKeep3r",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "updated",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "previous",
        type: "address",
      },
    ],
    name: "AutonolasChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "updated",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "previous",
        type: "uint8",
      },
    ],
    name: "AutonolasPriorityChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "updated",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "previous",
        type: "address",
      },
    ],
    name: "ConnextChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "updated",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "previous",
        type: "address",
      },
    ],
    name: "FeeCollectorChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    name: "FundsDeducted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    name: "FundsReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "updated",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "previous",
        type: "address",
      },
    ],
    name: "GelatoRelayerChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "updated",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "previous",
        type: "address",
      },
    ],
    name: "Keep3rChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "proposedOwner",
        type: "address",
      },
    ],
    name: "OwnershipProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "relayer",
        type: "address",
      },
    ],
    name: "RelayerAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "relayer",
        type: "address",
      },
    ],
    name: "RelayerRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "updated",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "previous",
        type: "address",
      },
    ],
    name: "SpokeConnectorChanged",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptProposedOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_relayer",
        type: "address",
      },
    ],
    name: "addRelayer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowedRelayer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "autonolas",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "autonolasPriority",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "connext",
    outputs: [
      {
        internalType: "contract IConnext",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "delay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint32",
                name: "originDomain",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "destinationDomain",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "canonicalDomain",
                type: "uint32",
              },
              {
                internalType: "address",
                name: "to",
                type: "address",
              },
              {
                internalType: "address",
                name: "delegate",
                type: "address",
              },
              {
                internalType: "bool",
                name: "receiveLocal",
                type: "bool",
              },
              {
                internalType: "bytes",
                name: "callData",
                type: "bytes",
              },
              {
                internalType: "uint256",
                name: "slippage",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "originSender",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "bridgedAmt",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "normalizedIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "nonce",
                type: "uint256",
              },
              {
                internalType: "bytes32",
                name: "canonicalId",
                type: "bytes32",
              },
            ],
            internalType: "struct TransferInfo",
            name: "params",
            type: "tuple",
          },
          {
            internalType: "address[]",
            name: "routers",
            type: "address[]",
          },
          {
            internalType: "bytes[]",
            name: "routerSignatures",
            type: "bytes[]",
          },
          {
            internalType: "address",
            name: "sequencer",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "sequencerSignature",
            type: "bytes",
          },
        ],
        internalType: "struct ExecuteArgs",
        name: "_args",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bytes32",
        name: "transferId",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "feeCollector",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "gelatoRelayer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "keep3r",
    outputs: [
      {
        internalType: "contract IKeep3rV2",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "priorityKeepers",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newlyProposed",
        type: "address",
      },
    ],
    name: "proposeNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proposed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposedTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "message",
            type: "bytes",
          },
          {
            internalType: "bytes32[32]",
            name: "path",
            type: "bytes32[32]",
          },
          {
            internalType: "uint256",
            name: "index",
            type: "uint256",
          },
        ],
        internalType: "struct ISpokeConnector.Proof[]",
        name: "_proofs",
        type: "tuple[]",
      },
      {
        internalType: "bytes32",
        name: "_aggregateRoot",
        type: "bytes32",
      },
      {
        internalType: "bytes32[32]",
        name: "_aggregatePath",
        type: "bytes32[32]",
      },
      {
        internalType: "uint256",
        name: "_aggregateIndex",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    name: "proveAndProcess",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_relayer",
        type: "address",
      },
    ],
    name: "removeRelayer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounced",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_encodedData",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "_messageFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_relayerFee",
        type: "uint256",
      },
    ],
    name: "send",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_autonolas",
        type: "address",
      },
    ],
    name: "setAutonolas",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_autonolasPriority",
        type: "uint8",
      },
    ],
    name: "setAutonolasPriority",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_connext",
        type: "address",
      },
    ],
    name: "setConnext",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_feeCollector",
        type: "address",
      },
    ],
    name: "setFeeCollector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_gelatoRelayer",
        type: "address",
      },
    ],
    name: "setGelatoRelayer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_keep3r",
        type: "address",
      },
    ],
    name: "setKeep3r",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_spokeConnector",
        type: "address",
      },
    ],
    name: "setSpokeConnector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "spokeConnector",
    outputs: [
      {
        internalType: "contract ISpokeConnector",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608034620003b857601f620019dc38819003918201601f191683019291906001600160401b03841183851017620003bd578160e09284926040968752833981010312620003b8576200005181620003d3565b906200006060208201620003d3565b906200006e848201620003d3565b6200007c60608301620003d3565b926200008b60808401620003d3565b9060c06200009c60a08601620003d3565b9401519160ff831691828403620003b8578891600160035560009788968754938551600160a01b6001900395338782167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08d80a3336001600160a01b0319918216178b5560029a909a55600180548b1690556007546001600160a01b038e81168352878216166020830152999c8d9a918b9188917f87539ad41983c0ecff8f321db8edf4dd9e830593562770bdacdda085b83e3bb290604090a11691161760075560085486516001600160a01b03838116825287831616602082015290918a918791908060408101037f66948d99d8431a8416af2202bc301823b7cdd87beb9bddaa274aedac0611a5fd91a11691161760085560045485516001600160a01b038381168252868316166020820152909185918060408101037f5db4a067a1f787c3269642464a2a1560868b50b0873e7dec83939ae2359f612891a1169a168a1760045560055484516001600160a01b038381168252858316166020820152909188918591908060408101037f649c5e3d0ed183894196148e193af316452b0037e77d2ff0fef23b7dc722bed091a11691161760055560065483516001600160a01b038381168252848316166020820152909187918491908060408101037f711d2a81db157c0acede64f080708460163dfaddcd4266c2c609efb458d3e4c091a11691161760065560095482516001600160a01b0388811682528383161660208201529096908060408101037f17da78d98886c3b8819430ab0693a44c32dfa6426a4db4601ce45bc4bc2385ec91a1168094825193845286161760a01c60ff1660208301527f65b4d060a802296de931fb313ab2ca65155e7a26b0ea83e41044f3036d5ac3f391a16001600160a81b03199092161760a09190911b60ff60a01b1617600955818152600a6020528281205460ff16620003a1578183827f03580ee9f53a62b7cb409a2cb56f9be87747dd15017afc5cef6eef321e4fb2c59460209452600a845220600160ff198254161790558351908152a1516115f39081620003e98239f35b506024915190633d85ded560e11b82526004820152fd5b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b0382168203620003b85756fe608060409080825260049081361015610051575b5050361561002057600080fd5b7f063d07ee72a7483b8e07ca09054bb686775c5c030f945dde3823a5257a0a93eb90478151903482526020820152a1005b600091823560e01c9182632f55b98d14611264575081633ccfd60b146112085781633cf52ffb146111e95781634cc18e571461115b5781634d6f2013146110cd5781635e21966a1461101957816360f0a5ac14610f78578163634c7bb514610f4f5781636a42b8f814610f315781636eba787f14610f08578163715018a614610e415781638909971714610db35781638da5cb5b14610d8b5781638efed12714610a555781639c166c0b14610a2c5781639cadce0014610a035781639f645a0314610975578163a42dce80146108d0578163b1f8100d14610811578163ba6fef61146107d3578163c415b95c146107aa578163c5b350df14610706578163d1851c92146106dd578163d232c220146106b4578163d9ef0bee14610534578163dad837a81461049d578163dd39f00d146103d6578163de4b0548146103ad578163e79457f1146101d3575063f9aa7645146101ab5780610013565b90346101cf57816003193601126101cf5760209060ff60095460a01c169051908152f35b5080fd5b905082346103a9576104803660031901126103a95781359067ffffffffffffffff8083116103a557366023840112156103a557828401359081116103a5578060051b6024368183870101116103a1576104449036821161039d57338852602095600a875260ff868a205416156103895761024b611336565b6008546001600160a01b031694853b156103855795949390899793929186519763508a109b60e01b8952806104649b6104608d8c01918c015252610484808a01928a010195848401938b9061046219813603015b84831061030c575050505050505086868094829694848395359084015261040060448085013780359083015203925af190811561030357506102ef575b506102e78235611525565b600160035580f35b6102f8906112ce565b6101cf5781836102dc565b513d84823e3d90fd5b919395999a9b9c509193959697610483198d82030187528935828112156103815785896001936104208d6103576103498a8798019586018061149d565b6104408087528601916114cf565b93610400604482018786013701359101529b019701930190918e9c9b9a999897969593949261029f565b8f80fd5b8980fd5b508451630981f7d560e21b81523381890152fd5b8780fd5b8680fd5b8480fd5b8280fd5b8284346101cf57816003193601126101cf5760075490516001600160a01b039091168152602090f35b905082346103a95760203660031901126103a9576103f261129f565b83546001600160a01b0391908216330361048e571691821561047957828452600a60205260ff82852054166104645750816020917f03580ee9f53a62b7cb409a2cb56f9be87747dd15017afc5cef6eef321e4fb2c5938552600a8352808520600160ff1982541617905551908152a180f35b826024925191633d85ded560e11b8352820152fd5b826024925191633a930fdf60e01b8352820152fd5b5050516311a8a1bb60e31b8152fd5b905082346103a95760203660031901126103a95781359060ff8216928383036103a55784546001600160a01b0316330361052657507f65b4d060a802296de931fb313ab2ca65155e7a26b0ea83e41044f3036d5ac3f39060095493815190815260ff8560a01c166020820152a160ff60a01b1990911660a09190911b60ff60a01b161760095580f35b90516311a8a1bb60e31b8152fd5b8284346101cf5760603660031901126101cf5782359267ffffffffffffffff84116103a957366023850112156103a95783810135906105728261131a565b9161057f845193846112f8565b80835236602482880101116103a557602495818692602098899301838701378401015260243591338552600a865260ff84862054161561069e576105c1611336565b6008546001600160a01b031690813b1561069a579185918488948751958694630aec6b9f60e21b86528501528051908160248601528a865b83811061067d5750505090604484838783839684010152601f801991011681010301925af1801561067057610651575b5060008051602061159e833981519152929347908351928352820152a16102e7604435611525565b9261066a60008051602061159e833981519152946112ce565b92610629565b50505051903d90823e3d90fd5b808301820151898201604401528b975088965089945081016105f9565b8580fd5b8351630981f7d560e21b81523381840152602490fd5b8284346101cf57816003193601126101cf57905490516001600160a01b03909116158152602090f35b8284346101cf57816003193601126101cf5760015490516001600160a01b039091168152602090f35b905082346103a957826003193601126103a9576001546001600160a01b03929091838316919033830361079d5762093a806107436002544261157a565b11156107905750508084549384167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08680a36001600160a01b031992831617835560028390551660015580f35b516324e0285f60e21b8152fd5b516311a7f27160e11b8152fd5b8284346101cf57816003193601126101cf5760055490516001600160a01b039091168152602090f35b8284346101cf5760203660031901126101cf5760209160ff9082906001600160a01b036107fe61129f565b168152600b855220541690519015158152f35b839150346103a95760203660031901126103a95761082d61129f565b83546001600160a01b03939192919084163381036108c2578460015494168095851614806108b7575b6108a957841461089c575050426002556001600160a01b03191681176001557f6ab4d119f23076e8ad491bc65ce85f017fb0591dce08755ba8591059cc51737a8280a280f35b51634a2fb73f60e11b8152fd5b50516311bc066560e11b8152fd5b506002541515610856565b50516311a8a1bb60e31b8152fd5b905082346103a95760203660031901126103a9576108ec61129f565b83546001600160a01b03908116330361048e5780821693841561095e575060055492516001600160a01b03928316815290831690911660208201527f649c5e3d0ed183894196148e193af316452b0037e77d2ff0fef23b7dc722bed090604090a16001600160a01b0319161760055580f35b8351633a930fdf60e01b8152908101859052602490fd5b905082346103a95760203660031901126103a95761099161129f565b83546001600160a01b03908116330361048e5780821693841561095e575060085492516001600160a01b03928316815290831690911660208201527f66948d99d8431a8416af2202bc301823b7cdd87beb9bddaa274aedac0611a5fd90604090a16001600160a01b0319161760085580f35b8284346101cf57816003193601126101cf5760085490516001600160a01b039091168152602090f35b8284346101cf57816003193601126101cf5760095490516001600160a01b039091168152602090f35b8284346101cf5760031981813601126103a957833567ffffffffffffffff8111610d875780850160a0823603938401126103a557338552602095600a875260ff858720541615610d7057610aa7611336565b60075485516331f1f3e960e11b8152828101899052946001600160a01b0391821694919391908235906101a21901811215610d6c5781019283019260a0602488015263ffffffff80610af88661148c565b1660c489015280610b0b6024840161148c565b1660e4890152610b1d6044830161148c565b1693610104948589015285610b34606484016112ba565b1661012490818a015286610b4a608485016112ba565b169061014491828b015260a484013592831515809403610d6857938c96938996938f9b99938d9b610bb98d9996610ba6610b918c9961016498898c015260c48a019061149d565b6102646101849b6101a08d82015201916114cf565b9a6101a460e489013591015286016112ba565b166101c48d01528301356101e48c01528201356102048b01528101356102248a01520135610244880152610bf060248201836114f0565b602319898603810160448b0152818652948a01959190875b818110610d3457505050610c1f60448301846114f0565b858a88030160648b01528087528a8701968b8260051b82010197838a925b848410610cec5750505050505092610c73610c82936084848b99989597610c6760648c9a016112ba565b1682890152019061149d565b918584030160a48601526114cf565b03925af1928315610ce1578093610cac575b5050610ca1602435611525565b600160035551908152f35b909192508382813d8311610cda575b610cc581836112f8565b81010312610cd7575051908380610c94565b80fd5b503d610cbb565b8251903d90823e3d90fd5b93979a50939b509396999b80610d19600193979a610d138f601f19888403018a528861149d565b906114cf565b9c01940194018f9b99969392948f999692958e9c9996610c3d565b9396829a508b9284979a9c9296995093610d4f6001956112ba565b168152019801910192899794918c96938e9a9895610c08565b8c80fd5b8880fd5b602490855190630981f7d560e21b82523390820152fd5b8380fd5b8284346101cf57816003193601126101cf57905490516001600160a01b039091168152602090f35b905082346103a95760203660031901126103a957610dcf61129f565b83546001600160a01b03908116330361048e5780821693841561095e575060095492516001600160a01b03928316815290831690911660208201527f17da78d98886c3b8819430ab0693a44c32dfa6426a4db4601ce45bc4bc2385ec90604090a16001600160a01b0319161760095580f35b839150346103a957826003193601126103a9578254916001600160a01b039182841691338303610efb5760025462093a80610e7c824261157a565b1115610eed5715610ee057600154938416610ed357505083907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a36001600160a01b0319918216835560028390551660015580f35b516323295ef960e01b8152fd5b51630e4b303f60e21b8152fd5b50516324e0285f60e21b8152fd5b516311a8a1bb60e31b8152fd5b839150346103a957826003193601126103a9575490516001600160a01b03909116815260209150f35b8284346101cf57816003193601126101cf576020905162093a808152f35b8284346101cf57816003193601126101cf5760065490516001600160a01b039091168152602090f35b905082346103a95760203660031901126103a957610f9461129f565b83546001600160a01b0391908216330361048e571691821561047957828452600a60205260ff8285205416156110045750816020917f10e1f7ce9fd7d1b90a66d13a2ab3cb8dd7f29f3f8d520b143b063ccfbab6906b938552600a835280852060ff19815416905551908152a180f35b8260249251916309fbf0f560e31b8352820152fd5b905082346103a95760203660031901126103a95761103561129f565b83546001600160a01b03929190831633036110bd578281169283156110a657845492516001600160a01b03928316815290831690911660208201527f5db4a067a1f787c3269642464a2a1560868b50b0873e7dec83939ae2359f612890604090a16001600160a01b03191617905580f35b505051633a930fdf60e01b81529182015260249150fd5b81516311a8a1bb60e31b81528490fd5b905082346103a95760203660031901126103a9576110e961129f565b83546001600160a01b03908116330361048e5780821693841561095e575060075492516001600160a01b03928316815290831690911660208201527f87539ad41983c0ecff8f321db8edf4dd9e830593562770bdacdda085b83e3bb290604090a16001600160a01b0319161760075580f35b905082346103a95760203660031901126103a95761117761129f565b83546001600160a01b03908116330361048e5780821693841561095e575060065492516001600160a01b03928316815290831690911660208201527f711d2a81db157c0acede64f080708460163dfaddcd4266c2c609efb458d3e4c090604090a16001600160a01b0319161760065580f35b8284346101cf57816003193601126101cf576020906002549051908152f35b839150346103a957826003193601126103a95782546001600160a01b03163303610526575060008051602061159e83398151915290611245611336565b47611250813361138c565b4782519182526020820152a1600160035580f35b839085346103a95760203660031901126103a95760209260ff91906001600160a01b0361128f61129f565b168152600a855220541615158152f35b600435906001600160a01b03821682036112b557565b600080fd5b35906001600160a01b03821682036112b557565b67ffffffffffffffff81116112e257604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff8211176112e257604052565b67ffffffffffffffff81116112e257601f01601f191660200190565b600260035414611347576002600355565b60405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b814710611447576000918291829182916001600160a01b03165af13d15611442573d6113b78161131a565b906113c560405192836112f8565b8152600060203d92013e5b156113d757565b60405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d617920686176652072657665727465640000000000006064820152608490fd5b6113d0565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e63650000006044820152606490fd5b359063ffffffff821682036112b557565b9035601e19823603018112156112b557016020813591019167ffffffffffffffff82116112b55781360383136112b557565b908060209392818452848401376000828201840152601f01601f1916010190565b9035601e19823603018112156112b557016020813591019167ffffffffffffffff82116112b5578160051b360383136112b557565b60045460008051602061159e833981519152916040916001600160a01b03908290339083160361156a5761155c916005541661138c565b4782519182526020820152a1565b61157591503361138c565b61155c565b9190820391821161158757565b634e487b7160e01b600052601160045260246000fdfe9826a73d0fd7186bda6a15195ac17571869cab151bfe9a8fed3f9407fffe5b18a26469706673582212207de9ab54b5e125db9fc8c212e23087be60df0a6a5d8bdbd488d4d9c0377410c164736f6c63430008110033";

type RelayerProxyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RelayerProxyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RelayerProxy__factory extends ContractFactory {
  constructor(...args: RelayerProxyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _connext: PromiseOrValue<string>,
    _spokeConnector: PromiseOrValue<string>,
    _gelatoRelayer: PromiseOrValue<string>,
    _feeCollector: PromiseOrValue<string>,
    _keep3r: PromiseOrValue<string>,
    _autonolas: PromiseOrValue<string>,
    _autonolasPriority: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<RelayerProxy> {
    return super.deploy(
      _connext,
      _spokeConnector,
      _gelatoRelayer,
      _feeCollector,
      _keep3r,
      _autonolas,
      _autonolasPriority,
      overrides || {}
    ) as Promise<RelayerProxy>;
  }
  override getDeployTransaction(
    _connext: PromiseOrValue<string>,
    _spokeConnector: PromiseOrValue<string>,
    _gelatoRelayer: PromiseOrValue<string>,
    _feeCollector: PromiseOrValue<string>,
    _keep3r: PromiseOrValue<string>,
    _autonolas: PromiseOrValue<string>,
    _autonolasPriority: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _connext,
      _spokeConnector,
      _gelatoRelayer,
      _feeCollector,
      _keep3r,
      _autonolas,
      _autonolasPriority,
      overrides || {}
    );
  }
  override attach(address: string): RelayerProxy {
    return super.attach(address) as RelayerProxy;
  }
  override connect(signer: Signer): RelayerProxy__factory {
    return super.connect(signer) as RelayerProxy__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RelayerProxyInterface {
    return new utils.Interface(_abi) as RelayerProxyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RelayerProxy {
    return new Contract(address, _abi, signerOrProvider) as RelayerProxy;
  }
}
