/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../../common";
import type {
  ERC20,
  ERC20Interface,
} from "../../../../../../contracts/core/connext/helpers/OZERC20.sol/ERC20";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint8",
        name: "decimals_",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "string",
        name: "version_",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "_v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "_r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60e08060405234620003f157620012798038038091620000208285620003f6565b83398101608082820312620003f15781519060ff8216809203620003f1576020838101516001600160401b039491929190858111620003f15782620000679183016200041a565b906040810151868111620003f15783620000839183016200041a565b926060820151878111620003f1576200009d92016200041a565b938151868111620002fe5760038054906001928383811c93168015620003e6575b88841014620003d057601f9283811162000385575b508088848211600114620003205760009162000314575b5060001982841b1c191690841b1781555b855191898311620002fe5760049687548581811c91168015620002f3575b8a821014620002de5782811162000293575b508891841160011462000228579383949184926000956200021c575b50501b92600019911b1c19161783555b60ff19600554161760055582815191012092828151910120836008558060c05246608052604051928301937f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f8552604084015260608301524660808301523060a083015260a0825260c082019382851090851117620002075750826040525190206007553060a052610de7908162000492823960805181610d8b015260a05181610cc5015260c05181610d340152f35b604190634e487b7160e01b6000525260246000fd5b01519350388062000147565b9190601f1984169288600052848a6000209460005b8c898383106200027b575050501062000260575b50505050811b01835562000157565b01519060f884600019921b161c191690553880808062000251565b8686015189559097019694850194889350016200023d565b88600052896000208380870160051c8201928c8810620002d4575b0160051c019086905b828110620002c75750506200012b565b60008155018690620002b7565b92508192620002ae565b602289634e487b7160e01b6000525260246000fd5b90607f169062000119565b634e487b7160e01b600052604160045260246000fd5b905086015138620000ea565b859250601f19821690846000528a6000209160005b8c8282106200036e575050831162000355575b5050811b018155620000fb565b88015160001983861b60f8161c19169055388062000348565b838c01518555899690940193928301920162000335565b82600052886000208480840160051c8201928b8510620003c6575b0160051c019085905b828110620003b9575050620000d3565b60008155018590620003a9565b92508192620003a0565b634e487b7160e01b600052602260045260246000fd5b92607f1692620000be565b600080fd5b601f909101601f19168101906001600160401b03821190821017620002fe57604052565b919080601f84011215620003f1578251906001600160401b038211620002fe576040519160209162000456601f8301601f1916840185620003f6565b818452828287010111620003f15760005b8181106200047d57508260009394955001015290565b85810183015184820184015282016200046756fe608060408181526004918236101561001657600080fd5b600092833560e01c91826306fdde031461070257508163095ea7b3146106d857816318160ddd146106b957816323b872dd146105ef578163313ce567146105cd5781633644e515146105a9578163395093511461054257816370a082311461050b5781637ecebe00146104d357816395d89b41146103d0578163a457c2d714610328578163a9059cbb146102f7578163d505accf1461010a575063dd62ed3e146100bf57600080fd5b34610106578060031936011261010657806020926100db610840565b6100e361085b565b6001600160a01b0391821683526001865283832091168252845220549051908152f35b5080fd5b839150346101065760e036600319011261010657610126610840565b61012e61085b565b90604435926064356084359060ff821682036102f3578042116102b05760018060a01b03908185169283895260066020528989208054906001820190558a519260208401917f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98352868d860152858a1660608601528a608086015260a085015260c084015260c0835260e083019267ffffffffffffffff938181108582111761029d578c52519020906101df610cc2565b928b5192602084019461190160f01b8652602285015260428401526042835260808301908382109082111761028a5791610232939161022a938d5260c4359260a43592519020610c33565b919091610b19565b16036102475750610244939450610a17565b80f35b606490602087519162461bcd60e51b8352820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e617475726500006044820152fd5b634e487b7160e01b8b526041875260248bfd5b634e487b7160e01b8c526041885260248cfd5b875162461bcd60e51b8152602081850152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e650000006044820152606490fd5b8680fd5b505034610106578060031936011261010657602090610321610317610840565b60243590336108a9565b5160018152f35b905082346103cd57826003193601126103cd57610343610840565b918360243592338152600160205281812060018060a01b038616825260205220549082821061037c576020856103218585038733610a17565b608490602086519162461bcd60e51b8352820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152fd5b80fd5b838334610106578160031936011261010657805191809380549160019083821c928285169485156104c9575b60209586861081146104b657858952908115610492575060011461043a575b610436878761042c828c0383610871565b51918291826107f7565b0390f35b81529295507f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b82841061047f57505050826104369461042c9282010194868061041b565b8054868501880152928601928101610461565b60ff19168887015250505050151560051b830101925061042c82610436868061041b565b634e487b7160e01b845260228352602484fd5b93607f16936103fc565b5050346101065760203660031901126101065760209181906001600160a01b036104fb610840565b1681526006845220549051908152f35b5050346101065760203660031901126101065760209181906001600160a01b03610533610840565b16815280845220549051908152f35b8284346103cd57816003193601126103cd5761055c610840565b338252600160209081528383206001600160a01b038316845290528282205460243581019290831061059657602084610321858533610a17565b634e487b7160e01b815260118552602490fd5b5050346101065781600319360112610106576020906105c6610cc2565b9051908152f35b50503461010657816003193601126101065760209060ff600554169051908152f35b839150346101065760603660031901126101065761060b610840565b61061361085b565b91846044359460018060a01b03841681526001602052818120338252602052205490600019820361064d575b6020866103218787876108a9565b848210610676575091839161066b6020969561032195033383610a17565b91939481935061063f565b606490602087519162461bcd60e51b8352820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152fd5b5050346101065781600319360112610106576020906002549051908152f35b5050346101065780600319360112610106576020906103216106f8610840565b6024359033610a17565b929150346107f357836003193601126107f357600354600181811c91869082811680156107e9575b60209586861082146107d657508488529081156107b4575060011461075b575b610436868661042c828b0383610871565b929550600383527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b8284106107a157505050826104369461042c92820101943861074a565b8054868501880152928601928101610784565b60ff191687860152505050151560051b830101925061042c826104363861074a565b634e487b7160e01b845260229052602483fd5b93607f169361072a565b8380fd5b6020808252825181830181905290939260005b82811061082c57505060409293506000838284010152601f8019910116010190565b81810186015184820160400152850161080a565b600435906001600160a01b038216820361085657565b600080fd5b602435906001600160a01b038216820361085657565b90601f8019910116810190811067ffffffffffffffff82111761089357604052565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b039081169182156109c457169182156109735760008281528060205260408120549180831061091f57604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef958760209652828652038282205586815220818154019055604051908152a3565b60405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608490fd5b60405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608490fd5b60405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608490fd5b6001600160a01b03908116918215610ac85716918215610a785760207f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925918360005260018252604060002085600052825280604060002055604051908152a3565b60405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608490fd5b60405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608490fd5b6005811015610c1d5780610b2a5750565b60018103610b775760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606490fd5b60028103610bc45760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606490fd5b600314610bcd57565b60405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608490fd5b634e487b7160e01b600052602160045260246000fd5b9291907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311610cb65791608094939160ff602094604051948552168484015260408301526060820152600093849182805260015afa15610ca95781516001600160a01b03811615610ca3579190565b50600190565b50604051903d90823e3d90fd5b50505050600090600390565b307f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03161480610d88575b15610cff5760075490565b60085460405160208101917f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f835260408201527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260a0815260c0810181811067ffffffffffffffff8211176108935760405251902090565b507f00000000000000000000000000000000000000000000000000000000000000004614610cf456fea2646970667358221220c6c0ef40f64df99390fe784735a452f57d33b5cc67580ade64c289e22115ad0064736f6c63430008110033";

type ERC20ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC20ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC20__factory extends ContractFactory {
  constructor(...args: ERC20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    decimals_: PromiseOrValue<BigNumberish>,
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    version_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC20> {
    return super.deploy(
      decimals_,
      name_,
      symbol_,
      version_,
      overrides || {}
    ) as Promise<ERC20>;
  }
  override getDeployTransaction(
    decimals_: PromiseOrValue<BigNumberish>,
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    version_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      decimals_,
      name_,
      symbol_,
      version_,
      overrides || {}
    );
  }
  override attach(address: string): ERC20 {
    return super.attach(address) as ERC20;
  }
  override connect(signer: Signer): ERC20__factory {
    return super.connect(signer) as ERC20__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20Interface {
    return new utils.Interface(_abi) as ERC20Interface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): ERC20 {
    return new Contract(address, _abi, signerOrProvider) as ERC20;
  }
}
