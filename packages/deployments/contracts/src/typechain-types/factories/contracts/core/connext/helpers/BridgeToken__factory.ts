/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  BridgeToken,
  BridgeTokenInterface,
} from "../../../../../contracts/core/connext/helpers/BridgeToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint8",
        name: "decimals_",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: true,
        internalType: "string",
        name: "symbol",
        type: "string",
      },
    ],
    name: "UpdateDetails",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amnt",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amnt",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "_v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "_r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_newName",
        type: "string",
      },
      {
        internalType: "string",
        name: "_newSymbol",
        type: "string",
      },
    ],
    name: "setDetails",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60e0604081815234620004605762001a7c803803809162000021828662000465565b84398201606083820312620004605782519160ff831680930362000460576020848101516001600160401b0395919391908681116200046057826200006891830162000489565b9183820151878111620004605762000081920162000489565b90825194838601868110888211176200044a5784526001808752603160f81b86880190815260008054336001600160a01b0319821681178355919693959294929391906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08880a38251948a861162000436576004958654908282811c921680156200042b575b8b83101462000418578a601f92838111620003ce575b5050808b8382116001146200036b578a916200035f575b50600019600383901b1c191690831b1787555b8251908c82116200034c5760059384548481811c9116801562000341575b8d8210146200032e5780838e9211620002e6575b50508b91831160011462000281579282939183928b9462000275575b50501b916000199060031b1c19161790555b60ff19600654161760065585815191012095519020856009558060c052466080528351948501957f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f87528486015260608501524660808501523060a085015260a0845260c084019584871090871117620002625750508390525190206008553060a05261157b9081620005018239608051816114b8015260a0518161144b015260c05181818161051e015261148d0152f35b634e487b7160e01b825260419052602490fd5b0151925038806200019e565b848a528b8a20919083601f1981168c8f5b88838310620002cd5750505010620002b3575b505050811b019055620001b0565b015160001960f88460031b161c19169055388080620002a5565b8686015188559096019594850194879350018f62000292565b868c5283828d2091818701891c830193871062000324575b01871c019085905b8281106200031857508d915062000182565b8c815501859062000306565b92508192620002fe565b634e487b7160e01b8b5260228a5260248bfd5b90607f16906200016e565b634e487b7160e01b895260418852602489fd5b9050860151386200013d565b898b528c8b2085935090601f1983168c8f5b828210620003b657505083116200039c575b5050811b01875562000150565b88015160001960f88460031b161c1916905538806200038f565b838c0151855588969094019392830192018f6200037d565b898b5283828c209181850160051c83019385106200040e575b0160051c019084905b8281106200040257508c915062000126565b8b8155018490620003f0565b92508192620003e7565b634e487b7160e01b895260228852602489fd5b91607f169162000110565b634e487b7160e01b87526041600452602487fd5b634e487b7160e01b600052604160045260246000fd5b600080fd5b601f909101601f19168101906001600160401b038211908210176200044a57604052565b919080601f8401121562000460578251906001600160401b0382116200044a5760405191602091620004c5601f8301601f191684018562000465565b818452828287010111620004605760005b818110620004ec57508260009394955001015290565b8581018301518482018401528201620004d656fe6080604081815260048036101561001557600080fd5b600092833560e01c90816306fdde0314610dc257508063095ea7b314610d9857806318160ddd14610d7957806323b872dd14610cad578063313ce56714610c8b5780633644e51514610c675780633950935114610c1757806340c10f1914610b5057806370a0823114610b18578063715018a614610abe5780637ecebe0014610a865780638da5cb5b14610a5e57806395d89b411461097d5780639dc29fac14610852578063a457c2d7146107ab578063a9059cbb1461077a578063b7b090ee146103fe578063d505accf14610211578063dd62ed3e146101c45763f2fde38b146100ff57600080fd5b346101c05760203660031901126101c057610118610ee1565b90610121610f40565b6001600160a01b0391821692831561016e57505082546001600160a01b0319811683178455167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b8280fd5b50503461020d578060031936011261020d57806020926101e2610ee1565b6101ea610efc565b6001600160a01b0391821683526002865283832091168252845220549051908152f35b5080fd5b5082903461020d5760e036600319011261020d5761022d610ee1565b610235610efc565b90604435926064356084359060ff821682036103fa578042116103b75760018060a01b03908185169283895260076020528989208054906001820190558a519260208401917f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98352868d860152858a1660608601528a608086015260a085015260c084015260c0835260e083019267ffffffffffffffff93818110858211176103a4578c52519020906102e6611448565b928b5192602084019461190160f01b8652602285015260428401526042835260808301908382109082111761039157916103399391610331938d5260c4359260a435925190206113b9565b91909161129f565b160361034e575061034b93945061119d565b80f35b606490602087519162461bcd60e51b8352820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e617475726500006044820152fd5b634e487b7160e01b8b526041875260248bfd5b634e487b7160e01b8c526041885260248cfd5b875162461bcd60e51b8152602081850152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e650000006044820152606490fd5b8680fd5b50346101c057816003193601126101c05767ffffffffffffffff9080358281116107765761042f9036908301610f12565b6024939193358281116103fa576104499036908501610f12565b949093610454610f40565b838311610679576104658154610f98565b93601f94858111610717575b508389868211600114610697578a9161068c575b508460011b906000198660031b1c19161782555b8611610679575060056104ac8154610f98565b84811161061c575b50858885821160011461059c578991610591575b508660011b906000198860031b1c19161790555b8551926104f2908301601f191660200184610fd2565b8183526020830192368383011161058d57836105439184848997378960208683010152519020806009557f0000000000000000000000000000000000000000000000000000000000000000906114de565b60085581865192839283378101878152039020935192839283378101848152039020907f1ec4c73af923253fb2c28a509dd78d342709289a09929d78c64c0b8e047efbcd8380a380f35b8780fd5b9050850135386104c8565b828a527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0915087601f1981168b5b8181106106015750106105e7575b5050600186811b0190556104dc565b860135600019600389901b60f8161c1916905538806105d8565b8984013585556001909401936020938401938b9350016105ca565b8189527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db085808901841c82019260208a10610670575b01831c01905b81811061066557506104b4565b898155600101610658565b92508192610652565b634e487b7160e01b885260419052602487fd5b905083013538610485565b838b527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b915085601f1981168c5b8181106106fc5750106106e2575b5050600184811b018255610499565b840135600019600387901b60f8161c1916905538806106d3565b878401358555600190940193602093840193899350016106c5565b828a527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b8680870160051c8201926020881061076d575b0160051c01905b8181106107625750610471565b8a8155600101610755565b9250819261074e565b8480fd5b50503461020d578060031936011261020d576020906107a461079a610ee1565b602435903361102d565b5160018152f35b50823461084f578260031936011261084f576107c5610ee1565b918360243592338152600260205281812060018060a01b03861682526020522054908282106107fe576020856107a4858503873361119d565b608490602086519162461bcd60e51b8352820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152fd5b80fd5b5082903461020d578260031936011261020d5761086d610ee1565b60243590610879610f40565b6001600160a01b031691821561093057828452600160205284842054908282106108e257508184957fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef93602093868852600185520381872055816003540360035551908152a380f35b608490602087519162461bcd60e51b8352820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152fd5b608490602086519162461bcd60e51b8352820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152fd5b50503461020d578160031936011261020d578051908260055461099f81610f98565b80855291600191808316908115610a3657506001146109d9575b5050506109cb826109d5940383610fd2565b5191829182610e98565b0390f35b9450600585527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db05b828610610a1e575050506109cb8260206109d595820101946109b9565b80546020878701810191909152909501948101610a01565b6109d59750869350602092506109cb94915060ff191682840152151560051b820101946109b9565b50503461020d578160031936011261020d57905490516001600160a01b039091168152602090f35b50503461020d57602036600319011261020d5760209181906001600160a01b03610aae610ee1565b1681526007845220549051908152f35b833461084f578060031936011261084f57610ad7610f40565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b50503461020d57602036600319011261020d5760209181906001600160a01b03610b40610ee1565b1681526001845220549051908152f35b5090346101c057806003193601126101c057610b6a610ee1565b9060243591610b77610f40565b6001600160a01b0316928315610bd557506020827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92610bba879560035461100a565b6003558585526001835280852082815401905551908152a380f35b6020606492519162461bcd60e51b8352820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152fd5b50503461020d578060031936011261020d576107a4602092610c60610c3a610ee1565b338352600286528483206001600160a01b0382168452865291849020546024359061100a565b903361119d565b50503461020d578160031936011261020d57602090610c84611448565b9051908152f35b50503461020d578160031936011261020d5760209060ff600654169051908152f35b5082903461020d57606036600319011261020d57610cc9610ee1565b610cd1610efc565b6001600160a01b03821684526002602090815285852033865290529284902054604435939260018201610d0d575b6020866107a487878761102d565b848210610d365750918391610d2b602096956107a49503338361119d565b919394819350610cff565b606490602087519162461bcd60e51b8352820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152fd5b50503461020d578160031936011261020d576020906003549051908152f35b50503461020d578060031936011261020d576020906107a4610db8610ee1565b602435903361119d565b9291905034610e945783600319360112610e9457805484610de282610f98565b80865292600192808416908115610e695750600114610e0d575b6109d586866109cb828b0383610fd2565b815294507f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b828610610e51575050506109cb8260206109d5958201019438610dfc565b80546020878701810191909152909501948101610e33565b90506109d59750869350602092506109cb94915060ff191682840152151560051b8201019438610dfc565b8380fd5b6020808252825181830181905290939260005b828110610ecd57505060409293506000838284010152601f8019910116010190565b818101860151848201604001528501610eab565b600435906001600160a01b0382168203610ef757565b600080fd5b602435906001600160a01b0382168203610ef757565b9181601f84011215610ef75782359167ffffffffffffffff8311610ef75760208381860195010111610ef757565b6000546001600160a01b03163303610f5457565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b90600182811c92168015610fc8575b6020831014610fb257565b634e487b7160e01b600052602260045260246000fd5b91607f1691610fa7565b90601f8019910116810190811067ffffffffffffffff821117610ff457604052565b634e487b7160e01b600052604160045260246000fd5b9190820180921161101757565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b0390811691821561114a57169182156110f957600082815260016020526040812054918083106110a557604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef95876020965260018652038282205586815220818154019055604051908152a3565b60405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608490fd5b60405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608490fd5b60405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608490fd5b6001600160a01b0390811691821561124e57169182156111fe5760207f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925918360005260028252604060002085600052825280604060002055604051908152a3565b60405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608490fd5b60405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608490fd5b60058110156113a357806112b05750565b600181036112fd5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606490fd5b6002810361134a5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606490fd5b60031461135357565b60405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608490fd5b634e487b7160e01b600052602160045260246000fd5b9291907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831161143c5791608094939160ff602094604051948552168484015260408301526060820152600093849182805260015afa1561142f5781516001600160a01b03811615611429579190565b50600190565b50604051903d90823e3d90fd5b50505050600090600390565b307f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031614806114b5575b156114855760085490565b6114b26009547f0000000000000000000000000000000000000000000000000000000000000000906114de565b90565b507f0000000000000000000000000000000000000000000000000000000000000000461461147a565b906040519060208201927f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f8452604083015260608201524660808201523060a082015260a0815260c0810181811067ffffffffffffffff821117610ff4576040525190209056fea2646970667358221220670171d458ba6451247321304b08a5344f1efed7628776f48f1aabf0a942617164736f6c63430008110033";

type BridgeTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BridgeTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BridgeToken__factory extends ContractFactory {
  constructor(...args: BridgeTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    decimals_: PromiseOrValue<BigNumberish>,
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BridgeToken> {
    return super.deploy(
      decimals_,
      name_,
      symbol_,
      overrides || {}
    ) as Promise<BridgeToken>;
  }
  override getDeployTransaction(
    decimals_: PromiseOrValue<BigNumberish>,
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      decimals_,
      name_,
      symbol_,
      overrides || {}
    );
  }
  override attach(address: string): BridgeToken {
    return super.attach(address) as BridgeToken;
  }
  override connect(signer: Signer): BridgeToken__factory {
    return super.connect(signer) as BridgeToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BridgeTokenInterface {
    return new utils.Interface(_abi) as BridgeTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BridgeToken {
    return new Contract(address, _abi, signerOrProvider) as BridgeToken;
  }
}
