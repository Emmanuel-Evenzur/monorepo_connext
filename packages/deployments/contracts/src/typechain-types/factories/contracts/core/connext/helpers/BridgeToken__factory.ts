/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  BridgeToken,
  BridgeTokenInterface,
} from "../../../../../contracts/core/connext/helpers/BridgeToken";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: true,
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint8",
        name: "decimals",
        type: "uint8",
      },
    ],
    name: "UpdateDetails",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amnt",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "detailsHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amnt",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "_v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "_r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_newName",
        type: "string",
      },
      {
        internalType: "string",
        name: "_newSymbol",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "_newDecimals",
        type: "uint8",
      },
    ],
    name: "setDetails",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_detailsHash",
        type: "bytes32",
      },
    ],
    name: "setDetailsHash",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611be5806100206000396000f3fe608060405234801561001057600080fd5b506004361061014d5760003560e01c8063715018a6116100c3578063a457c2d71161007c578063a457c2d714610285578063a9059cbb14610298578063cc2ab7c7146102ab578063d505accf146102be578063dd62ed3e146102d1578063f2fde38b1461030a57600080fd5b8063715018a61461022c5780637ecebe00146102345780638129fc1c146102475780638da5cb5b1461024f57806395d89b411461026a5780639dc29fac1461027257600080fd5b80633644e515116101155780633644e515146101cd57806339509351146101d557806340c10f19146101e85780634815fcb1146101fd578063654935f41461020657806370a082311461021957600080fd5b806306fdde0314610152578063095ea7b31461017057806318160ddd1461019357806323b872dd146101a5578063313ce567146101b8575b600080fd5b61015a61031d565b60405161016791906115c7565b60405180910390f35b61018361017e366004611616565b6103b2565b6040519015158152602001610167565b609b545b604051908152602001610167565b6101836101b3366004611640565b6103c8565b609f5460405160ff9091168152602001610167565b610197610431565b6101836101e3366004611616565b6104c9565b6101fb6101f6366004611616565b6104ff565b005b61019760a05481565b6101fb6102143660046116d6565b610515565b610197610227366004611757565b610688565b6101fb6106a8565b610197610242366004611757565b6106bc565b6101fb6106da565b6033546040516001600160a01b039091168152602001610167565b61015a61089b565b6101fb610280366004611616565b6108ad565b610183610293366004611616565b6108bf565b6101836102a6366004611616565b61090e565b6101fb6102b9366004611772565b61091b565b6101fb6102cc36600461178b565b610931565b6101976102df3660046117f5565b6001600160a01b039182166000908152609a6020908152604080832093909416825291909152205490565b6101fb610318366004611757565b610a95565b6060609d600001805461032f90611828565b80601f016020809104026020016040519081016040528092919081815260200182805461035b90611828565b80156103a85780601f1061037d576101008083540402835291602001916103a8565b820191906000526020600020905b81548152906001019060200180831161038b57829003601f168201915b5050505050905090565b60006103bf338484610aa6565b50600192915050565b60006103d5848484610bcb565b610427843361042285604051806060016040528060288152602001611b63602891396001600160a01b038a166000908152609a602090815260408083203384529091529020549190610d51565b610aa6565b5060019392505050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f609d600001604051602001610469919061185c565b6040516020818303038152906040528051906020012061048860665490565b60408051602081019490945283019190915260608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b336000818152609a602090815260408083206001600160a01b038716845290915281205490916103bf9185906104229086610d7d565b610507610d90565b6105118282610dea565b5050565b6000609d600001805461052790611828565b159150819050806105ad575060a0546105ab87878080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050604080516020601f8b018190048102820181019092528981529250899150889081908401838280828437600092019190915250889250610ed0915050565b145b6105f35760405162461bcd60e51b815260206004820152601260248201527121636f6d6d69747465642064657461696c7360701b60448201526064015b60405180910390fd5b609d610600868883611943565b50609e61060e848683611943565b50609f805460ff191660ff841617905580610680578160ff168484604051610637929190611a04565b6040518091039020878760405161064f929190611a04565b604051908190038120907f96848da8c41ae282b5ec5c04f45fc469a8186bb78de70419275c2c402fcc27b190600090a45b505050505050565b6001600160a01b0381166000908152609960205260408120545b92915050565b6106b0610d90565b6106ba6000610f0c565b565b6001600160a01b0381166000908152609c60205260408120546106a2565b600054610100900460ff16158080156106fa5750600054600160ff909116105b806107145750303b158015610714575060005460ff166001145b6107775760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016105ea565b6000805460ff19166001179055801561079a576000805461ff0019166101001790555b6107a2610f5e565b610852609d60000180546107b590611828565b80601f01602080910402602001604051908101604052809291908181526020018280546107e190611828565b801561082e5780601f106108035761010080835404028352916020019161082e565b820191906000526020600020905b81548152906001019060200180831161081157829003601f168201915b5050505050604051806040016040528060018152602001603160f81b815250610f8d565b8015610898576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50565b6060609d600101805461032f90611828565b6108b5610d90565b6105118282610fbe565b60006103bf338461042285604051806060016040528060258152602001611b8b60259139336000908152609a602090815260408083206001600160a01b038d1684529091529020549190610d51565b60006103bf338484610bcb565b610923610d90565b8060a054146108985760a055565b834211156109815760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e6500000060448201526064016105ea565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98888886109b08c6110c2565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e0016040516020818303038152906040528051906020012090506000610a0b826110ea565b90506000610a1b82878787611138565b9050896001600160a01b0316816001600160a01b031614610a7e5760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e6174757265000060448201526064016105ea565b610a898a8a8a610aa6565b50505050505050505050565b610a9d610d90565b61089881611160565b6001600160a01b038316610b085760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016105ea565b6001600160a01b038216610b695760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016105ea565b6001600160a01b038381166000818152609a602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b038316610c2f5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016105ea565b6001600160a01b038216610c915760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016105ea565b610cce81604051806060016040528060268152602001611b3d602691396001600160a01b0386166000908152609960205260409020549190610d51565b6001600160a01b038085166000908152609960205260408082209390935590841681522054610cfd9082610d7d565b6001600160a01b0380841660008181526099602052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610bbe9085815260200190565b60008184841115610d755760405162461bcd60e51b81526004016105ea91906115c7565b505050900390565b6000610d898284611a2a565b9392505050565b6033546001600160a01b031633146106ba5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105ea565b6001600160a01b038216610e405760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016105ea565b609b54610e4d9082610d7d565b609b556001600160a01b038216600090815260996020526040902054610e739082610d7d565b6001600160a01b0383166000818152609960205260408082209390935591519091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610ec49085815260200190565b60405180910390a35050565b600083518484518585604051602001610eed959493929190611a42565b6040516020818303038152906040528051906020012090509392505050565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff16610f855760405162461bcd60e51b81526004016105ea90611aa2565b6106ba6111db565b600054610100900460ff16610fb45760405162461bcd60e51b81526004016105ea90611aa2565b610511828261120b565b6001600160a01b03821661101e5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016105ea565b61105b81604051806060016040528060228152602001611b1b602291396001600160a01b0385166000908152609960205260409020549190610d51565b6001600160a01b038316600090815260996020526040902055609b54611081908261123c565b609b556040518181526000906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001610ec4565b6001600160a01b0381166000908152609c602052604090208054600181018255905b50919050565b60006106a26110f7611248565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b600080600061114987878787611284565b9150915061115681611371565b5095945050505050565b611168610d90565b6001600160a01b0381166111cd5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016105ea565b61089881610f0c565b505050565b600054610100900460ff166112025760405162461bcd60e51b81526004016105ea90611aa2565b6106ba33610f0c565b600054610100900460ff166112325760405162461bcd60e51b81526004016105ea90611aa2565b6105118282611527565b6000610d898284611aed565b600061127f7f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f61127760655490565b606654611568565b905090565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156112bb5750600090506003611368565b8460ff16601b141580156112d357508460ff16601c14155b156112e45750600090506004611368565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611338573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661136157600060019250925050611368565b9150600090505b94509492505050565b600081600481111561138557611385611b04565b0361138d5750565b60018160048111156113a1576113a1611b04565b036113ee5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016105ea565b600281600481111561140257611402611b04565b0361144f5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016105ea565b600381600481111561146357611463611b04565b036114bb5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016105ea565b60048160048111156114cf576114cf611b04565b036108985760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b60648201526084016105ea565b600054610100900460ff1661154e5760405162461bcd60e51b81526004016105ea90611aa2565b815160209283012081519190920120606591909155606655565b6040805160208101859052908101839052606081018290524660808201523060a082015260009060c001610eed565b60005b838110156115b257818101518382015260200161159a565b838111156115c1576000848401525b50505050565b60208152600082518060208401526115e6816040850160208701611597565b601f01601f19169190910160400192915050565b80356001600160a01b038116811461161157600080fd5b919050565b6000806040838503121561162957600080fd5b611632836115fa565b946020939093013593505050565b60008060006060848603121561165557600080fd5b61165e846115fa565b925061166c602085016115fa565b9150604084013590509250925092565b60008083601f84011261168e57600080fd5b50813567ffffffffffffffff8111156116a657600080fd5b6020830191508360208285010111156116be57600080fd5b9250929050565b803560ff8116811461161157600080fd5b6000806000806000606086880312156116ee57600080fd5b853567ffffffffffffffff8082111561170657600080fd5b61171289838a0161167c565b9097509550602088013591508082111561172b57600080fd5b506117388882890161167c565b909450925061174b9050604087016116c5565b90509295509295909350565b60006020828403121561176957600080fd5b610d89826115fa565b60006020828403121561178457600080fd5b5035919050565b600080600080600080600060e0888a0312156117a657600080fd5b6117af886115fa565b96506117bd602089016115fa565b955060408801359450606088013593506117d9608089016116c5565b925060a0880135915060c0880135905092959891949750929550565b6000806040838503121561180857600080fd5b611811836115fa565b915061181f602084016115fa565b90509250929050565b600181811c9082168061183c57607f821691505b6020821081036110e457634e487b7160e01b600052602260045260246000fd5b600060208083526000845461187081611828565b8084870152604060018084166000811461189157600181146118ab576118d9565b60ff1985168984015283151560051b8901830195506118d9565b896000528660002060005b858110156118d15781548b82018601529083019088016118b6565b8a0184019650505b509398975050505050505050565b634e487b7160e01b600052604160045260246000fd5b601f8211156111d657600081815260208120601f850160051c810160208610156119245750805b601f850160051c820191505b8181101561068057828155600101611930565b67ffffffffffffffff83111561195b5761195b6118e7565b61196f836119698354611828565b836118fd565b6000601f8411600181146119a3576000851561198b5750838201355b600019600387901b1c1916600186901b1783556119fd565b600083815260209020601f19861690835b828110156119d457868501358255602094850194600190920191016119b4565b50868210156119f15760001960f88860031b161c19848701351681555b505060018560011b0183555b5050505050565b8183823760009101908152919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115611a3d57611a3d611a14565b500190565b85815260008551611a5a816020850160208a01611597565b80830190508560208201528451611a78816040840160208901611597565b60f89490941b6001600160f81b031916604091909401908101939093525050604101949350505050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b600082821015611aff57611aff611a14565b500390565b634e487b7160e01b600052602160045260246000fdfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa26469706673582212202203529f2dd94788408d4edca89e4f6681cf7c41083f12e9eb582bdf5409cb7464736f6c634300080f0033";

type BridgeTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BridgeTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BridgeToken__factory extends ContractFactory {
  constructor(...args: BridgeTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BridgeToken> {
    return super.deploy(overrides || {}) as Promise<BridgeToken>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): BridgeToken {
    return super.attach(address) as BridgeToken;
  }
  override connect(signer: Signer): BridgeToken__factory {
    return super.connect(signer) as BridgeToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BridgeTokenInterface {
    return new utils.Interface(_abi) as BridgeTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BridgeToken {
    return new Contract(address, _abi, signerOrProvider) as BridgeToken;
  }
}
