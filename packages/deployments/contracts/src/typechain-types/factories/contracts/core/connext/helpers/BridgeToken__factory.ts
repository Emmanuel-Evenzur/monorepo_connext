/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  BridgeToken,
  BridgeTokenInterface,
} from "../../../../../contracts/core/connext/helpers/BridgeToken";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: true,
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint8",
        name: "decimals",
        type: "uint8",
      },
    ],
    name: "UpdateDetails",
    type: "event",
  },
  {
    inputs: [],
    name: "VERSION",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_PERMIT_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amnt",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "detailsHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "domainSeparator",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amnt",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "_v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "_r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_newName",
        type: "string",
      },
      {
        internalType: "string",
        name: "_newSymbol",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "_newDecimals",
        type: "uint8",
      },
    ],
    name: "setDetails",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_detailsHash",
        type: "bytes32",
      },
    ],
    name: "setDetailsHash",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9608052610120604052600160e052603160f81b610100527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660a05261190160c05234801561006d57600080fd5b5060805160a05160c05161188b6100a4600039600061098e01526000610b730152600081816102bc015261092a015261188b6000f3fe608060405234801561001057600080fd5b50600436106101735760003560e01c80638129fc1c116100de578063a9059cbb11610097578063dd62ed3e11610071578063dd62ed3e1461033d578063f2fde38b14610376578063f698da2514610389578063ffa1ad741461039157600080fd5b8063a9059cbb14610304578063cc2ab7c714610317578063d505accf1461032a57600080fd5b80638129fc1c1461028c5780638da5cb5b1461029457806395d89b41146102af578063982aaf6b146102b75780639dc29fac146102de578063a457c2d7146102f157600080fd5b806340c10f191161013057806340c10f191461020a5780634815fcb11461021f578063654935f41461022857806370a082311461023b578063715018a6146102645780637ecebe001461026c57600080fd5b806306fdde0314610178578063095ea7b31461019657806318160ddd146101b957806323b872dd146101cb578063313ce567146101de57806339509351146101f7575b600080fd5b610180610399565b60405161018d919061125d565b60405180910390f35b6101a96101a43660046112ac565b61042e565b604051901515815260200161018d565b6067545b60405190815260200161018d565b6101a96101d93660046112d6565b610444565b606a5460ff165b60405160ff909116815260200161018d565b6101a96102053660046112ac565b6104ad565b61021d6102183660046112ac565b6104e3565b005b6101bd606c5481565b61021d61023636600461136c565b610524565b6101bd6102493660046113ed565b6001600160a01b031660009081526065602052604090205490565b61021d610692565b6101bd61027a3660046113ed565b606b6020526000908152604090205481565b61021d6106c8565b6033546040516001600160a01b03909116815260200161018d565b610180610789565b6101bd7f000000000000000000000000000000000000000000000000000000000000000081565b61021d6102ec3660046112ac565b61079b565b6101a96102ff3660046112ac565b6107cf565b6101a96103123660046112ac565b61081e565b61021d610325366004611408565b61082b565b61021d610338366004611421565b610863565b6101bd61034b36600461148b565b6001600160a01b03918216600090815260666020908152604080832093909416825291909152205490565b61021d6103843660046113ed565b610af0565b6101bd610b23565b6101e5600081565b6060606860000180546103ab906114be565b80601f01602080910402602001604051908101604052809291908181526020018280546103d7906114be565b80156104245780601f106103f957610100808354040283529160200191610424565b820191906000526020600020905b81548152906001019060200180831161040757829003601f168201915b5050505050905090565b600061043b338484610bc3565b50600192915050565b6000610451848484610ce8565b6104a3843361049e85604051806060016040528060288152602001611809602891396001600160a01b038a1660009081526066602090815260408083203384529091529020549190610e6e565b610bc3565b5060019392505050565b3360008181526066602090815260408083206001600160a01b0387168452909152812054909161043b91859061049e9086610e9a565b6033546001600160a01b031633146105165760405162461bcd60e51b815260040161050d906114f8565b60405180910390fd5b6105208282610ead565b5050565b600060686000018054610536906114be565b159150819050806105bc5750606c546105ba87878080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050604080516020601f8b018190048102820181019092528981529250899150889081908401838280828437600092019190915250889250610f93915050565b145b6105fd5760405162461bcd60e51b815260206004820152601260248201527121636f6d6d69747465642064657461696c7360701b604482015260640161050d565b606861060a868883611589565b506069610618848683611589565b50606a805460ff191660ff84161790558061068a578160ff16848460405161064192919061164a565b6040518091039020878760405161065992919061164a565b604051908190038120907f96848da8c41ae282b5ec5c04f45fc469a8186bb78de70419275c2c402fcc27b190600090a45b505050505050565b6033546001600160a01b031633146106bc5760405162461bcd60e51b815260040161050d906114f8565b6106c66000610fcf565b565b600054610100900460ff166106e35760005460ff16156106e7565b303b155b61074a5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161050d565b600054610100900460ff1615801561076c576000805461ffff19166101011790555b610774611021565b8015610786576000805461ff00191690555b50565b6060606860010180546103ab906114be565b6033546001600160a01b031633146107c55760405162461bcd60e51b815260040161050d906114f8565b6105208282611050565b600061043b338461049e85604051806060016040528060258152602001611831602591393360009081526066602090815260408083206001600160a01b038d1684529091529020549190610e6e565b600061043b338484610ce8565b6033546001600160a01b031633146108555760405162461bcd60e51b815260040161050d906114f8565b80606c541461078657606c55565b834211156108b35760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e65000000604482015260640161050d565b6001600160a01b0387166109095760405162461bcd60e51b815260206004820152601f60248201527f45524332305065726d69743a206f776e6572207a65726f206164647265737300604482015260640161050d565b6001600160a01b038781166000818152606b602090815260408083205481517f00000000000000000000000000000000000000000000000000000000000000008185015280830195909552948b166060850152608084018a905260a0840185905260c08085018a90528151808603909101815260e090940190528251920191909120907f00000000000000000000000000000000000000000000000000000000000000006109b5610b23565b60405160f09290921b6001600160f01b031916602083015260228201526042810183905260620160408051601f198184030181528282528051602091820120600080855291840180845281905260ff8a169284019290925260608301889052608083018790529092509060019060a0016020604051602081039080840390855afa158015610a47573d6000803e3d6000fd5b5050506020604051035190508a6001600160a01b0316816001600160a01b031614610ab45760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e61747572650000604482015260640161050d565b610abf846001611670565b6001600160a01b038c166000908152606b6020526040902055610ae38b8b8b610bc3565b5050505050505050505050565b6033546001600160a01b03163314610b1a5760405162461bcd60e51b815260040161050d906114f8565b61078681611154565b60405160009046907f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f90610b5990606890611688565b6040805191829003822060208301939093528101919091527f00000000000000000000000000000000000000000000000000000000000000006060820152608081018290523060a082015260c0016040516020818303038152906040528051906020012091505090565b6001600160a01b038316610c255760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161050d565b6001600160a01b038216610c865760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161050d565b6001600160a01b0383811660008181526066602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b038316610d4c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161050d565b6001600160a01b038216610dae5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161050d565b610deb816040518060600160405280602681526020016117e3602691396001600160a01b0386166000908152606560205260409020549190610e6e565b6001600160a01b038085166000908152606560205260408082209390935590841681522054610e1a9082610e9a565b6001600160a01b0380841660008181526065602052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610cdb9085815260200190565b60008184841115610e925760405162461bcd60e51b815260040161050d919061125d565b505050900390565b6000610ea68284611670565b9392505050565b6001600160a01b038216610f035760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161050d565b606754610f109082610e9a565b6067556001600160a01b038216600090815260656020526040902054610f369082610e9a565b6001600160a01b0383166000818152606560205260408082209390935591519091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610f879085815260200190565b60405180910390a35050565b600083518484518585604051602001610fb09594939291906116fe565b6040516020818303038152906040528051906020012090509392505050565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff166110485760405162461bcd60e51b815260040161050d9061175e565b6106c66111f1565b6001600160a01b0382166110b05760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b606482015260840161050d565b6110ed816040518060600160405280602281526020016117c1602291396001600160a01b0385166000908152606560205260409020549190610e6e565b6001600160a01b0383166000908152606560205260409020556067546111139082611221565b6067556040518181526000906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001610f87565b6033546001600160a01b0316331461117e5760405162461bcd60e51b815260040161050d906114f8565b6001600160a01b0381166111e35760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161050d565b61078681610fcf565b505050565b600054610100900460ff166112185760405162461bcd60e51b815260040161050d9061175e565b6106c633610fcf565b6000610ea682846117a9565b60005b83811015611248578181015183820152602001611230565b83811115611257576000848401525b50505050565b602081526000825180602084015261127c81604085016020870161122d565b601f01601f19169190910160400192915050565b80356001600160a01b03811681146112a757600080fd5b919050565b600080604083850312156112bf57600080fd5b6112c883611290565b946020939093013593505050565b6000806000606084860312156112eb57600080fd5b6112f484611290565b925061130260208501611290565b9150604084013590509250925092565b60008083601f84011261132457600080fd5b50813567ffffffffffffffff81111561133c57600080fd5b60208301915083602082850101111561135457600080fd5b9250929050565b803560ff811681146112a757600080fd5b60008060008060006060868803121561138457600080fd5b853567ffffffffffffffff8082111561139c57600080fd5b6113a889838a01611312565b909750955060208801359150808211156113c157600080fd5b506113ce88828901611312565b90945092506113e190506040870161135b565b90509295509295909350565b6000602082840312156113ff57600080fd5b610ea682611290565b60006020828403121561141a57600080fd5b5035919050565b600080600080600080600060e0888a03121561143c57600080fd5b61144588611290565b965061145360208901611290565b9550604088013594506060880135935061146f6080890161135b565b925060a0880135915060c0880135905092959891949750929550565b6000806040838503121561149e57600080fd5b6114a783611290565b91506114b560208401611290565b90509250929050565b600181811c908216806114d257607f821691505b6020821081036114f257634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052604160045260246000fd5b601f8211156111ec57600081815260208120601f850160051c8101602086101561156a5750805b601f850160051c820191505b8181101561068a57828155600101611576565b67ffffffffffffffff8311156115a1576115a161152d565b6115b5836115af83546114be565b83611543565b6000601f8411600181146115e957600085156115d15750838201355b600019600387901b1c1916600186901b178355611643565b600083815260209020601f19861690835b8281101561161a57868501358255602094850194600190920191016115fa565b50868210156116375760001960f88860031b161c19848701351681555b505060018560011b0183555b5050505050565b8183823760009101908152919050565b634e487b7160e01b600052601160045260246000fd5b600082198211156116835761168361165a565b500190565b6000808354611696816114be565b600182811680156116ae57600181146116c3576116f2565b60ff19841687528215158302870194506116f2565b8760005260208060002060005b858110156116e95781548a8201529084019082016116d0565b50505082870194505b50929695505050505050565b85815260008551611716816020850160208a0161122d565b8083019050856020820152845161173481604084016020890161122d565b60f89490941b6001600160f81b031916604091909401908101939093525050604101949350505050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b6000828210156117bb576117bb61165a565b50039056fe45524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220a2a9913226a57bc617afa6f22484bf1c3d6c0a109ae01a187da1b255fdc11dc964736f6c634300080f0033";

type BridgeTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BridgeTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BridgeToken__factory extends ContractFactory {
  constructor(...args: BridgeTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BridgeToken> {
    return super.deploy(overrides || {}) as Promise<BridgeToken>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): BridgeToken {
    return super.attach(address) as BridgeToken;
  }
  override connect(signer: Signer): BridgeToken__factory {
    return super.connect(signer) as BridgeToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BridgeTokenInterface {
    return new utils.Interface(_abi) as BridgeTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BridgeToken {
    return new Contract(address, _abi, signerOrProvider) as BridgeToken;
  }
}
