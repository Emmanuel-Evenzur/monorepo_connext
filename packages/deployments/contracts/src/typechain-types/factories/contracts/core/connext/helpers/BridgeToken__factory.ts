/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  BridgeToken,
  BridgeTokenInterface,
} from "../../../../../contracts/core/connext/helpers/BridgeToken";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: true,
        internalType: "string",
        name: "symbol",
        type: "string",
      },
    ],
    name: "UpdateDetails",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amnt",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "detailsHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_decimals",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "_defaultName",
        type: "string",
      },
      {
        internalType: "string",
        name: "_defaultSymbol",
        type: "string",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amnt",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "_v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "_r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_newName",
        type: "string",
      },
      {
        internalType: "string",
        name: "_newSymbol",
        type: "string",
      },
    ],
    name: "setDetails",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_detailsHash",
        type: "bytes32",
      },
    ],
    name: "setDetailsHash",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611cf0806100206000396000f3fe608060405234801561001057600080fd5b506004361061014d5760003560e01c8063715018a6116100c3578063a9059cbb1161007c578063a9059cbb14610290578063b7b090ee146102a3578063cc2ab7c7146102b6578063d505accf146102c9578063dd62ed3e146102dc578063f2fde38b1461031557600080fd5b8063715018a61461022c5780637ecebe00146102345780638da5cb5b1461024757806395d89b41146102625780639dc29fac1461026a578063a457c2d71461027d57600080fd5b8063313ce56711610115578063313ce567146101cd5780633644e515146101e257806339509351146101ea57806340c10f19146101fd5780634815fcb11461021057806370a082311461021957600080fd5b806306fdde0314610152578063095ea7b31461017057806318160ddd1461019357806323b872dd146101a55780633118724e146101b8575b600080fd5b61015a610328565b604051610167919061153b565b60405180910390f35b61018361017e36600461158a565b6103bd565b6040519015158152602001610167565b609b545b604051908152602001610167565b6101836101b33660046115b4565b6103d3565b6101cb6101c63660046116a4565b61043c565b005b609f5460405160ff9091168152602001610167565b61019761057a565b6101836101f836600461158a565b610612565b6101cb61020b36600461158a565b610648565b61019760a05481565b610197610227366004611718565b61065e565b6101cb61067e565b610197610242366004611718565b610692565b6033546040516001600160a01b039091168152602001610167565b61015a6106b0565b6101cb61027836600461158a565b6106c2565b61018361028b36600461158a565b6106d4565b61018361029e36600461158a565b610723565b6101cb6102b136600461177c565b610730565b6101cb6102c43660046117e8565b610862565b6101cb6102d7366004611801565b61087c565b6101976102ea36600461186b565b6001600160a01b039182166000908152609a6020908152604080832093909416825291909152205490565b6101cb610323366004611718565b6109e0565b6060609d600001805461033a9061189e565b80601f01602080910402602001604051908101604052809291908181526020018280546103669061189e565b80156103b35780601f10610388576101008083540402835291602001916103b3565b820191906000526020600020905b81548152906001019060200180831161039657829003601f168201915b5050505050905090565b60006103ca3384846109f1565b50600192915050565b60006103e0848484610b16565b610432843361042d85604051806060016040528060288152602001611c6e602891396001600160a01b038a166000908152609a602090815260408083203384529091529020549190610c9c565b6109f1565b5060019392505050565b600054610100900460ff161580801561045c5750600054600160ff909116105b806104765750303b158015610476575060005460ff166001145b6104de5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6000805460ff191660011790558015610501576000805461ff0019166101001790555b610509610cc8565b61052e848484604051806040016040528060018152602001603160f81b815250610cf7565b8015610574576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f609d6000016040516020016105b291906118d2565b604051602081830303815290604052805190602001206105d160665490565b60408051602081019490945283019190915260608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b336000818152609a602090815260408083206001600160a01b038716845290915281205490916103ca91859061042d9086610d57565b610650610d6a565b61065a8282610dc4565b5050565b6001600160a01b0381166000908152609960205260408120545b92915050565b610686610d6a565b6106906000610eaa565b565b6001600160a01b0381166000908152609c6020526040812054610678565b6060609d600101805461033a9061189e565b6106ca610d6a565b61065a8282610efc565b60006103ca338461042d85604051806060016040528060258152602001611c9660259139336000908152609a602090815260408083206001600160a01b038d1684529091529020549190610c9c565b60006103ca338484610b16565b60a0546107a685858080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050604080516020601f8901819004810282018101909252878152925087915086908190840183828082843760009201919091525061100092505050565b146107e85760405162461bcd60e51b815260206004820152601260248201527121636f6d6d69747465642064657461696c7360701b60448201526064016104d5565b609d6107f58486836119ab565b50609e6108038284836119ab565b508181604051610814929190611a6b565b6040518091039020848460405161082c929190611a6b565b604051908190038120907f1ec4c73af923253fb2c28a509dd78d342709289a09929d78c64c0b8e047efbcd90600090a350505050565b61086a610d6a565b8060a054146108795760a08190555b50565b834211156108cc5760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e6500000060448201526064016104d5565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98888886108fb8c611039565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e001604051602081830303815290604052805190602001209050600061095682611061565b9050600061096682878787611074565b9050896001600160a01b0316816001600160a01b0316146109c95760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e6174757265000060448201526064016104d5565b6109d48a8a8a6109f1565b50505050505050505050565b6109e8610d6a565b6108798161109c565b6001600160a01b038316610a535760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016104d5565b6001600160a01b038216610ab45760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016104d5565b6001600160a01b038381166000818152609a602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b038316610b7a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016104d5565b6001600160a01b038216610bdc5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016104d5565b610c1981604051806060016040528060268152602001611c48602691396001600160a01b0386166000908152609960205260409020549190610c9c565b6001600160a01b038085166000908152609960205260408082209390935590841681522054610c489082610d57565b6001600160a01b0380841660008181526099602052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610b099085815260200190565b60008184841115610cc05760405162461bcd60e51b81526004016104d5919061153b565b505050900390565b600054610100900460ff16610cef5760405162461bcd60e51b81526004016104d590611a7b565b610690611117565b600054610100900460ff16610d1e5760405162461bcd60e51b81526004016104d590611a7b565b610d288382611147565b609d610d348482611ac6565b50609f805460ff191660ff8616179055609e610d508382611ac6565b5050505050565b6000610d638284611b9c565b9392505050565b6033546001600160a01b031633146106905760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104d5565b6001600160a01b038216610e1a5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016104d5565b609b54610e279082610d57565b609b556001600160a01b038216600090815260996020526040902054610e4d9082610d57565b6001600160a01b0383166000818152609960205260408082209390935591519091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610e9e9085815260200190565b60405180910390a35050565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038216610f5c5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016104d5565b610f9981604051806060016040528060228152602001611c26602291396001600160a01b0385166000908152609960205260409020549190610c9c565b6001600160a01b038316600090815260996020526040902055609b54610fbf9082611178565b609b556040518181526000906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001610e9e565b600082518383518460405160200161101b9493929190611bb4565b60405160208183030381529060405280519060200120905092915050565b6001600160a01b0381166000908152609c602052604090208054600181018255905b50919050565b600061067861106e611184565b83611204565b60008060006110858787878761122b565b9150915061109281611318565b5095945050505050565b6110a4610d6a565b6001600160a01b0381166111095760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104d5565b61087981610eaa565b505050565b600054610100900460ff1661113e5760405162461bcd60e51b81526004016104d590611a7b565b61069033610eaa565b600054610100900460ff1661116e5760405162461bcd60e51b81526004016104d590611a7b565b61065a82826114ce565b6000610d638284611bf8565b60006111ff7f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6111b360655490565b6066546040805160208101859052908101839052606081018290524660808201523060a082015260009060c0016040516020818303038152906040528051906020012090509392505050565b905090565b60405161190160f01b6020820152602281018390526042810182905260009060620161101b565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115611262575060009050600361130f565b8460ff16601b1415801561127a57508460ff16601c14155b1561128b575060009050600461130f565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa1580156112df573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166113085760006001925092505061130f565b9150600090505b94509492505050565b600081600481111561132c5761132c611c0f565b036113345750565b600181600481111561134857611348611c0f565b036113955760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016104d5565b60028160048111156113a9576113a9611c0f565b036113f65760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016104d5565b600381600481111561140a5761140a611c0f565b036114625760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016104d5565b600481600481111561147657611476611c0f565b036108795760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b60648201526084016104d5565b600054610100900460ff166114f55760405162461bcd60e51b81526004016104d590611a7b565b815160209283012081519190920120606591909155606655565b60005b8381101561152a578181015183820152602001611512565b838111156105745750506000910152565b602081526000825180602084015261155a81604085016020870161150f565b601f01601f19169190910160400192915050565b80356001600160a01b038116811461158557600080fd5b919050565b6000806040838503121561159d57600080fd5b6115a68361156e565b946020939093013593505050565b6000806000606084860312156115c957600080fd5b6115d28461156e565b92506115e06020850161156e565b9150604084013590509250925092565b803560ff8116811461158557600080fd5b634e487b7160e01b600052604160045260246000fd5b600082601f83011261162857600080fd5b813567ffffffffffffffff8082111561164357611643611601565b604051601f8301601f19908116603f0116810190828211818310171561166b5761166b611601565b8160405283815286602085880101111561168457600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806000606084860312156116b957600080fd5b6116c2846115f0565b9250602084013567ffffffffffffffff808211156116df57600080fd5b6116eb87838801611617565b9350604086013591508082111561170157600080fd5b5061170e86828701611617565b9150509250925092565b60006020828403121561172a57600080fd5b610d638261156e565b60008083601f84011261174557600080fd5b50813567ffffffffffffffff81111561175d57600080fd5b60208301915083602082850101111561177557600080fd5b9250929050565b6000806000806040858703121561179257600080fd5b843567ffffffffffffffff808211156117aa57600080fd5b6117b688838901611733565b909650945060208701359150808211156117cf57600080fd5b506117dc87828801611733565b95989497509550505050565b6000602082840312156117fa57600080fd5b5035919050565b600080600080600080600060e0888a03121561181c57600080fd5b6118258861156e565b96506118336020890161156e565b9550604088013594506060880135935061184f608089016115f0565b925060a0880135915060c0880135905092959891949750929550565b6000806040838503121561187e57600080fd5b6118878361156e565b91506118956020840161156e565b90509250929050565b600181811c908216806118b257607f821691505b60208210810361105b57634e487b7160e01b600052602260045260246000fd5b60006020808352600084546118e68161189e565b8084870152604060018084166000811461190757600181146119215761194f565b60ff1985168984015283151560051b89018301955061194f565b896000528660002060005b858110156119475781548b820186015290830190880161192c565b8a0184019650505b509398975050505050505050565b601f82111561111257600081815260208120601f850160051c810160208610156119845750805b601f850160051c820191505b818110156119a357828155600101611990565b505050505050565b67ffffffffffffffff8311156119c3576119c3611601565b6119d7836119d1835461189e565b8361195d565b6000601f841160018114611a0b57600085156119f35750838201355b600019600387901b1c1916600186901b178355610d50565b600083815260209020601f19861690835b82811015611a3c5786850135825560209485019460019092019101611a1c565b5086821015611a595760001960f88860031b161c19848701351681555b505060018560011b0183555050505050565b8183823760009101908152919050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b815167ffffffffffffffff811115611ae057611ae0611601565b611af481611aee845461189e565b8461195d565b602080601f831160018114611b295760008415611b115750858301515b600019600386901b1c1916600185901b1785556119a3565b600085815260208120601f198616915b82811015611b5857888601518255948401946001909101908401611b39565b5085821015611b765787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b60008219821115611baf57611baf611b86565b500190565b84815260008451611bcc81602085016020890161150f565b80830190508460208201528351611bea81604084016020880161150f565b016040019695505050505050565b600082821015611c0a57611c0a611b86565b500390565b634e487b7160e01b600052602160045260246000fdfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220505fcc3cc5c1d922fb8b34814ffdcc670fe5241fd98dd849b90e43a61a55156964736f6c634300080f0033";

type BridgeTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BridgeTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BridgeToken__factory extends ContractFactory {
  constructor(...args: BridgeTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BridgeToken> {
    return super.deploy(overrides || {}) as Promise<BridgeToken>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): BridgeToken {
    return super.attach(address) as BridgeToken;
  }
  override connect(signer: Signer): BridgeToken__factory {
    return super.connect(signer) as BridgeToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BridgeTokenInterface {
    return new utils.Interface(_abi) as BridgeTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BridgeToken {
    return new Contract(address, _abi, signerOrProvider) as BridgeToken;
  }
}
