/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  SwapAdminFacet,
  SwapAdminFacetInterface,
} from "../../../../../contracts/core/connext/facets/SwapAdminFacet";

const _abi = [
  {
    inputs: [],
    name: "AssetLogic__handleOutgoingAsset_notNative",
    type: "error",
  },
  {
    inputs: [],
    name: "BaseConnextFacet__getAdoptedAsset_assetNotFound",
    type: "error",
  },
  {
    inputs: [],
    name: "BaseConnextFacet__getApprovedCanonicalId_notAllowlisted",
    type: "error",
  },
  {
    inputs: [],
    name: "BaseConnextFacet__nonReentrant_reentrantCall",
    type: "error",
  },
  {
    inputs: [],
    name: "BaseConnextFacet__nonXCallReentrant_reentrantCall",
    type: "error",
  },
  {
    inputs: [],
    name: "BaseConnextFacet__onlyOwnerOrAdmin_notOwnerOrAdmin",
    type: "error",
  },
  {
    inputs: [],
    name: "BaseConnextFacet__onlyOwnerOrRouter_notOwnerOrRouter",
    type: "error",
  },
  {
    inputs: [],
    name: "BaseConnextFacet__onlyOwnerOrWatcher_notOwnerOrWatcher",
    type: "error",
  },
  {
    inputs: [],
    name: "BaseConnextFacet__onlyOwner_notOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "BaseConnextFacet__onlyProposed_notProposedOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "BaseConnextFacet__whenNotPaused_paused",
    type: "error",
  },
  {
    inputs: [],
    name: "SwapAdminFacet__disableSwap_alreadyDisabled",
    type: "error",
  },
  {
    inputs: [],
    name: "SwapAdminFacet__disableSwap_notInitialized",
    type: "error",
  },
  {
    inputs: [],
    name: "SwapAdminFacet__initializeSwap_aExceedMax",
    type: "error",
  },
  {
    inputs: [],
    name: "SwapAdminFacet__initializeSwap_adminFeeExceedMax",
    type: "error",
  },
  {
    inputs: [],
    name: "SwapAdminFacet__initializeSwap_alreadyInitialized",
    type: "error",
  },
  {
    inputs: [],
    name: "SwapAdminFacet__initializeSwap_decimalsMismatch",
    type: "error",
  },
  {
    inputs: [],
    name: "SwapAdminFacet__initializeSwap_duplicateTokens",
    type: "error",
  },
  {
    inputs: [],
    name: "SwapAdminFacet__initializeSwap_failedInitLpTokenClone",
    type: "error",
  },
  {
    inputs: [],
    name: "SwapAdminFacet__initializeSwap_feeExceedMax",
    type: "error",
  },
  {
    inputs: [],
    name: "SwapAdminFacet__initializeSwap_invalidPooledTokens",
    type: "error",
  },
  {
    inputs: [],
    name: "SwapAdminFacet__initializeSwap_tokenDecimalsExceedMax",
    type: "error",
  },
  {
    inputs: [],
    name: "SwapAdminFacet__initializeSwap_zeroTokenAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "SwapAdminFacet__removeSwap_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "SwapAdminFacet__removeSwap_notDisabledPool",
    type: "error",
  },
  {
    inputs: [],
    name: "SwapAdminFacet__removeSwap_notInitialized",
    type: "error",
  },
  {
    inputs: [],
    name: "SwapAdminFacet__updateLpTokenTarget_invalidNewAddress",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newAdminFee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "AdminFeesSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "AdminFeesWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "oldAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "LPTokenTargetUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "futureA",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "futureTime",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "RampAStarted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "RampAStopped",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "SwapDisabled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newSwapFee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "SwapFeesSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "key",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "initialA",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "futureA",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "initialATime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "futureATime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "swapFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "adminFee",
            type: "uint256",
          },
          {
            internalType: "contract LPToken",
            name: "lpToken",
            type: "address",
          },
          {
            internalType: "contract IERC20[]",
            name: "pooledTokens",
            type: "address[]",
          },
          {
            internalType: "uint256[]",
            name: "tokenPrecisionMultipliers",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "balances",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "adminFees",
            type: "uint256[]",
          },
          {
            internalType: "bool",
            name: "disabled",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "removeTime",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct SwapUtils.Swap",
        name: "swap",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "SwapInitialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "SwapRemoved",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_key",
        type: "bytes32",
      },
    ],
    name: "disableSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_key",
        type: "bytes32",
      },
      {
        internalType: "contract IERC20[]",
        name: "_pooledTokens",
        type: "address[]",
      },
      {
        internalType: "uint8[]",
        name: "decimals",
        type: "uint8[]",
      },
      {
        internalType: "string",
        name: "lpTokenName",
        type: "string",
      },
      {
        internalType: "string",
        name: "lpTokenSymbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_a",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_adminFee",
        type: "uint256",
      },
    ],
    name: "initializeSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
    ],
    name: "isDisabled",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lpTokenTargetAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "futureA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "futureTime",
        type: "uint256",
      },
    ],
    name: "rampA",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_key",
        type: "bytes32",
      },
    ],
    name: "removeSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "newAdminFee",
        type: "uint256",
      },
    ],
    name: "setSwapAdminFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "newSwapFee",
        type: "uint256",
      },
    ],
    name: "setSwapFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
    ],
    name: "stopRampA",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newAddress",
        type: "address",
      },
    ],
    name: "updateLpTokenTarget",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
    ],
    name: "withdrawSwapAdminFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523461001657611bc8908161001c8239f35b600080fdfe608080604052600436101561001357600080fd5b60003560e01c9081631963e42614611234575080632bf63bcc1461120b5780633e74aea014610fbc57806343be5eaf14610eda5780634b141bb414610ea657806372a30e0814610d6e5780638dc5148414610c9f5780639c8eab9714610bb7578063a1a23c2914610b27578063e5f6220f146101f15763ea027c2f1461009857600080fd5b346101ec576020806003193601126101ec576004359060018060a01b03600080516020611b738339815191525416331415806101b2575b6101a05781600052601881526008604060002001541561018e57816000526018815260ff600c604060002001541661017c578160005260188152600c604060002001600160ff1982541617905562093a80420190814211610166577f436f3434791c806271347887826cd8df45595907e6cfdc188dd8c9b468d8521e918360005260188252600d60406000200155604051338152a2005b634e487b7160e01b600052601160045260246000fd5b6040516380cd476f60e01b8152600490fd5b6040516303bb6f8760e61b8152600490fd5b604051637b32c26b60e01b8152600490fd5b50336000526014815260ff6040600020541660048110156101d657600314156100cf565b634e487b7160e01b600052602160045260246000fd5b600080fd5b346101ec576101003660031901126101ec576024356001600160401b0381116101ec57366023820112156101ec5780600401359061022e82611632565b9061023c6040519283611611565b82825260208201906024829460051b820101903682116101ec57602401915b818310610b0757505050604435916001600160401b0383116101ec57366023840112156101ec57826004013561029081611632565b9361029e6040519586611611565b8185526024602086019260051b820101903682116101ec57602401915b818310610aed575050506064356001600160401b0381116101ec576102e4903690600401611664565b926084356001600160401b0381116101ec57610304903690600401611664565b9060018060a01b03600080516020611b73833981519152541633141580610ac8575b6101a0576004356000526018602052600860406000200154610ab657835160028110908115610aab575b50610a995783519080518203610a875761036a81516116ab565b9360005b8381106109245750505050620f423f60a43511610912576305f5e0ff60c43511610900576402540be3ff60e435116108ee576e5af43d82803e903d91602b57fd5bf3601a54763d602d80600a3d3981f3363d3d373d3d3d363d7300000062ffffff8260881c16176000526effffffffffffffffffffffffffffff199060781b161760205260018060a01b03603760096000f0169384156108b057610434602091610446604051948593849363266c45bb60e11b8552604060048601526044850190611709565b83810360031901602485015290611709565b03816000885af19081156108a457600091610875575b50156108635760a435606460a435020460641460a4351517156101665761048382516116ab565b9061048e83516116ab565b9260405194856101c08101106001600160401b036101c088011117610808576101c086016040526004358652606460a435026020870152606460a435026040870152600060608701526000608087015260c43560a087015260e43560c087015260e0860152610100850152610120840152610140830152610160820152600061018082015260006101a082015260043560005260186020526040600020815181556020820151600182015560408201516002820155606082015160038201556080820151600482015560a0820151600582015560c082015160068201556007810160018060a01b0360e0840151166bffffffffffffffffffffffff60a01b8254161790556101008201518051906001600160401b03821161080857602060088401916105ba8484611777565b0190600052602060002060005b8381106108465785856101208201518051906001600160401b03821161080857602060098401916105f88484611777565b0190600052602060002060005b8381106108325785856101408201518051906001600160401b038211610808576020600a8401916106368484611777565b0190600052602060002060005b83811061081e5785856101608201518051906001600160401b038211610808576020600b8401916106748484611777565b0190600052602060002060005b8381106107f4578585600c8101610180830151151560ff80198354169116179055600d6101a083015191015560405160408152815160408201526020820151606082015260408201516080820152606082015160a0820152608082015160c082015260a082015160e082015260c082015161010082015260018060a01b0360e0830151166101208201526101008201516101c0610140830152610200820181518091526020610220840192019060005b8181106107d557857f17624207b3ada0ecb82d25bef7eb308a62e614001936961428b08af45651c3f1866101a06107ae8861079961078361012088015192603f199384888303016101608901526117bf565b61014088015183878303016101808801526117bf565b906101608701519085830301848601526117bf565b9361018081015115156101c084015201516101e082015233602082015280600435930390a2005b82516001600160a01b0316845260209384019390920191600101610731565b600190602084519401938184015501610681565b634e487b7160e01b600052604160045260246000fd5b600190602084519401938184015501610643565b600190602084519401938184015501610605565b82516001600160a01b0316818301556020909201916001016105c7565b60405163276cd8b960e01b8152600490fd5b610897915060203d60201161089d575b61088f8183611611565b8101906116f1565b8461045c565b503d610885565b6040513d6000823e3d90fd5b60405162461bcd60e51b8152602060048201526016602482015275115490cc4c4d8dce8818dc99585d194819985a5b195960521b6044820152606490fd5b6040516384b9a37f60e01b8152600490fd5b604051634fc2217d60e11b8152600490fd5b6040516306aedbfd60e01b8152600490fd5b806109f5575b6001600160a01b0361093c82896116dd565b5116156109e35760128060ff61095284876116dd565b5116116109d15760ff61096583866116dd565b511690039060ff821161016657604d60ff8316116101665760ff60019216600a0a61099082896116dd565b5260043560005260196020526040600020828060a01b036109b1838b6116dd565b5116600052602052604060002060ff821660ff198254161790550161036e565b604051637d4ada4560e11b8152600490fd5b604051634ce187ad60e11b8152600490fd5b60043560009081526019602052604090206001600160a01b03610a18838a6116dd565b511660005260205260ff6040600020541615801590610a49575b1561092a57604051632fa9e93b60e11b8152600490fd5b50865115610a715781516001600160a01b0390811690610a69838a6116dd565b511614610a32565b634e487b7160e01b600052603260045260246000fd5b60405163d6e48e5d60e01b8152600490fd5b60405163502ef3af60e01b8152600490fd5b601091501186610350565b6040516376a1368960e11b8152600490fd5b5033600052601460205260ff6040600020541660048110156101d65760031415610326565b823560ff811681036101ec578152602092830192016102bb565b82356001600160a01b03811681036101ec5781526020928301920161025b565b346101ec5760203660031901126101ec57600080516020611b73833981519152546001600160a01b031633141580610b92575b6101a057600260165414610b80576002601655610b79336004356119eb565b6001601655005b604051637ce54e2d60e11b8152600490fd5b5033600052601460205260ff6040600020541660048110156101d65760031415610b5a565b346101ec57610bc5366115fb565b600080516020611b73833981519152546001600160a01b031633141580610c7a575b6101a057610c757f46eefbb271e4103912d3c227656de8afc0849f4c8cba4b2a1e38b660361e0463918360005260186020526040600020610c2e6402540be4018310611b3b565b816006820155547f7b4e02f2e320870ba4f764edf60a5289a465018a3fe159f0d72ba33139b0a6166020604051848152a26040805191825233602083015290918291820190565b0390a2005b5033600052601460205260ff6040600020541660048110156101d65760031415610be7565b346101ec5760203660031901126101ec576004356001600160a01b03818116918281036101ec5781600080516020611b73833981519152541633141580610d49575b6101a0573b15610d37577f98bc4f3f4ec7b43d0c86b6136979bfbe279b2d54a930505d34ec02d72dfb1c406060601a54926040519084168152846020820152336040820152a16001600160a01b03191617601a55005b604051630db340a960e21b8152600490fd5b5033600052601460205260ff6040600020541660048110156101d65760031415610ce1565b346101ec576020806003193601126101ec576004359060018060a01b03600080516020611b73833981519152541633141580610e82575b6101a05781600052601881526040600020600481018054421015610e3d576040827f46e22fb3709ad289f62ce63d469248536dbc78d82b84a3d7e74ad606dc20193892610e137f86ce75679135e270f845c02bcb49ef6fb50464cb322dcc30096cccd13d2597df9695611ab6565b9182600182015582600282015560034291015542905581519081524284820152a1604051338152a2005b60405162461bcd60e51b815260048101849052601760248201527f52616d7020697320616c72656164792073746f707065640000000000000000006044820152606490fd5b50336000526014815260ff6040600020541660048110156101d65760031415610da5565b346101ec5760203660031901126101ec576004356000526018602052602060ff600c60406000200154166040519015158152f35b346101ec57610ee8366115fb565b600080516020611b73833981519152546001600160a01b031633141580610f97575b6101a057610c757f6d9b91502dc11e7c127e8e2d114c1f8026647ecb6b987c1baaadb706b5eb3176918360005260186020526040600020610f506305f5e1018310611b3b565b816005820155547f29aee3d14d18e1b8ace81481838ab2996fee9446a44336847d1d5c7fdf2471b16020604051848152a26040805191825233602083015290918291820190565b5033600052601460205260ff6040600020541660048110156101d65760031415610f0a565b346101ec576020806003193601126101ec57600080516020611b738339815191525460043591906001600160a01b03908116331415806111e7575b6101a05782600052601880835260089182604060002001549081156111d5578560005282855260ff600c6040600020015416156111c35785600052828552600d6040600020015442106111b15760005b82811061110f57867fb729dde7e954c83f790a153521f9d2e12779b36305ed42c8bf86ac4cf7ce6915876000600d898961108133886119eb565b86845284526110c860408420918483558460018401558460028401558460038401558460048401558460058401558460068401558460078401558201805490858155611749565b6110da60098201805490858155611749565b6110ec600a8201805490858155611749565b6110fe600b8201805490858155611749565b82600c8201550155604051338152a2005b60019087600052848752828161112b81896040600020016117f3565b929054600393841b1c16918a600052878a52600a61114f83826040600020016117f3565b905490831b1c611183575b50505088600052601988526040600020906000528752604060002060ff19815416905501611047565b6111a99261119d918d6000528a8d526040600020016117f3565b9054911b1c338361180b565b818a8061115a565b6040516302aba83160e51b8152600490fd5b604051637baf490160e11b8152600490fd5b604051635e98c38d60e11b8152600490fd5b50336000526014825260ff6040600020541660048110156101d65760031415610ff7565b346101ec5760003660031901126101ec57601a546040516001600160a01b039091168152602090f35b346101ec5760603660031901126101ec576004359060249081359160449081359260018060a01b03600080516020611b738339815191525416331415806115c1575b6115b257508460005260209160188352604060002060038101805462015180810180911161155a57421061156f5762127500420180421161155a57861061151e57861592831580611512575b156114d1576112d083611ab6565b94606489029489860460641417156114bd5784861461148d57858510156113e45760c88902858104600214861517156113cf57861161139557505085937f58e6fbecdb1a94225cf82c6b317a771aa08c9ab6552702b819bcd84ba8e8312f97959360609760047fa2b71ec6df949300b59aab36b55e189697b750119dd349fcfa8c0f779e83c254956080955b8560018301558460028301554290550155604051918252848201524260408201528487820152a1604051928352820152336040820152a2005b74199d5d1d5c995057c81a5cc81d1bdbc81cdb585b1b605a1b606492601589936040519462461bcd60e51b86526004860152840152820152fd5b50634e487b7160e01b60009081526011600452fd5b8560011b868104600214871517156113cf57851161145357505085937f58e6fbecdb1a94225cf82c6b317a771aa08c9ab6552702b819bcd84ba8e8312f97959360609760047fa2b71ec6df949300b59aab36b55e189697b750119dd349fcfa8c0f779e83c2549560809561135c565b74667574757265415f20697320746f6f206c6172676560581b606492601589936040519462461bcd60e51b86526004860152840152820152fd5b6a02176616c69642072616d760ac1b606492600b89936040519462461bcd60e51b86526004860152840152820152fd5b634e487b7160e01b60009081526011600452fd5b847f667574757265415f206d757374206265203e203020616e64203c204d41585f41606492886040519362461bcd60e51b8552816004860152840152820152fd5b50620f424088106112c2565b60405162461bcd60e51b81526004810186905260168186015275496e73756666696369656e742072616d702074696d6560501b81850152606490fd5b84634e487b7160e01b60005260116004526000fd5b60405162461bcd60e51b815260048101869052601f818601527f57616974203120646179206265666f7265207374617274696e672072616d700081850152606490fd5b637b32c26b60e01b8152600490fd5b5033600052601460205260ff6040600020541660048110156115e65760031415611276565b82634e487b7160e01b60005260216004526000fd5b60409060031901126101ec576004359060243590565b90601f801991011681019081106001600160401b0382111761080857604052565b6001600160401b0381116108085760051b60200190565b6001600160401b03811161080857601f01601f191660200190565b81601f820112156101ec5780359061167b82611649565b926116896040519485611611565b828452602083830101116101ec57816000926020809301838601378301015290565b906116b582611632565b6116c26040519182611611565b82815280926116d3601f1991611632565b0190602036910137565b8051821015610a715760209160051b010190565b908160209103126101ec575180151581036101ec5790565b919082519283825260005b848110611735575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201611714565b81611752575050565b600090815260208120918201915b82811061176c57505050565b818155600101611760565b6801000000000000000082116108085780549180825582811061179957505050565b60009182526020822092830192015b8281106117b457505050565b8181556001016117a8565b90815180825260208080930193019160005b8281106117df575050505090565b8351855293810193928101926001016117d1565b8054821015610a715760005260206000200190600090565b60405163a9059cbb60e01b60208083019182526001600160a01b0394851660248401526044808401969096529482529260808201926001600160401b039291908385118386101761080857169160c0820190811184821017610808576040528483527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656460a0820152516118ce93600091829182855af13d1561194a573d916118b283611649565b926118c06040519485611611565b83523d60008785013e61194e565b805190816118db57505050565b82806118eb9383010191016116f1565b156118f35750565b6084906040519062461bcd60e51b82526004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152fd5b6060915b919290156119b05750815115611962575090565b3b1561196b5790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b8251909150156119c35750805190602001fd5b60405162461bcd60e51b8152602060048201529081906119e7906024830190611709565b0390fd5b9081600052601860205260406000206008810190815491600b60009201915b838110611a4d5750506040516001600160a01b039093168352507f2e6c35653408399a9853c5e5f81b67018cba78568bfd76dd46f93c825cbfb95d9160209150a2565b80611a5a600192846117f3565b905487611a6784886117f3565b9054600391821b1c9283611a81575b505050505001611a0a565b611aac94611a8f878b6117f3565b81549060001990861b1b19169055878060a01b03921b1c16611b00565b3880878180611a76565b60048101546002820154916001810154908382141580611af7575b611adc575b50505090565b60030154928383039342030291429003020104388080611ad6565b50824210611ad1565b9190918115611b36576001600160a01b0316918215611b2457611b229261180b565b565b604051633a48ca7b60e11b8152600490fd5b505050565b15611b4257565b60405162461bcd60e51b81526020600482015260086024820152670e8dede40d0d2ced60c31b6044820152606490fdfec8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c1320a264697066735822122032eee733a22ae01e6900676880c86491ab8755896c29675840f49ec6919d480b64736f6c63430008110033";

type SwapAdminFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SwapAdminFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SwapAdminFacet__factory extends ContractFactory {
  constructor(...args: SwapAdminFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SwapAdminFacet> {
    return super.deploy(overrides || {}) as Promise<SwapAdminFacet>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): SwapAdminFacet {
    return super.attach(address) as SwapAdminFacet;
  }
  override connect(signer: Signer): SwapAdminFacet__factory {
    return super.connect(signer) as SwapAdminFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SwapAdminFacetInterface {
    return new utils.Interface(_abi) as SwapAdminFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SwapAdminFacet {
    return new Contract(address, _abi, signerOrProvider) as SwapAdminFacet;
  }
}
