/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  SwapAdminFacet,
  SwapAdminFacetInterface,
} from "../../../../../contracts/core/connext/facets/SwapAdminFacet";

const _abi = [
  {
    inputs: [],
    name: "BaseConnextFacet__getAdoptedAsset_notWhitelisted",
    type: "error",
  },
  {
    inputs: [],
    name: "BaseConnextFacet__nonReentrant_reentrantCall",
    type: "error",
  },
  {
    inputs: [],
    name: "BaseConnextFacet__onlyBridgeRouter_notBridgeRouter",
    type: "error",
  },
  {
    inputs: [],
    name: "BaseConnextFacet__onlyOwner_notOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "BaseConnextFacet__onlyProposed_notProposedOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "BaseConnextFacet__whenNotPaused_paused",
    type: "error",
  },
  {
    inputs: [],
    name: "SwapAdminFacet__initializeSwap_aExceedMax",
    type: "error",
  },
  {
    inputs: [],
    name: "SwapAdminFacet__initializeSwap_adminFeeExceedMax",
    type: "error",
  },
  {
    inputs: [],
    name: "SwapAdminFacet__initializeSwap_alreadyInitialized",
    type: "error",
  },
  {
    inputs: [],
    name: "SwapAdminFacet__initializeSwap_decimalsMismatch",
    type: "error",
  },
  {
    inputs: [],
    name: "SwapAdminFacet__initializeSwap_duplicateTokens",
    type: "error",
  },
  {
    inputs: [],
    name: "SwapAdminFacet__initializeSwap_failedInitLpTokenClone",
    type: "error",
  },
  {
    inputs: [],
    name: "SwapAdminFacet__initializeSwap_feeExceedMax",
    type: "error",
  },
  {
    inputs: [],
    name: "SwapAdminFacet__initializeSwap_invalidPooledTokens",
    type: "error",
  },
  {
    inputs: [],
    name: "SwapAdminFacet__initializeSwap_tokenDecimalsExceedMax",
    type: "error",
  },
  {
    inputs: [],
    name: "SwapAdminFacet__initializeSwap_zeroTokenAddress",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newAdminFee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "AdminFeesSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "AdminFeesWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "futureA",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "futureTime",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "RampAStarted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "RampAStopped",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newSwapFee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "SwapFeesSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "key",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "initialA",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "futureA",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "initialATime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "futureATime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "swapFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "adminFee",
            type: "uint256",
          },
          {
            internalType: "contract LPToken",
            name: "lpToken",
            type: "address",
          },
          {
            internalType: "contract IERC20[]",
            name: "pooledTokens",
            type: "address[]",
          },
          {
            internalType: "uint256[]",
            name: "tokenPrecisionMultipliers",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "balances",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "adminFees",
            type: "uint256[]",
          },
        ],
        indexed: false,
        internalType: "struct SwapUtils.Swap",
        name: "swap",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "SwapInitialized",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_key",
        type: "bytes32",
      },
      {
        internalType: "contract IERC20[]",
        name: "_pooledTokens",
        type: "address[]",
      },
      {
        internalType: "uint8[]",
        name: "decimals",
        type: "uint8[]",
      },
      {
        internalType: "string",
        name: "lpTokenName",
        type: "string",
      },
      {
        internalType: "string",
        name: "lpTokenSymbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_a",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_adminFee",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "lpTokenTargetAddress",
        type: "address",
      },
    ],
    name: "initializeSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "futureA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "futureTime",
        type: "uint256",
      },
    ],
    name: "rampA",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "newAdminFee",
        type: "uint256",
      },
    ],
    name: "setSwapAdminFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "newSwapFee",
        type: "uint256",
      },
    ],
    name: "setSwapFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
    ],
    name: "stopRampA",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
    ],
    name: "withdrawSwapAdminFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611aea806100206000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80631963e4261461006757806343be5eaf1461007c57806347555ef61461008f57806372a30e08146100a25780639c8eab97146100b5578063a1a23c29146100c8575b600080fd5b61007a61007536600461138e565b6100db565b005b61007a61008a3660046113ba565b61016a565b61007a61009d3660046115b9565b6101f0565b61007a6100b036600461169e565b610856565b61007a6100c33660046113ba565b6108d4565b61007a6100d636600461169e565b610952565b336100e46109ff565b6001600160a01b03161461010b576040516314e74a2560e21b815260040160405180910390fd5b60008381526020805260409020610123908383610a2d565b60408051838152602081018390523381830152905184917f58e6fbecdb1a94225cf82c6b317a771aa08c9ab6552702b819bcd84ba8e8312f919081900360600190a2505050565b336101736109ff565b6001600160a01b03161461019a576040516314e74a2560e21b815260040160405180910390fd5b600082815260208052604090206101b19082610c7d565b6040805182815233602082015283917f6d9b91502dc11e7c127e8e2d114c1f8026647ecb6b987c1baaadb706b5eb317691015b60405180910390a25050565b336101f96109ff565b6001600160a01b031614610220576040516314e74a2560e21b815260040160405180910390fd5b60008981526020805260409020600801541561024f576040516376a1368960e11b815260040160405180910390fd5b60018851111580610261575060208851115b1561027f5760405163502ef3af60e01b815260040160405180910390fd5b8751875160ff8216146102a55760405163d6e48e5d60e01b815260040160405180910390fd5b6000885167ffffffffffffffff8111156102c1576102c16113dc565b6040519080825280602002602001820160405280156102ea578160200160208202803683370190505b50905060005b8260ff168160ff16101561051e5760ff8116156103c85760008c81526021602052604081208c519091908d9060ff851690811061032f5761032f6116b7565b6020908102919091018101516001600160a01b031682528101919091526040016000205460ff161515806103aa57508a8160ff1681518110610373576103736116b7565b60200260200101516001600160a01b03168b600081518110610397576103976116b7565b60200260200101516001600160a01b0316145b156103c857604051632fa9e93b60e11b815260040160405180910390fd5b60006001600160a01b03168b8260ff16815181106103e8576103e86116b7565b60200260200101516001600160a01b03160361041757604051634ce187ad60e11b815260040160405180910390fd5b601260ff168a8260ff1681518110610431576104316116b7565b602002602001015160ff16111561045b57604051637d4ada4560e11b815260040160405180910390fd5b898160ff1681518110610470576104706116b7565b6020026020010151601261048491906116e3565b6104929060ff16600a6117ec565b828260ff16815181106104a7576104a76116b7565b60200260200101818152505080600060210160008e815260200190815260200160002060008d8460ff16815181106104e1576104e16116b7565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff191660ff929092169190911790556001016102f0565b50620f42408610610542576040516306aedbfd60e01b815260040160405180910390fd5b6305f5e100851061056657604051634fc2217d60e11b815260040160405180910390fd5b6402540be400841061058b576040516384b9a37f60e01b815260040160405180910390fd5b600061059684610cf5565b60405163266c45bb60e11b81529091506001600160a01b03821690634cd88b76906105c7908c908c90600401611850565b6020604051808303816000875af11580156105e6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061060a919061187e565b6106275760405163276cd8b960e01b815260040160405180910390fd5b60006040518061018001604052808e815260200160648a61064891906118a0565b815260200161065860648b6118a0565b81526020016000815260200160008152602001888152602001878152602001836001600160a01b031681526020018d81526020018481526020018d5167ffffffffffffffff8111156106ac576106ac6113dc565b6040519080825280602002602001820160405280156106d5578160200160208202803683370190505b5081526020018d5167ffffffffffffffff8111156106f5576106f56113dc565b60405190808252806020026020018201604052801561071e578160200160208202803683370190505b50905260008e8152602080805260409182902083518155838201516001820155918301516002830155606083015160038301556080830151600483015560a0830151600583015560c0830151600683015560e08301516007830180546001600160a01b0319166001600160a01b03909216919091179055610100830151805193945084936107b292600885019201906112d9565b5061012082015180516107cf91600984019160209091019061133e565b5061014082015180516107ec91600a84019160209091019061133e565b50610160820151805161080991600b84019160209091019061133e565b509050508c7f4c5d883e86afc82dc0f918cfc013e437aa458ec41475884857ba8daec50d24cb823360405161083f929190611933565b60405180910390a250505050505050505050505050565b3361085f6109ff565b6001600160a01b031614610886576040516314e74a2560e21b815260040160405180910390fd5b6000818152602080526040902061089c90610d92565b60405133815281907f86ce75679135e270f845c02bcb49ef6fb50464cb322dcc30096cccd13d2597df9060200160405180910390a250565b336108dd6109ff565b6001600160a01b031614610904576040516314e74a2560e21b815260040160405180910390fd5b6000828152602080526040902061091b9082610e53565b6040805182815233602082015283917f46eefbb271e4103912d3c227656de8afc0849f4c8cba4b2a1e38b660361e046391016101e4565b3361095b6109ff565b6001600160a01b031614610982576040516314e74a2560e21b815260040160405180910390fd5b601f54600119016109a657604051637ce54e2d60e11b815260040160405180910390fd5b6002601f55600081815260208052604090206109c29033610ecc565b60405133815281907f2e6c35653408399a9853c5e5f81b67018cba78568bfd76dd46f93c825cbfb95d9060200160405180910390a2506001601f55565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c1320546001600160a01b031690565b6003830154610a3f9062015180611a34565b421015610a935760405162461bcd60e51b815260206004820152601f60248201527f57616974203120646179206265666f7265207374617274696e672072616d700060448201526064015b60405180910390fd5b610aa06212750042611a34565b811015610ae85760405162461bcd60e51b8152602060048201526016602482015275496e73756666696369656e742072616d702074696d6560501b6044820152606401610a8a565b8115801590610af95750620f424082105b610b455760405162461bcd60e51b815260206004820181905260248201527f667574757265415f206d757374206265203e203020616e64203c204d41585f416044820152606401610a8a565b6000610b5084610f7e565b90506000610b5f6064856118a0565b905081811015610bc05781610b756002836118a0565b1015610bbb5760405162461bcd60e51b8152602060048201526015602482015274199d5d1d5c995057c81a5cc81d1bdbc81cdb585b1b605a1b6044820152606401610a8a565b610c12565b610bcb6002836118a0565b811115610c125760405162461bcd60e51b8152602060048201526015602482015274667574757265415f20697320746f6f206c6172676560581b6044820152606401610a8a565b600185018290556002850181905542600386018190556004860184905560408051848152602081018490528082019290925260608201859052517fa2b71ec6df949300b59aab36b55e189697b750119dd349fcfa8c0f779e83c2549181900360800190a15050505050565b6305f5e100811115610cbc5760405162461bcd60e51b81526020600482015260086024820152670e8dede40d0d2ced60c31b6044820152606401610a8a565b6005820181905581546040518281527f29aee3d14d18e1b8ace81481838ab2996fee9446a44336847d1d5c7fdf2471b1906020016101e4565b6000604051733d602d80600a3d3981f3363d3d373d3d3d363d7360601b81528260601b60148201526e5af43d82803e903d91602b57fd5bf360881b60288201526037816000f09150506001600160a01b038116610d8d5760405162461bcd60e51b8152602060048201526016602482015275115490cc4c4d8dce8818dc99585d194819985a5b195960521b6044820152606401610a8a565b919050565b42816004015411610de55760405162461bcd60e51b815260206004820152601760248201527f52616d7020697320616c72656164792073746f707065640000000000000000006044820152606401610a8a565b6000610df082610f7e565b60018301819055600283018190554260038401819055600484018190556040519192507f46e22fb3709ad289f62ce63d469248536dbc78d82b84a3d7e74ad606dc20193891610e4791848252602082015260400190565b60405180910390a15050565b6402540be400811115610e935760405162461bcd60e51b81526020600482015260086024820152670e8dede40d0d2ced60c31b6044820152606401610a8a565b6006820181905581546040518281527f7b4e02f2e320870ba4f764edf60a5289a465018a3fe159f0d72ba33139b0a616906020016101e4565b600882015460005b81811015610f78576000846008018281548110610ef357610ef36116b7565b6000918252602082200154600b870180546001600160a01b0390921693509084908110610f2257610f226116b7565b9060005260206000200154905080600014610f6e57600086600b018481548110610f4e57610f4e6116b7565b600091825260209091200155610f6e6001600160a01b038316868361102f565b5050600101610ed4565b50505050565b600481015460028201546000919042821115611028576003840154600185015480831115610fec57610fb08285611a4c565b610fba8342611a4c565b610fc48386611a4c565b610fce91906118a0565b610fd89190611a63565b610fe29082611a34565b9695505050505050565b610ff68285611a4c565b6110008342611a4c565b61100a8584611a4c565b61101491906118a0565b61101e9190611a63565b610fe29082611a4c565b9392505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052611081908490611086565b505050565b60006110db826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166111589092919063ffffffff16565b80519091501561108157808060200190518101906110f9919061187e565b6110815760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610a8a565b6060611167848460008561116f565b949350505050565b6060824710156111d05760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610a8a565b6001600160a01b0385163b6112275760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610a8a565b600080866001600160a01b031685876040516112439190611a85565b60006040518083038185875af1925050503d8060008114611280576040519150601f19603f3d011682016040523d82523d6000602084013e611285565b606091505b50915091506112958282866112a0565b979650505050505050565b606083156112af575081611028565b8251156112bf5782518084602001fd5b8160405162461bcd60e51b8152600401610a8a9190611aa1565b82805482825590600052602060002090810192821561132e579160200282015b8281111561132e57825182546001600160a01b0319166001600160a01b039091161782556020909201916001909101906112f9565b5061133a929150611379565b5090565b82805482825590600052602060002090810192821561132e579160200282015b8281111561132e57825182559160200191906001019061135e565b5b8082111561133a576000815560010161137a565b6000806000606084860312156113a357600080fd5b505081359360208301359350604090920135919050565b600080604083850312156113cd57600080fd5b50508035926020909101359150565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561141b5761141b6113dc565b604052919050565b600067ffffffffffffffff82111561143d5761143d6113dc565b5060051b60200190565b6001600160a01b038116811461145c57600080fd5b50565b600082601f83011261147057600080fd5b8135602061148561148083611423565b6113f2565b82815260059290921b840181019181810190868411156114a457600080fd5b8286015b848110156114c85780356114bb81611447565b83529183019183016114a8565b509695505050505050565b600082601f8301126114e457600080fd5b813560206114f461148083611423565b82815260059290921b8401810191818101908684111561151357600080fd5b8286015b848110156114c857803560ff811681146115315760008081fd5b8352918301918301611517565b600082601f83011261154f57600080fd5b813567ffffffffffffffff811115611569576115696113dc565b61157c601f8201601f19166020016113f2565b81815284602083860101111561159157600080fd5b816020850160208301376000918101602001919091529392505050565b8035610d8d81611447565b60008060008060008060008060006101208a8c0312156115d857600080fd5b8935985060208a013567ffffffffffffffff808211156115f757600080fd5b6116038d838e0161145f565b995060408c013591508082111561161957600080fd5b6116258d838e016114d3565b985060608c013591508082111561163b57600080fd5b6116478d838e0161153e565b975060808c013591508082111561165d57600080fd5b5061166a8c828d0161153e565b95505060a08a0135935060c08a0135925060e08a0135915061168f6101008b016115ae565b90509295985092959850929598565b6000602082840312156116b057600080fd5b5035919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff8416808210156116fd576116fd6116cd565b90039392505050565b600181815b80851115611741578160001904821115611727576117276116cd565b8085161561173457918102915b93841c939080029061170b565b509250929050565b600082611758575060016117e6565b81611765575060006117e6565b816001811461177b5760028114611785576117a1565b60019150506117e6565b60ff841115611796576117966116cd565b50506001821b6117e6565b5060208310610133831016604e8410600b84101617156117c4575081810a6117e6565b6117ce8383611706565b80600019048211156117e2576117e26116cd565b0290505b92915050565b60006110288383611749565b60005b838110156118135781810151838201526020016117fb565b83811115610f785750506000910152565b6000815180845261183c8160208601602086016117f8565b601f01601f19169290920160200192915050565b6040815260006118636040830185611824565b82810360208401526118758185611824565b95945050505050565b60006020828403121561189057600080fd5b8151801515811461102857600080fd5b60008160001904831182151516156118ba576118ba6116cd565b500290565b600081518084526020808501945080840160005b838110156118f85781516001600160a01b0316875295820195908201906001016118d3565b509495945050505050565b600081518084526020808501945080840160005b838110156118f857815187529582019590820190600101611917565b60408152825160408201526020830151606082015260408301516080820152606083015160a0820152608083015160c082015260a083015160e0820152600060c0840151610100818185015260e0860151915061012061199d818601846001600160a01b03169052565b818701519250610180915061014082818701526119be6101c08701856118bf565b9350818801519150603f196101608188870301818901526119df8685611903565b9550828a015193508188870301858901526119fa8685611903565b9550808a015194505080878603016101a0880152505050611a1b8282611903565b9250505061102860208301846001600160a01b03169052565b60008219821115611a4757611a476116cd565b500190565b600082821015611a5e57611a5e6116cd565b500390565b600082611a8057634e487b7160e01b600052601260045260246000fd5b500490565b60008251611a978184602087016117f8565b9190910192915050565b602081526000611028602083018461182456fea2646970667358221220808842e219713b00c40365621120e985fb49ff50803b0cb94b6279c1b8e7f2f264736f6c634300080f0033";

type SwapAdminFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SwapAdminFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SwapAdminFacet__factory extends ContractFactory {
  constructor(...args: SwapAdminFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SwapAdminFacet> {
    return super.deploy(overrides || {}) as Promise<SwapAdminFacet>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): SwapAdminFacet {
    return super.attach(address) as SwapAdminFacet;
  }
  override connect(signer: Signer): SwapAdminFacet__factory {
    return super.connect(signer) as SwapAdminFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SwapAdminFacetInterface {
    return new utils.Interface(_abi) as SwapAdminFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SwapAdminFacet {
    return new Contract(address, _abi, signerOrProvider) as SwapAdminFacet;
  }
}
