/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  SwapAdminFacet,
  SwapAdminFacetInterface,
} from "../../../../../contracts/core/connext/facets/SwapAdminFacet";

const _abi = [
  {
    inputs: [],
    name: "BaseConnextFacet__getAdoptedAsset_notWhitelisted",
    type: "error",
  },
  {
    inputs: [],
    name: "BaseConnextFacet__getApprovedCanonicalId_notWhitelisted",
    type: "error",
  },
  {
    inputs: [],
    name: "BaseConnextFacet__nonReentrant_reentrantCall",
    type: "error",
  },
  {
    inputs: [],
    name: "BaseConnextFacet__onlyBridgeRouter_notBridgeRouter",
    type: "error",
  },
  {
    inputs: [],
    name: "BaseConnextFacet__onlyOwnerOrAdmin_notOwnerOrAdmin",
    type: "error",
  },
  {
    inputs: [],
    name: "BaseConnextFacet__onlyOwnerOrRouter_notOwnerOrRouter",
    type: "error",
  },
  {
    inputs: [],
    name: "BaseConnextFacet__onlyOwnerOrWatcher_notOwnerOrWatcher",
    type: "error",
  },
  {
    inputs: [],
    name: "BaseConnextFacet__onlyOwner_notOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "BaseConnextFacet__onlyProposed_notProposedOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "BaseConnextFacet__whenNotPaused_paused",
    type: "error",
  },
  {
    inputs: [],
    name: "SwapAdminFacet__initializeSwap_aExceedMax",
    type: "error",
  },
  {
    inputs: [],
    name: "SwapAdminFacet__initializeSwap_adminFeeExceedMax",
    type: "error",
  },
  {
    inputs: [],
    name: "SwapAdminFacet__initializeSwap_alreadyInitialized",
    type: "error",
  },
  {
    inputs: [],
    name: "SwapAdminFacet__initializeSwap_decimalsMismatch",
    type: "error",
  },
  {
    inputs: [],
    name: "SwapAdminFacet__initializeSwap_duplicateTokens",
    type: "error",
  },
  {
    inputs: [],
    name: "SwapAdminFacet__initializeSwap_failedInitLpTokenClone",
    type: "error",
  },
  {
    inputs: [],
    name: "SwapAdminFacet__initializeSwap_feeExceedMax",
    type: "error",
  },
  {
    inputs: [],
    name: "SwapAdminFacet__initializeSwap_invalidPooledTokens",
    type: "error",
  },
  {
    inputs: [],
    name: "SwapAdminFacet__initializeSwap_tokenDecimalsExceedMax",
    type: "error",
  },
  {
    inputs: [],
    name: "SwapAdminFacet__initializeSwap_zeroTokenAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "SwapAdminFacet__removeSwap_NonZeroBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "SwapAdminFacet__removeSwap_notInitialized",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newAdminFee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "AdminFeesSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "AdminFeesWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "futureA",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "futureTime",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "RampAStarted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "RampAStopped",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newSwapFee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "SwapFeesSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "key",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "initialA",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "futureA",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "initialATime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "futureATime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "swapFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "adminFee",
            type: "uint256",
          },
          {
            internalType: "contract LPToken",
            name: "lpToken",
            type: "address",
          },
          {
            internalType: "contract IERC20[]",
            name: "pooledTokens",
            type: "address[]",
          },
          {
            internalType: "uint256[]",
            name: "tokenPrecisionMultipliers",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "balances",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "adminFees",
            type: "uint256[]",
          },
        ],
        indexed: false,
        internalType: "struct SwapUtils.Swap",
        name: "swap",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "SwapInitialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "SwapRemoved",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_key",
        type: "bytes32",
      },
      {
        internalType: "contract IERC20[]",
        name: "_pooledTokens",
        type: "address[]",
      },
      {
        internalType: "uint8[]",
        name: "decimals",
        type: "uint8[]",
      },
      {
        internalType: "string",
        name: "lpTokenName",
        type: "string",
      },
      {
        internalType: "string",
        name: "lpTokenSymbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_a",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_adminFee",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "lpTokenTargetAddress",
        type: "address",
      },
    ],
    name: "initializeSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "futureA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "futureTime",
        type: "uint256",
      },
    ],
    name: "rampA",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_key",
        type: "bytes32",
      },
    ],
    name: "removeSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "newAdminFee",
        type: "uint256",
      },
    ],
    name: "setSwapAdminFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "newSwapFee",
        type: "uint256",
      },
    ],
    name: "setSwapFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
    ],
    name: "stopRampA",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
    ],
    name: "withdrawSwapAdminFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611e8c806100206000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c806347555ef61161005b57806347555ef6146100bd57806372a30e08146100d05780639c8eab97146100e3578063a1a23c29146100f657600080fd5b80631963e426146100825780633e74aea01461009757806343be5eaf146100aa575b600080fd5b61009561009036600461171d565b610109565b005b6100956100a5366004611749565b6101cb565b6100956100b8366004611762565b6103dd565b6100956100cb36600461195e565b61048e565b6100956100de366004611749565b610b29565b6100956100f1366004611762565b610bda565b610095610104366004611749565b610c8b565b33610112610d6d565b6001600160a01b03161415801561014d575060033360009081526019602052604090205460ff16600381111561014a5761014a611a43565b14155b1561016b57604051637b32c26b60e01b815260040160405180910390fd5b6000838152602160205260409020610184908383610d9b565b60408051838152602081018390523381830152905184917f58e6fbecdb1a94225cf82c6b317a771aa08c9ab6552702b819bcd84ba8e8312f919081900360600190a2505050565b336101d4610d6d565b6001600160a01b03161415801561020f575060033360009081526019602052604090205460ff16600381111561020c5761020c611a43565b14155b1561022d57604051637b32c26b60e01b815260040160405180910390fd5b6000818152602160205260408120600801549060ff8216900361026357604051635e98c38d60e11b815260040160405180910390fd5b60005b8160ff168160ff16101561031b576000838152602160205260408120600a01805460ff841690811061029a5761029a611a59565b906000526020600020015411156102c45760405163e22b0cff60e01b815260040160405180910390fd5b6000838152602160205260408120600b01805460ff84169081106102ea576102ea611a59565b906000526020600020015411156103135760008381526021602052604090206103139033610feb565b600101610266565b5060008281526021602052604081208181556001810182905560028101829055600381018290556004810182905560058101829055600681018290556007810180546001600160a01b0319169055906103776008830182611647565b610385600983016000611647565b610393600a83016000611647565b6103a1600b83016000611647565b505060405133815282907fb729dde7e954c83f790a153521f9d2e12779b36305ed42c8bf86ac4cf7ce6915906020015b60405180910390a25050565b336103e6610d6d565b6001600160a01b031614158015610421575060033360009081526019602052604090205460ff16600381111561041e5761041e611a43565b14155b1561043f57604051637b32c26b60e01b815260040160405180910390fd5b6000828152602160205260409020610457908261109d565b6040805182815233602082015283917f6d9b91502dc11e7c127e8e2d114c1f8026647ecb6b987c1baaadb706b5eb317691016103d1565b33610497610d6d565b6001600160a01b0316141580156104d2575060033360009081526019602052604090205460ff1660038111156104cf576104cf611a43565b14155b156104f057604051637b32c26b60e01b815260040160405180910390fd5b60008981526021602052604090206008015415610520576040516376a1368960e11b815260040160405180910390fd5b60018851111580610532575060208851115b156105505760405163502ef3af60e01b815260040160405180910390fd5b8751875160ff8216146105765760405163d6e48e5d60e01b815260040160405180910390fd5b6000885167ffffffffffffffff81111561059257610592611784565b6040519080825280602002602001820160405280156105bb578160200160208202803683370190505b50905060005b8260ff168160ff1610156107ef5760ff8116156106995760008c81526022602052604081208c519091908d9060ff851690811061060057610600611a59565b6020908102919091018101516001600160a01b031682528101919091526040016000205460ff1615158061067b57508a8160ff168151811061064457610644611a59565b60200260200101516001600160a01b03168b60008151811061066857610668611a59565b60200260200101516001600160a01b0316145b1561069957604051632fa9e93b60e11b815260040160405180910390fd5b60006001600160a01b03168b8260ff16815181106106b9576106b9611a59565b60200260200101516001600160a01b0316036106e857604051634ce187ad60e11b815260040160405180910390fd5b601260ff168a8260ff168151811061070257610702611a59565b602002602001015160ff16111561072c57604051637d4ada4560e11b815260040160405180910390fd5b898160ff168151811061074157610741611a59565b602002602001015160126107559190611a85565b6107639060ff16600a611b8e565b828260ff168151811061077857610778611a59565b60200260200101818152505080600060220160008e815260200190815260200160002060008d8460ff16815181106107b2576107b2611a59565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff191660ff929092169190911790556001016105c1565b50620f42408610610813576040516306aedbfd60e01b815260040160405180910390fd5b6305f5e100851061083757604051634fc2217d60e11b815260040160405180910390fd5b6402540be400841061085c576040516384b9a37f60e01b815260040160405180910390fd5b600061086784611115565b60405163266c45bb60e11b81529091506001600160a01b03821690634cd88b7690610898908c908c90600401611bf2565b6020604051808303816000875af11580156108b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108db9190611c20565b6108f85760405163276cd8b960e01b815260040160405180910390fd5b60006040518061018001604052808e815260200160648a6109199190611c42565b815260200161092960648b611c42565b81526020016000815260200160008152602001888152602001878152602001836001600160a01b031681526020018d81526020018481526020018d5167ffffffffffffffff81111561097d5761097d611784565b6040519080825280602002602001820160405280156109a6578160200160208202803683370190505b5081526020018d5167ffffffffffffffff8111156109c6576109c6611784565b6040519080825280602002602001820160405280156109ef578160200160208202803683370190505b50905260008e81526021602090815260409182902083518155838201516001820155918301516002830155606083015160038301556080830151600483015560a0830151600583015560c0830151600683015560e08301516007830180546001600160a01b0319166001600160a01b0390921691909117905561010083015180519394508493610a859260088501920190611668565b506101208201518051610aa29160098401916020909101906116cd565b506101408201518051610abf91600a8401916020909101906116cd565b506101608201518051610adc91600b8401916020909101906116cd565b509050508c7f4c5d883e86afc82dc0f918cfc013e437aa458ec41475884857ba8daec50d24cb8233604051610b12929190611cd5565b60405180910390a250505050505050505050505050565b33610b32610d6d565b6001600160a01b031614158015610b6d575060033360009081526019602052604090205460ff166003811115610b6a57610b6a611a43565b14155b15610b8b57604051637b32c26b60e01b815260040160405180910390fd5b6000818152602160205260409020610ba2906111b2565b60405133815281907f86ce75679135e270f845c02bcb49ef6fb50464cb322dcc30096cccd13d2597df9060200160405180910390a250565b33610be3610d6d565b6001600160a01b031614158015610c1e575060033360009081526019602052604090205460ff166003811115610c1b57610c1b611a43565b14155b15610c3c57604051637b32c26b60e01b815260040160405180910390fd5b6000828152602160205260409020610c549082611273565b6040805182815233602082015283917f46eefbb271e4103912d3c227656de8afc0849f4c8cba4b2a1e38b660361e046391016103d1565b33610c94610d6d565b6001600160a01b031614158015610ccf575060033360009081526019602052604090205460ff166003811115610ccc57610ccc611a43565b14155b15610ced57604051637b32c26b60e01b815260040160405180910390fd5b60205460011901610d1157604051637ce54e2d60e11b815260040160405180910390fd5b600260209081556000828152602190915260409020610d309033610feb565b60405133815281907f2e6c35653408399a9853c5e5f81b67018cba78568bfd76dd46f93c825cbfb95d9060200160405180910390a2506001602055565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c1320546001600160a01b031690565b6003830154610dad9062015180611dd6565b421015610e015760405162461bcd60e51b815260206004820152601f60248201527f57616974203120646179206265666f7265207374617274696e672072616d700060448201526064015b60405180910390fd5b610e0e6212750042611dd6565b811015610e565760405162461bcd60e51b8152602060048201526016602482015275496e73756666696369656e742072616d702074696d6560501b6044820152606401610df8565b8115801590610e675750620f424082105b610eb35760405162461bcd60e51b815260206004820181905260248201527f667574757265415f206d757374206265203e203020616e64203c204d41585f416044820152606401610df8565b6000610ebe846112ec565b90506000610ecd606485611c42565b905081811015610f2e5781610ee3600283611c42565b1015610f295760405162461bcd60e51b8152602060048201526015602482015274199d5d1d5c995057c81a5cc81d1bdbc81cdb585b1b605a1b6044820152606401610df8565b610f80565b610f39600283611c42565b811115610f805760405162461bcd60e51b8152602060048201526015602482015274667574757265415f20697320746f6f206c6172676560581b6044820152606401610df8565b600185018290556002850181905542600386018190556004860184905560408051848152602081018490528082019290925260608201859052517fa2b71ec6df949300b59aab36b55e189697b750119dd349fcfa8c0f779e83c2549181900360800190a15050505050565b600882015460005b8181101561109757600084600801828154811061101257611012611a59565b6000918252602082200154600b870180546001600160a01b039092169350908490811061104157611041611a59565b906000526020600020015490508060001461108d57600086600b01848154811061106d5761106d611a59565b60009182526020909120015561108d6001600160a01b038316868361139d565b5050600101610ff3565b50505050565b6305f5e1008111156110dc5760405162461bcd60e51b81526020600482015260086024820152670e8dede40d0d2ced60c31b6044820152606401610df8565b6005820181905581546040518281527f29aee3d14d18e1b8ace81481838ab2996fee9446a44336847d1d5c7fdf2471b1906020016103d1565b6000604051733d602d80600a3d3981f3363d3d373d3d3d363d7360601b81528260601b60148201526e5af43d82803e903d91602b57fd5bf360881b60288201526037816000f09150506001600160a01b0381166111ad5760405162461bcd60e51b8152602060048201526016602482015275115490cc4c4d8dce8818dc99585d194819985a5b195960521b6044820152606401610df8565b919050565b428160040154116112055760405162461bcd60e51b815260206004820152601760248201527f52616d7020697320616c72656164792073746f707065640000000000000000006044820152606401610df8565b6000611210826112ec565b60018301819055600283018190554260038401819055600484018190556040519192507f46e22fb3709ad289f62ce63d469248536dbc78d82b84a3d7e74ad606dc2019389161126791848252602082015260400190565b60405180910390a15050565b6402540be4008111156112b35760405162461bcd60e51b81526020600482015260086024820152670e8dede40d0d2ced60c31b6044820152606401610df8565b6006820181905581546040518281527f7b4e02f2e320870ba4f764edf60a5289a465018a3fe159f0d72ba33139b0a616906020016103d1565b60048101546002820154600091904282111561139657600384015460018501548083111561135a5761131e8285611dee565b6113288342611dee565b6113328386611dee565b61133c9190611c42565b6113469190611e05565b6113509082611dd6565b9695505050505050565b6113648285611dee565b61136e8342611dee565b6113788584611dee565b6113829190611c42565b61138c9190611e05565b6113509082611dee565b9392505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526113ef9084906113f4565b505050565b6000611449826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166114c69092919063ffffffff16565b8051909150156113ef57808060200190518101906114679190611c20565b6113ef5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610df8565b60606114d584846000856114dd565b949350505050565b60608247101561153e5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610df8565b6001600160a01b0385163b6115955760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610df8565b600080866001600160a01b031685876040516115b19190611e27565b60006040518083038185875af1925050503d80600081146115ee576040519150601f19603f3d011682016040523d82523d6000602084013e6115f3565b606091505b509150915061160382828661160e565b979650505050505050565b6060831561161d575081611396565b82511561162d5782518084602001fd5b8160405162461bcd60e51b8152600401610df89190611e43565b50805460008255906000526020600020908101906116659190611708565b50565b8280548282559060005260206000209081019282156116bd579160200282015b828111156116bd57825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190611688565b506116c9929150611708565b5090565b8280548282559060005260206000209081019282156116bd579160200282015b828111156116bd5782518255916020019190600101906116ed565b5b808211156116c95760008155600101611709565b60008060006060848603121561173257600080fd5b505081359360208301359350604090920135919050565b60006020828403121561175b57600080fd5b5035919050565b6000806040838503121561177557600080fd5b50508035926020909101359150565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156117c3576117c3611784565b604052919050565b600067ffffffffffffffff8211156117e5576117e5611784565b5060051b60200190565b6001600160a01b038116811461166557600080fd5b600082601f83011261181557600080fd5b8135602061182a611825836117cb565b61179a565b82815260059290921b8401810191818101908684111561184957600080fd5b8286015b8481101561186d578035611860816117ef565b835291830191830161184d565b509695505050505050565b600082601f83011261188957600080fd5b81356020611899611825836117cb565b82815260059290921b840181019181810190868411156118b857600080fd5b8286015b8481101561186d57803560ff811681146118d65760008081fd5b83529183019183016118bc565b600082601f8301126118f457600080fd5b813567ffffffffffffffff81111561190e5761190e611784565b611921601f8201601f191660200161179a565b81815284602083860101111561193657600080fd5b816020850160208301376000918101602001919091529392505050565b80356111ad816117ef565b60008060008060008060008060006101208a8c03121561197d57600080fd5b8935985060208a013567ffffffffffffffff8082111561199c57600080fd5b6119a88d838e01611804565b995060408c01359150808211156119be57600080fd5b6119ca8d838e01611878565b985060608c01359150808211156119e057600080fd5b6119ec8d838e016118e3565b975060808c0135915080821115611a0257600080fd5b50611a0f8c828d016118e3565b95505060a08a0135935060c08a0135925060e08a01359150611a346101008b01611953565b90509295985092959850929598565b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff841680821015611a9f57611a9f611a6f565b90039392505050565b600181815b80851115611ae3578160001904821115611ac957611ac9611a6f565b80851615611ad657918102915b93841c9390800290611aad565b509250929050565b600082611afa57506001611b88565b81611b0757506000611b88565b8160018114611b1d5760028114611b2757611b43565b6001915050611b88565b60ff841115611b3857611b38611a6f565b50506001821b611b88565b5060208310610133831016604e8410600b8410161715611b66575081810a611b88565b611b708383611aa8565b8060001904821115611b8457611b84611a6f565b0290505b92915050565b60006113968383611aeb565b60005b83811015611bb5578181015183820152602001611b9d565b838111156110975750506000910152565b60008151808452611bde816020860160208601611b9a565b601f01601f19169290920160200192915050565b604081526000611c056040830185611bc6565b8281036020840152611c178185611bc6565b95945050505050565b600060208284031215611c3257600080fd5b8151801515811461139657600080fd5b6000816000190483118215151615611c5c57611c5c611a6f565b500290565b600081518084526020808501945080840160005b83811015611c9a5781516001600160a01b031687529582019590820190600101611c75565b509495945050505050565b600081518084526020808501945080840160005b83811015611c9a57815187529582019590820190600101611cb9565b60408152825160408201526020830151606082015260408301516080820152606083015160a0820152608083015160c082015260a083015160e0820152600060c0840151610100818185015260e08601519150610120611d3f818601846001600160a01b03169052565b81870151925061018091506101408281870152611d606101c0870185611c61565b9350818801519150603f19610160818887030181890152611d818685611ca5565b9550828a01519350818887030185890152611d9c8685611ca5565b9550808a015194505080878603016101a0880152505050611dbd8282611ca5565b9250505061139660208301846001600160a01b03169052565b60008219821115611de957611de9611a6f565b500190565b600082821015611e0057611e00611a6f565b500390565b600082611e2257634e487b7160e01b600052601260045260246000fd5b500490565b60008251611e39818460208701611b9a565b9190910192915050565b6020815260006113966020830184611bc656fea2646970667358221220caf8a826d42484dd33a472eb9905e3b76f65a970b49fb29ff38ca29d2a0d5e3a64736f6c634300080f0033";

type SwapAdminFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SwapAdminFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SwapAdminFacet__factory extends ContractFactory {
  constructor(...args: SwapAdminFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SwapAdminFacet> {
    return super.deploy(overrides || {}) as Promise<SwapAdminFacet>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): SwapAdminFacet {
    return super.attach(address) as SwapAdminFacet;
  }
  override connect(signer: Signer): SwapAdminFacet__factory {
    return super.connect(signer) as SwapAdminFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SwapAdminFacetInterface {
    return new utils.Interface(_abi) as SwapAdminFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SwapAdminFacet {
    return new Contract(address, _abi, signerOrProvider) as SwapAdminFacet;
  }
}
