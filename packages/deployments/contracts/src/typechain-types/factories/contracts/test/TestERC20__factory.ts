/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  TestERC20,
  TestERC20Interface,
} from "../../../contracts/test/TestERC20";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "_v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "_r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_newName",
        type: "string",
      },
      {
        internalType: "string",
        name: "_newSymbol",
        type: "string",
      },
    ],
    name: "setDetails",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60e0604090808252346200049f576200183a8038038091620000228285620004a4565b8339810182828203126200049f5781516001600160401b03908181116200049f578262000051918501620004c8565b92602092838201518381116200049f576200006d9201620004c8565b9284519085820182811084821117620003ac57865260019081835284830190603160f81b8252805192858411620003ac5760038054948286811c9616801562000494575b898710146200047e57601f9586811162000433575b508089878211600114620003ce57600091620003c2575b5060001982841b1c191690831b1781555b885190878211620003ac576004998a548481811c91168015620003a1575b8b8210146200038c5787811162000341575b508990878411600114620002d457938394918492600095620002c8575b50501b92600019911b1c19161787555b601260ff1960055416176005558581519101209251902091806008558260c05246608052865192858401917f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f83528885015260608401524660808401523060a084015260a0835260c083019383851090851117620002b357838752825190206007553060a0523315620002735750505060025469d3c21bcecceda1000000928382018092116200025e57506000917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9160025533835282815284832084815401905584519384523393a3516112fa908162000540823960805181611264015260a0518161119e015260c0518161120d0152f35b601190634e487b7160e01b6000525260246000fd5b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300916101049160649562461bcd60e51b865260c483015260e48201520152fd5b604186634e487b7160e01b6000525260246000fd5b0151935038806200013b565b9190601f198416928c600052848c600020948d6000905b898383106200032857505050106200030d575b50505050811b0187556200014b565b01519060f884600019921b161c1916905538808080620002fe565b8686015189559097019694850194889350018e620002eb565b8b6000528a6000208880860160051c8201928d871062000382575b0160051c019085905b828110620003755750506200011e565b6000815501859062000365565b925081926200035c565b60228c634e487b7160e01b6000525260246000fd5b90607f16906200010c565b634e487b7160e01b600052604160045260246000fd5b905084015138620000dd565b849250601f19821690846000528b6000209160005b8d8282106200041c575050831162000403575b5050811b018155620000ee565b86015160001983861b60f8161c191690553880620003f6565b838a015185558896909401939283019201620003e3565b82600052896000208780840160051c8201928c851062000474575b0160051c019084905b82811062000467575050620000c6565b6000815501849062000457565b925081926200044e565b634e487b7160e01b600052602260045260246000fd5b95607f1695620000b1565b600080fd5b601f909101601f19168101906001600160401b03821190821017620003ac57604052565b919080601f840112156200049f578251906001600160401b038211620003ac576040519160209162000504601f8301601f1916840185620004a4565b8184528282870101116200049f5760005b8181106200052b57508260009394955001015290565b85810183015184820184015282016200051556fe608060408181526004918236101561001657600080fd5b600092833560e01c91826306fdde0314610bae57508163095ea7b314610b8457816318160ddd14610b6557816323b872dd14610a9b578163313ce56714610a795781633644e51514610a555781633950935114610a0557816340c10f191461094657816370a082311461090f5781637ecebe00146108d757816395d89b41146107f45781639dc29fac146106d3578163a457c2d71461062e578163a9059cbb146105fd578163b7b090ee14610318578163d505accf1461012b575063dd62ed3e146100e057600080fd5b34610127578060031936011261012757806020926100fc610cc8565b610104610ce3565b6001600160a01b0391821683526001865283832091168252845220549051908152f35b5080fd5b839150346101275760e036600319011261012757610147610cc8565b61014f610ce3565b90604435926064356084359060ff82168203610314578042116102d15760018060a01b03908185169283895260066020528989208054906001820190558a519260208401917f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98352868d860152858a1660608601528a608086015260a085015260c084015260c0835260e083019267ffffffffffffffff93818110858211176102be578c525190209061020061119b565b928b5192602084019461190160f01b865260228501526042840152604283526080830190838210908211176102ab5791610253939161024b938d5260c4359260a4359251902061110c565b919091610ff2565b16036102685750610265939450610eb8565b80f35b606490602087519162461bcd60e51b8352820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e617475726500006044820152fd5b634e487b7160e01b8b526041875260248bfd5b634e487b7160e01b8c526041885260248cfd5b875162461bcd60e51b8152602081850152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e650000006044820152606490fd5b8680fd5b838334610127573660031901126105fa5767ffffffffffffffff9180358381116105f6576103499036908301610cf9565b6024949194358281116105f2576103639036908501610cf9565b928083116105df5760039280610379855461128a565b98601f998a8111610574575b5088908a83116001146104f35789926104e8575b50508160011b9160001990861b1c19161783555b83116104d5576103bd845461128a565b868111610479575b50849583116001146103fd57948495839495936103f2575b50508260011b92600019911b1c191617905580f35b0135915085806103dd565b601f198316957f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b92865b888110610461575084600196979810610447575b50505050811b01905580f35b60f885600019921b161c199101351690558480808061043b565b91936020600181928787013581550195019201610427565b7f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b8780860160051c820192602087106104cc575b0160051c01905b8181106104c157506103c5565b8681556001016104b4565b925081926104ad565b634e487b7160e01b855260418452602485fd5b013590508980610399565b868a527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b925090601f1984168a5b81811061055c5750908460019594939210610544575b505050811b0183556103ad565b013560001983881b60f8161c19169055898080610537565b91936020600181928787013581550195019201610521565b9091508589527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b8a80850160051c820192602086106105d6575b9085949392910160051c01905b8181106105c85750610385565b8a81558493506001016105bb565b925081926105ae565b634e487b7160e01b865260418552602486fd5b8480fd5b8280fd5b80fd5b50503461012757806003193601126101275760209061062761061d610cc8565b6024359033610d4a565b5160018152f35b905082346105fa57826003193601126105fa57610649610cc8565b918360243592338152600160205281812060018060a01b0386168252602052205490828210610682576020856106278585038733610eb8565b608490602086519162461bcd60e51b8352820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152fd5b839150346101275782600319360112610127576106ee610cc8565b6001600160a01b0316906024359082156107a75782845283602052848420549082821061075957508184957fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef936020938688528785520381872055816002540360025551908152a380f35b608490602087519162461bcd60e51b8352820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152fd5b608490602086519162461bcd60e51b8352820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152fd5b919050346105f657826003193601126105f657805191838154906108178261128a565b808652926001928084169081156108ac5750600114610850575b61084c8686610842828b0383610fba565b5191829182610c7f565b0390f35b815294507f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b8286106108945750505061084282602061084c958201019438610831565b80546020878701810191909152909501948101610876565b905061084c97508693506020925061084294915060ff191682840152151560051b8201019438610831565b5050346101275760203660031901126101275760209181906001600160a01b036108ff610cc8565b1681526006845220549051908152f35b5050346101275760203660031901126101275760209181906001600160a01b03610937610cc8565b16815280845220549051908152f35b919050346105f657806003193601126105f657610961610cc8565b6001600160a01b031691602435919083156109c357506020827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef926109a98795600254610d27565b60025585855284835280852082815401905551908152a380f35b6020606492519162461bcd60e51b8352820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152fd5b505034610127578060031936011261012757610627602092610a4e610a28610cc8565b338352600186528483206001600160a01b03821684528652918490205460243590610d27565b9033610eb8565b505034610127578160031936011261012757602090610a7261119b565b9051908152f35b50503461012757816003193601126101275760209060ff600554169051908152f35b8391503461012757606036600319011261012757610ab7610cc8565b610abf610ce3565b91846044359460018060a01b038416815260016020528181203382526020522054906000198203610af9575b602086610627878787610d4a565b848210610b225750918391610b176020969561062795033383610eb8565b919394819350610aeb565b606490602087519162461bcd60e51b8352820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152fd5b5050346101275781600319360112610127576020906002549051908152f35b505034610127578060031936011261012757602090610627610ba4610cc8565b6024359033610eb8565b849084346105f657826003193601126105f65782600354610bce8161128a565b80855291600191808316908115610c575750600114610bfa575b5050506108428261084c940383610fba565b9450600385527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b828610610c3f5750505061084282602061084c9582010194610be8565b80546020878701810191909152909501948101610c22565b61084c97508693506020925061084294915060ff191682840152151560051b82010194610be8565b6020808252825181830181905290939260005b828110610cb457505060409293506000838284010152601f8019910116010190565b818101860151848201604001528501610c92565b600435906001600160a01b0382168203610cde57565b600080fd5b602435906001600160a01b0382168203610cde57565b9181601f84011215610cde5782359167ffffffffffffffff8311610cde5760208381860195010111610cde57565b91908201809211610d3457565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b03908116918215610e655716918215610e1457600082815280602052604081205491808310610dc057604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef958760209652828652038282205586815220818154019055604051908152a3565b60405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608490fd5b60405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608490fd5b60405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608490fd5b6001600160a01b03908116918215610f695716918215610f195760207f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925918360005260018252604060002085600052825280604060002055604051908152a3565b60405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608490fd5b60405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608490fd5b90601f8019910116810190811067ffffffffffffffff821117610fdc57604052565b634e487b7160e01b600052604160045260246000fd5b60058110156110f657806110035750565b600181036110505760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606490fd5b6002810361109d5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606490fd5b6003146110a657565b60405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608490fd5b634e487b7160e01b600052602160045260246000fd5b9291907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831161118f5791608094939160ff602094604051948552168484015260408301526060820152600093849182805260015afa156111825781516001600160a01b0381161561117c579190565b50600190565b50604051903d90823e3d90fd5b50505050600090600390565b307f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03161480611261575b156111d85760075490565b60085460405160208101917f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f835260408201527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260a0815260c0810181811067ffffffffffffffff821117610fdc5760405251902090565b507f000000000000000000000000000000000000000000000000000000000000000046146111cd565b90600182811c921680156112ba575b60208310146112a457565b634e487b7160e01b600052602260045260246000fd5b91607f169161129956fea26469706673582212209c9dfac642e3ba070c05c3beb48a492907572c8799c071dee7493bb5bc19cdc964736f6c63430008110033";

type TestERC20ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestERC20ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestERC20__factory extends ContractFactory {
  constructor(...args: TestERC20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TestERC20> {
    return super.deploy(_name, _symbol, overrides || {}) as Promise<TestERC20>;
  }
  override getDeployTransaction(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_name, _symbol, overrides || {});
  }
  override attach(address: string): TestERC20 {
    return super.attach(address) as TestERC20;
  }
  override connect(signer: Signer): TestERC20__factory {
    return super.connect(signer) as TestERC20__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestERC20Interface {
    return new utils.Interface(_abi) as TestERC20Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestERC20 {
    return new Contract(address, _abi, signerOrProvider) as TestERC20;
  }
}
