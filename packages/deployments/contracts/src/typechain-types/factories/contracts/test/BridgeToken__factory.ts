/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  BridgeToken,
  BridgeTokenInterface,
} from "../../../contracts/test/BridgeToken";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: true,
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint8",
        name: "decimals",
        type: "uint8",
      },
    ],
    name: "UpdateDetails",
    type: "event",
  },
  {
    inputs: [],
    name: "VERSION",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_PERMIT_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amnt",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "detailsHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "domainSeparator",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amnt",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "_v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "_r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_newName",
        type: "string",
      },
      {
        internalType: "string",
        name: "_newSymbol",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "_newDecimals",
        type: "uint8",
      },
    ],
    name: "setDetails",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_detailsHash",
        type: "bytes32",
      },
    ],
    name: "setDetailsHash",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9608052610120604052600160e052603160f81b610100527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660a05261190160c05234801561006d57600080fd5b5060805160a05160c0516118306100a4600039600061095201526000610b150152600081816102bc01526108ee01526118306000f3fe608060405234801561001057600080fd5b50600436106101735760003560e01c80638129fc1c116100de578063a9059cbb11610097578063dd62ed3e11610071578063dd62ed3e1461033d578063f2fde38b14610376578063f698da2514610389578063ffa1ad741461039157600080fd5b8063a9059cbb14610304578063cc2ab7c714610317578063d505accf1461032a57600080fd5b80638129fc1c1461028c5780638da5cb5b1461029457806395d89b41146102af578063982aaf6b146102b75780639dc29fac146102de578063a457c2d7146102f157600080fd5b806340c10f191161013057806340c10f191461020a5780634815fcb11461021f578063654935f41461022857806370a082311461023b578063715018a6146102645780637ecebe001461026c57600080fd5b806306fdde0314610178578063095ea7b31461019657806318160ddd146101b957806323b872dd146101cb578063313ce567146101de57806339509351146101f7575b600080fd5b610180610399565b60405161018d9190611237565b60405180910390f35b6101a96101a4366004611286565b61042e565b604051901515815260200161018d565b6067545b60405190815260200161018d565b6101a96101d93660046112b0565b610444565b606a5460ff165b60405160ff909116815260200161018d565b6101a9610205366004611286565b6104ad565b61021d610218366004611286565b6104e3565b005b6101bd606c5481565b61021d610236366004611346565b6104f9565b6101bd6102493660046113c7565b6001600160a01b031660009081526065602052604090205490565b61021d61066c565b6101bd61027a3660046113c7565b606b6020526000908152604090205481565b61021d610680565b6033546040516001600160a01b03909116815260200161018d565b610180610791565b6101bd7f000000000000000000000000000000000000000000000000000000000000000081565b61021d6102ec366004611286565b6107a3565b6101a96102ff366004611286565b6107b5565b6101a9610312366004611286565b610804565b61021d6103253660046113e2565b610811565b61021d6103383660046113fb565b610827565b6101bd61034b366004611465565b6001600160a01b03918216600090815260666020908152604080832093909416825291909152205490565b61021d6103843660046113c7565b610ab4565b6101bd610ac5565b6101e5600081565b6060606860000180546103ab90611498565b80601f01602080910402602001604051908101604052809291908181526020018280546103d790611498565b80156104245780601f106103f957610100808354040283529160200191610424565b820191906000526020600020905b81548152906001019060200180831161040757829003601f168201915b5050505050905090565b600061043b338484610b65565b50600192915050565b6000610451848484610c8a565b6104a3843361049e856040518060600160405280602881526020016117ae602891396001600160a01b038a1660009081526066602090815260408083203384529091529020549190610e10565b610b65565b5060019392505050565b3360008181526066602090815260408083206001600160a01b0387168452909152812054909161043b91859061049e9086610e3c565b6104eb610e4f565b6104f58282610ea9565b5050565b60006068600001805461050b90611498565b159150819050806105915750606c5461058f87878080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050604080516020601f8b018190048102820181019092528981529250899150889081908401838280828437600092019190915250889250610f8f915050565b145b6105d75760405162461bcd60e51b815260206004820152601260248201527121636f6d6d69747465642064657461696c7360701b60448201526064015b60405180910390fd5b60686105e486888361152e565b5060696105f284868361152e565b50606a805460ff191660ff841617905580610664578160ff16848460405161061b9291906115ef565b604051809103902087876040516106339291906115ef565b604051908190038120907f96848da8c41ae282b5ec5c04f45fc469a8186bb78de70419275c2c402fcc27b190600090a45b505050505050565b610674610e4f565b61067e6000610fcb565b565b600054610100900460ff16158080156106a05750600054600160ff909116105b806106ba5750303b1580156106ba575060005460ff166001145b61071d5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016105ce565b6000805460ff191660011790558015610740576000805461ff0019166101001790555b61074861101d565b801561078e576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50565b6060606860010180546103ab90611498565b6107ab610e4f565b6104f5828261104c565b600061043b338461049e856040518060600160405280602581526020016117d6602591393360009081526066602090815260408083206001600160a01b038d1684529091529020549190610e10565b600061043b338484610c8a565b610819610e4f565b80606c541461078e57606c55565b834211156108775760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e6500000060448201526064016105ce565b6001600160a01b0387166108cd5760405162461bcd60e51b815260206004820152601f60248201527f45524332305065726d69743a206f776e6572207a65726f20616464726573730060448201526064016105ce565b6001600160a01b038781166000818152606b602090815260408083205481517f00000000000000000000000000000000000000000000000000000000000000008185015280830195909552948b166060850152608084018a905260a0840185905260c08085018a90528151808603909101815260e090940190528251920191909120907f0000000000000000000000000000000000000000000000000000000000000000610979610ac5565b60405160f09290921b6001600160f01b031916602083015260228201526042810183905260620160408051601f198184030181528282528051602091820120600080855291840180845281905260ff8a169284019290925260608301889052608083018790529092509060019060a0016020604051602081039080840390855afa158015610a0b573d6000803e3d6000fd5b5050506020604051035190508a6001600160a01b0316816001600160a01b031614610a785760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e6174757265000060448201526064016105ce565b610a83846001611615565b6001600160a01b038c166000908152606b6020526040902055610aa78b8b8b610b65565b5050505050505050505050565b610abc610e4f565b61078e81611150565b60405160009046907f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f90610afb9060689061162d565b6040805191829003822060208301939093528101919091527f00000000000000000000000000000000000000000000000000000000000000006060820152608081018290523060a082015260c0016040516020818303038152906040528051906020012091505090565b6001600160a01b038316610bc75760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016105ce565b6001600160a01b038216610c285760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016105ce565b6001600160a01b0383811660008181526066602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b038316610cee5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016105ce565b6001600160a01b038216610d505760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016105ce565b610d8d81604051806060016040528060268152602001611788602691396001600160a01b0386166000908152606560205260409020549190610e10565b6001600160a01b038085166000908152606560205260408082209390935590841681522054610dbc9082610e3c565b6001600160a01b0380841660008181526065602052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610c7d9085815260200190565b60008184841115610e345760405162461bcd60e51b81526004016105ce9190611237565b505050900390565b6000610e488284611615565b9392505050565b6033546001600160a01b0316331461067e5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105ce565b6001600160a01b038216610eff5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016105ce565b606754610f0c9082610e3c565b6067556001600160a01b038216600090815260656020526040902054610f329082610e3c565b6001600160a01b0383166000818152606560205260408082209390935591519091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610f839085815260200190565b60405180910390a35050565b600083518484518585604051602001610fac9594939291906116a3565b6040516020818303038152906040528051906020012090509392505050565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff166110445760405162461bcd60e51b81526004016105ce90611703565b61067e6111cb565b6001600160a01b0382166110ac5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016105ce565b6110e981604051806060016040528060228152602001611766602291396001600160a01b0385166000908152606560205260409020549190610e10565b6001600160a01b03831660009081526065602052604090205560675461110f90826111fb565b6067556040518181526000906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001610f83565b611158610e4f565b6001600160a01b0381166111bd5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016105ce565b61078e81610fcb565b505050565b600054610100900460ff166111f25760405162461bcd60e51b81526004016105ce90611703565b61067e33610fcb565b6000610e48828461174e565b60005b8381101561122257818101518382015260200161120a565b83811115611231576000848401525b50505050565b6020815260008251806020840152611256816040850160208701611207565b601f01601f19169190910160400192915050565b80356001600160a01b038116811461128157600080fd5b919050565b6000806040838503121561129957600080fd5b6112a28361126a565b946020939093013593505050565b6000806000606084860312156112c557600080fd5b6112ce8461126a565b92506112dc6020850161126a565b9150604084013590509250925092565b60008083601f8401126112fe57600080fd5b50813567ffffffffffffffff81111561131657600080fd5b60208301915083602082850101111561132e57600080fd5b9250929050565b803560ff8116811461128157600080fd5b60008060008060006060868803121561135e57600080fd5b853567ffffffffffffffff8082111561137657600080fd5b61138289838a016112ec565b9097509550602088013591508082111561139b57600080fd5b506113a8888289016112ec565b90945092506113bb905060408701611335565b90509295509295909350565b6000602082840312156113d957600080fd5b610e488261126a565b6000602082840312156113f457600080fd5b5035919050565b600080600080600080600060e0888a03121561141657600080fd5b61141f8861126a565b965061142d6020890161126a565b9550604088013594506060880135935061144960808901611335565b925060a0880135915060c0880135905092959891949750929550565b6000806040838503121561147857600080fd5b6114818361126a565b915061148f6020840161126a565b90509250929050565b600181811c908216806114ac57607f821691505b6020821081036114cc57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b601f8211156111c657600081815260208120601f850160051c8101602086101561150f5750805b601f850160051c820191505b818110156106645782815560010161151b565b67ffffffffffffffff831115611546576115466114d2565b61155a836115548354611498565b836114e8565b6000601f84116001811461158e57600085156115765750838201355b600019600387901b1c1916600186901b1783556115e8565b600083815260209020601f19861690835b828110156115bf578685013582556020948501946001909201910161159f565b50868210156115dc5760001960f88860031b161c19848701351681555b505060018560011b0183555b5050505050565b8183823760009101908152919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115611628576116286115ff565b500190565b600080835461163b81611498565b60018281168015611653576001811461166857611697565b60ff1984168752821515830287019450611697565b8760005260208060002060005b8581101561168e5781548a820152908401908201611675565b50505082870194505b50929695505050505050565b858152600085516116bb816020850160208a01611207565b808301905085602082015284516116d9816040840160208901611207565b60f89490941b6001600160f81b031916604091909401908101939093525050604101949350505050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b600082821015611760576117606115ff565b50039056fe45524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa26469706673582212207ca357c30ca3dab7f2fc00ae2f8bf50e5a108850fb6ca0ab0a9c181f5fe66eab64736f6c634300080f0033";

type BridgeTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BridgeTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BridgeToken__factory extends ContractFactory {
  constructor(...args: BridgeTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BridgeToken> {
    return super.deploy(overrides || {}) as Promise<BridgeToken>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): BridgeToken {
    return super.attach(address) as BridgeToken;
  }
  override connect(signer: Signer): BridgeToken__factory {
    return super.connect(signer) as BridgeToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BridgeTokenInterface {
    return new utils.Interface(_abi) as BridgeTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BridgeToken {
    return new Contract(address, _abi, signerOrProvider) as BridgeToken;
  }
}
