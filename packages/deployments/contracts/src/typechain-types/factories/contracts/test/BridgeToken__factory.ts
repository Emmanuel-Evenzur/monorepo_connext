/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  BridgeToken,
  BridgeTokenInterface,
} from "../../../contracts/test/BridgeToken";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: true,
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint8",
        name: "decimals",
        type: "uint8",
      },
    ],
    name: "UpdateDetails",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amnt",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "detailsHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amnt",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "_v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "_r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_newName",
        type: "string",
      },
      {
        internalType: "string",
        name: "_newSymbol",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "_newDecimals",
        type: "uint8",
      },
    ],
    name: "setDetails",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_detailsHash",
        type: "bytes32",
      },
    ],
    name: "setDetailsHash",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611acc806100206000396000f3fe608060405234801561001057600080fd5b506004361061014d5760003560e01c8063715018a6116100c3578063a457c2d71161007c578063a457c2d714610285578063a9059cbb14610298578063cc2ab7c7146102ab578063d505accf146102be578063dd62ed3e146102d1578063f2fde38b1461030a57600080fd5b8063715018a61461022c5780637ecebe00146102345780638129fc1c146102475780638da5cb5b1461024f57806395d89b411461026a5780639dc29fac1461027257600080fd5b80633644e515116101155780633644e515146101cd57806339509351146101d557806340c10f19146101e85780634815fcb1146101fd578063654935f41461020657806370a082311461021957600080fd5b806306fdde0314610152578063095ea7b31461017057806318160ddd1461019357806323b872dd146101a5578063313ce567146101b8575b600080fd5b61015a61031d565b6040516101679190611539565b60405180910390f35b61018361017e366004611588565b6103b2565b6040519015158152602001610167565b609b545b604051908152602001610167565b6101836101b33660046115b2565b6103c8565b609f5460405160ff9091168152602001610167565b610197610431565b6101836101e3366004611588565b610440565b6101fb6101f6366004611588565b610476565b005b61019760a05481565b6101fb610214366004611648565b61048c565b6101976102273660046116c9565b6105ff565b6101fb61061f565b6101976102423660046116c9565b610633565b6101fb610651565b6033546040516001600160a01b039091168152602001610167565b61015a610812565b6101fb610280366004611588565b610824565b610183610293366004611588565b610836565b6101836102a6366004611588565b610885565b6101fb6102b93660046116e4565b610892565b6101fb6102cc3660046116fd565b6108a8565b6101976102df366004611767565b6001600160a01b039182166000908152609a6020908152604080832093909416825291909152205490565b6101fb6103183660046116c9565b610a0c565b6060609d600001805461032f9061179a565b80601f016020809104026020016040519081016040528092919081815260200182805461035b9061179a565b80156103a85780601f1061037d576101008083540402835291602001916103a8565b820191906000526020600020905b81548152906001019060200180831161038b57829003601f168201915b5050505050905090565b60006103bf338484610a1d565b50600192915050565b60006103d5848484610b42565b610427843361042285604051806060016040528060288152602001611a4a602891396001600160a01b038a166000908152609a602090815260408083203384529091529020549190610cc8565b610a1d565b5060019392505050565b600061043b610cf4565b905090565b336000818152609a602090815260408083206001600160a01b038716845290915281205490916103bf9185906104229086610d2b565b61047e610d3e565b6104888282610d98565b5050565b6000609d600001805461049e9061179a565b15915081905080610524575060a05461052287878080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050604080516020601f8b018190048102820181019092528981529250899150889081908401838280828437600092019190915250889250610e7e915050565b145b61056a5760405162461bcd60e51b815260206004820152601260248201527121636f6d6d69747465642064657461696c7360701b60448201526064015b60405180910390fd5b609d61057786888361182a565b50609e61058584868361182a565b50609f805460ff191660ff8416179055806105f7578160ff1684846040516105ae9291906118eb565b604051809103902087876040516105c69291906118eb565b604051908190038120907f96848da8c41ae282b5ec5c04f45fc469a8186bb78de70419275c2c402fcc27b190600090a45b505050505050565b6001600160a01b0381166000908152609960205260408120545b92915050565b610627610d3e565b6106316000610eba565b565b6001600160a01b0381166000908152609c6020526040812054610619565b600054610100900460ff16158080156106715750600054600160ff909116105b8061068b5750303b15801561068b575060005460ff166001145b6106ee5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610561565b6000805460ff191660011790558015610711576000805461ff0019166101001790555b610719610f0c565b6107c9609d600001805461072c9061179a565b80601f01602080910402602001604051908101604052809291908181526020018280546107589061179a565b80156107a55780601f1061077a576101008083540402835291602001916107a5565b820191906000526020600020905b81548152906001019060200180831161078857829003601f168201915b5050505050604051806040016040528060018152602001603160f81b815250610f3b565b801561080f576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50565b6060609d600101805461032f9061179a565b61082c610d3e565b6104888282610f6c565b60006103bf338461042285604051806060016040528060258152602001611a7260259139336000908152609a602090815260408083206001600160a01b038d1684529091529020549190610cc8565b60006103bf338484610b42565b61089a610d3e565b8060a0541461080f5760a055565b834211156108f85760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e650000006044820152606401610561565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98888886109278c611070565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e001604051602081830303815290604052805190602001209050600061098282611098565b90506000610992828787876110e6565b9050896001600160a01b0316816001600160a01b0316146109f55760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e617475726500006044820152606401610561565b610a008a8a8a610a1d565b50505050505050505050565b610a14610d3e565b61080f8161110e565b6001600160a01b038316610a7f5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610561565b6001600160a01b038216610ae05760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610561565b6001600160a01b038381166000818152609a602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b038316610ba65760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610561565b6001600160a01b038216610c085760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610561565b610c4581604051806060016040528060268152602001611a24602691396001600160a01b0386166000908152609960205260409020549190610cc8565b6001600160a01b038085166000908152609960205260408082209390935590841681522054610c749082610d2b565b6001600160a01b0380841660008181526099602052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610b359085815260200190565b60008184841115610cec5760405162461bcd60e51b81526004016105619190611539565b505050900390565b600061043b7f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f610d2360655490565b606654611189565b6000610d378284611911565b9392505050565b6033546001600160a01b031633146106315760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610561565b6001600160a01b038216610dee5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610561565b609b54610dfb9082610d2b565b609b556001600160a01b038216600090815260996020526040902054610e219082610d2b565b6001600160a01b0383166000818152609960205260408082209390935591519091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610e729085815260200190565b60405180910390a35050565b600083518484518585604051602001610e9b959493929190611929565b6040516020818303038152906040528051906020012090509392505050565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff16610f335760405162461bcd60e51b815260040161056190611989565b6106316111b8565b600054610100900460ff16610f625760405162461bcd60e51b815260040161056190611989565b61048882826111e8565b6001600160a01b038216610fcc5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610561565b61100981604051806060016040528060228152602001611a02602291396001600160a01b0385166000908152609960205260409020549190610cc8565b6001600160a01b038316600090815260996020526040902055609b5461102f9082611219565b609b556040518181526000906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001610e72565b6001600160a01b0381166000908152609c602052604090208054600181018255905b50919050565b60006106196110a5610cf4565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b60008060006110f787878787611225565b9150915061110481611312565b5095945050505050565b611116610d3e565b6001600160a01b03811661117b5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610561565b61080f81610eba565b505050565b6040805160208101859052908101839052606081018290524660808201523060a082015260009060c001610e9b565b600054610100900460ff166111df5760405162461bcd60e51b815260040161056190611989565b61063133610eba565b600054610100900460ff1661120f5760405162461bcd60e51b815260040161056190611989565b61048882826114c8565b6000610d3782846119d4565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083111561125c5750600090506003611309565b8460ff16601b1415801561127457508460ff16601c14155b156112855750600090506004611309565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa1580156112d9573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661130257600060019250925050611309565b9150600090505b94509492505050565b6000816004811115611326576113266119eb565b0361132e5750565b6001816004811115611342576113426119eb565b0361138f5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610561565b60028160048111156113a3576113a36119eb565b036113f05760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610561565b6003816004811115611404576114046119eb565b0361145c5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610561565b6004816004811115611470576114706119eb565b0361080f5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b6064820152608401610561565b600054610100900460ff166114ef5760405162461bcd60e51b815260040161056190611989565b815160209283012081519190920120606591909155606655565b60005b8381101561152457818101518382015260200161150c565b83811115611533576000848401525b50505050565b6020815260008251806020840152611558816040850160208701611509565b601f01601f19169190910160400192915050565b80356001600160a01b038116811461158357600080fd5b919050565b6000806040838503121561159b57600080fd5b6115a48361156c565b946020939093013593505050565b6000806000606084860312156115c757600080fd5b6115d08461156c565b92506115de6020850161156c565b9150604084013590509250925092565b60008083601f84011261160057600080fd5b50813567ffffffffffffffff81111561161857600080fd5b60208301915083602082850101111561163057600080fd5b9250929050565b803560ff8116811461158357600080fd5b60008060008060006060868803121561166057600080fd5b853567ffffffffffffffff8082111561167857600080fd5b61168489838a016115ee565b9097509550602088013591508082111561169d57600080fd5b506116aa888289016115ee565b90945092506116bd905060408701611637565b90509295509295909350565b6000602082840312156116db57600080fd5b610d378261156c565b6000602082840312156116f657600080fd5b5035919050565b600080600080600080600060e0888a03121561171857600080fd5b6117218861156c565b965061172f6020890161156c565b9550604088013594506060880135935061174b60808901611637565b925060a0880135915060c0880135905092959891949750929550565b6000806040838503121561177a57600080fd5b6117838361156c565b91506117916020840161156c565b90509250929050565b600181811c908216806117ae57607f821691505b60208210810361109257634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b601f82111561118457600081815260208120601f850160051c8101602086101561180b5750805b601f850160051c820191505b818110156105f757828155600101611817565b67ffffffffffffffff831115611842576118426117ce565b61185683611850835461179a565b836117e4565b6000601f84116001811461188a57600085156118725750838201355b600019600387901b1c1916600186901b1783556118e4565b600083815260209020601f19861690835b828110156118bb578685013582556020948501946001909201910161189b565b50868210156118d85760001960f88860031b161c19848701351681555b505060018560011b0183555b5050505050565b8183823760009101908152919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115611924576119246118fb565b500190565b85815260008551611941816020850160208a01611509565b8083019050856020820152845161195f816040840160208901611509565b60f89490941b6001600160f81b031916604091909401908101939093525050604101949350505050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b6000828210156119e6576119e66118fb565b500390565b634e487b7160e01b600052602160045260246000fdfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220bd5ca2a8ec4e32be7e641f3157c109ee0e799717a11877ca56973d3acbd901a364736f6c634300080f0033";

type BridgeTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BridgeTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BridgeToken__factory extends ContractFactory {
  constructor(...args: BridgeTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BridgeToken> {
    return super.deploy(overrides || {}) as Promise<BridgeToken>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): BridgeToken {
    return super.attach(address) as BridgeToken;
  }
  override connect(signer: Signer): BridgeToken__factory {
    return super.connect(signer) as BridgeToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BridgeTokenInterface {
    return new utils.Interface(_abi) as BridgeTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BridgeToken {
    return new Contract(address, _abi, signerOrProvider) as BridgeToken;
  }
}
