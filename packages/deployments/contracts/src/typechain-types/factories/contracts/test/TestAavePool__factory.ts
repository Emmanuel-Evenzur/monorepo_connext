/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  TestAavePool,
  TestAavePoolInterface,
} from "../../../contracts/test/TestAavePool";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "backUnbacked",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    name: "mintUnbacked",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_revert",
        type: "bool",
      },
    ],
    name: "setRevertCall",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523461001657610235908161001c8239f35b600080fdfe608080604052600436101561001357600080fd5b600090813560e01c90816369328dec1461015f5750806369a933a5146100e5578063d33d5c86146100b35763d65dc7a11461004d57600080fd5b346100b05760603660031901126100b0576100666101ce565b5060ff8154166100735780f35b60405162461bcd60e51b8152602060048201526015602482015274189858dad55b989858dad959081c995d995c9d1959605a1b6044820152606490fd5b80fd5b50346100b05760203660031901126100b0576004358015158091036100e15760ff8019835416911617815580f35b5080fd5b50346100b05760803660031901126100b0576100ff6101ce565b506101086101e9565b5060643561ffff8116036100b05760ff8154166101225780f35b60405162461bcd60e51b81526020600482015260156024820152741b5a5b9d155b989858dad959081c995d995c9d1959605a1b6044820152606490fd5b82346100b05760603660031901126100b05760ff9061017c6101ce565b506101856101e9565b5054166101985760206040516024358152f35b62461bcd60e51b81526020600482015260116024820152701dda5d1a191c985dc81c995d995c9d1959607a1b6044820152606490fd5b600435906001600160a01b03821682036101e457565b600080fd5b604435906001600160a01b03821682036101e45756fea2646970667358221220b9414ff6305629b9a325237f89985bc2c6e8f52f2d2d3a60070cf4647cd1922d64736f6c63430008110033";

type TestAavePoolConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestAavePoolConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestAavePool__factory extends ContractFactory {
  constructor(...args: TestAavePoolConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TestAavePool> {
    return super.deploy(overrides || {}) as Promise<TestAavePool>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TestAavePool {
    return super.attach(address) as TestAavePool;
  }
  override connect(signer: Signer): TestAavePool__factory {
    return super.connect(signer) as TestAavePool__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestAavePoolInterface {
    return new utils.Interface(_abi) as TestAavePoolInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestAavePool {
    return new Contract(address, _abi, signerOrProvider) as TestAavePool;
  }
}
