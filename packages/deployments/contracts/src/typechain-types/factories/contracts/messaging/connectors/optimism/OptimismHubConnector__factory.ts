/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  OptimismHubConnector,
  OptimismHubConnectorInterface,
} from "../../../../../contracts/messaging/connectors/optimism/OptimismHubConnector";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "_mirrorDomain",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_amb",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rootManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
      {
        internalType: "address",
        name: "_optimismPortal",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_gasCap",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Connector__processMessage_notUsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyOwner_notOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyProposed_notProposedOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__ownershipDelayElapsed_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_noOwnershipChange",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_noProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "TypedMemView__index_indexMoreThan32Bytes",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "loc",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "len",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "slice",
        type: "uint256",
      },
    ],
    name: "TypedMemView__index_overrun",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_previous",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_updated",
        type: "uint256",
      },
    ],
    name: "GasCapUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageProcessed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "encodedData",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previous",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "current",
        type: "address",
      },
    ],
    name: "MirrorConnectorUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "mirrorDomain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "amb",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "rootManager",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "mirrorConnector",
        type: "address",
      },
    ],
    name: "NewConnector",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "proposedOwner",
        type: "address",
      },
    ],
    name: "OwnershipProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "AMB",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIRROR_DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "OPTIMISM_PORTAL",
    outputs: [
      {
        internalType: "contract IOptimismPortal",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_MANAGER",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptProposedOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "delay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mirrorConnector",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "processMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "address",
            name: "target",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gasLimit",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct Types.WithdrawalTransaction",
        name: "_tx",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "_l2OutputIndex",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "version",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "stateRoot",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "messagePasserStorageRoot",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "latestBlockhash",
            type: "bytes32",
          },
        ],
        internalType: "struct Types.OutputRootProof",
        name: "_outputRootProof",
        type: "tuple",
      },
      {
        internalType: "bytes[]",
        name: "_withdrawalProof",
        type: "bytes[]",
      },
    ],
    name: "processMessageFromRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "processed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newlyProposed",
        type: "address",
      },
    ],
    name: "proposeNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proposed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposedTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounced",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "_encodedData",
        type: "bytes",
      },
    ],
    name: "sendMessage",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_gasCap",
        type: "uint256",
      },
    ],
    name: "setGasCap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
    ],
    name: "setMirrorConnector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_expected",
        type: "address",
      },
    ],
    name: "verifySender",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x61012034620002c257601f620018ac38819003918201601f1916830191906001600160401b03831184841017620002c7578160e09285926040958652833981010312620002c2576200005182620002dd565b602062000060818501620002dd565b906200006e848601620002ef565b6200007c60608701620002ef565b936200008b60808801620002ef565b9460c06200009c60a08a01620002ef565b980151946000549288519360018060a01b0398338a83167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a36001600160a01b031991821633176000908155600255600180548316905563ffffffff8381169690959087156200029157508a81169384156200025957987f4f9c27c2fe3f84576ea469d367d044da53c45e951617e8389f2b5ed8db9d25f0948c6060958f9b99958290859c9a967f877a02cb809da0364d23adca3cd50c451b53f279d3df632e1fc11eb66335bce59f6080528c60a05260c0528660e052169384928d8462000217575b519b168b5250505088880152888701521693a383600454918351928352820152a160045561010092168252516115a79182620003058339608051826105a2015260a0518281816103db0152818161051901528181610b370152610b8f015260c051828181610372015281816106870152611129015260e0518281816101f601526111600152518181816108fa0152610fdd0152f35b7fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc91856003549483519286168352820152a1161760035581388a8f8d62000182565b8c5162461bcd60e51b8152600481018b9052601160248201527032b6b83a3c903937b7ba26b0b730b3b2b960791b6044820152606490fd5b62461bcd60e51b8152600481018a9052600c60248201526b32b6b83a3c903237b6b0b4b760a11b6044820152606490fd5b600080fd5b634e487b7160e01b600052604160045260246000fd5b519063ffffffff82168203620002c257565b51906001600160a01b0382168203620002c25756fe6080604052600436101561001b575b361561001957600080fd5b005b60003560e01c806314168416146101bf5780633cf52ffb146101b657806348e6fa23146101ad5780634ff746f6146101a457806352a9674b1461019b5780635bd11efc146101925780635f61e3ec146101895780636a42b8f8146101805780637049138f14610177578063715018a61461016e5780637850b0201461016557806385734ee11461015c5780638da5cb5b14610153578063b1f8100d1461014a578063c1f0808a14610141578063c5b350df14610138578063cc3942831461012f578063d1851c9214610126578063d232c2201461011d578063d69f9d61146101145763db1b76590361000e5761010f610b66565b61000e565b5061010f610b20565b5061010f610af5565b5061010f610acb565b5061010f610aa1565b5061010f610a3d565b5061010f610a0b565b5061010f610953565b5061010f610929565b5061010f6108e3565b5061010f610884565b5061010f6107e8565b5061010f610717565b5061010f6106b6565b5061010f610670565b5061010f6105e4565b5061010f610584565b5061010f6104e4565b5061010f610321565b5061010f61021a565b5061010f6101d8565b60009103126101d357565b600080fd5b50346101d35760003660031901126101d357602060405163ffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b50346101d35760003660031901126101d3576020600254604051908152f35b50634e487b7160e01b600052604160045260246000fd5b67ffffffffffffffff811161026457604052565b61026c610239565b604052565b60c0810190811067ffffffffffffffff82111761026457604052565b90601f8019910116810190811067ffffffffffffffff82111761026457604052565b60209067ffffffffffffffff81116102cd575b601f01601f19160190565b6102d5610239565b6102c2565b81601f820112156101d3578035906102f1826102af565b926102ff604051948561028d565b828452602083830101116101d357816000926020809301838601378301015290565b5060403660031901126101d357600467ffffffffffffffff81358181116101d35761034f90369084016102da565b906024359081116101d35761036790369084016102da565b6001600160a01b03927f0000000000000000000000000000000000000000000000000000000000000000841633036104b1576103a66020845114610d29565b6040516327fba37b60e11b6020820152936103d6856103c88660248301610d5f565b03601f19810187528661028d565b6003547f00000000000000000000000000000000000000000000000000000000000000009190911691906001600160a01b031694610418825463ffffffff1690565b92803b156101d3577fdcaa37a042a0087de79018c629bbd29cee82ca80bd9be394e1696bf9e9355077966000809461046460405197889687958694633dbb202b60e01b86528501610d70565b03925af180156104a4575b61048b575b50610486604051928392339184610cda565b0390a1005b8061049861049e92610250565b806101c8565b38610474565b6104ac610d1c565b61046f565b60649060206040519162461bcd60e51b8352820152600c60248201526b10b937b7ba26b0b730b3b2b960a11b6044820152fd5b50346101d35760203660031901126101d35760043567ffffffffffffffff81116101d3576105169036906004016102da565b507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163303610559576040516316c2fdb560e21b8152600490fd5b606460405162461bcd60e51b815260206004820152600460248201526310a0a6a160e11b6044820152fd5b50346101d35760003660031901126101d357602060405163ffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b6001600160a01b038116036101d357565b35906105e2826105c6565b565b50346101d35760203660031901126101d357600435610602816105c6565b6000546001600160a01b03908116330361065e577fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc60406003549281519481851686521693846020820152a16001600160a01b03191617600355005b6040516311a8a1bb60e31b8152600490fd5b50346101d35760003660031901126101d3576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b50346101d35760003660031901126101d357602060405162093a808152f35b60809060431901126101d357604490565b9181601f840112156101d35782359167ffffffffffffffff83116101d3576020808501948460051b0101116101d357565b50346101d35760031960e0368201126101d35760043567ffffffffffffffff918282116101d35760c09082360301126101d3576040519061075782610271565b80600401358252602481013561076c816105c6565b602083015261077d604482016105d7565b6040830152606481013560608301526084810135608083015260a4810135908382116101d35760046107b292369201016102da565b60a08201526107c0366106d5565b9060c4359283116101d3576107dc6100199336906004016106e6565b92909160243590610fcf565b50346101d3576000806003193601126108815780546001600160a01b03908116330361065e5760025462093a80814203428111610874575b11156108625715610850576001541661083e5761083b6113a3565b80f35b6040516323295ef960e01b8152600490fd5b604051630e4b303f60e21b8152600490fd5b6040516324e0285f60e21b8152600490fd5b61087c610f5f565b610820565b80fd5b50346101d35760203660031901126101d357600054600435906001600160a01b0316330361065e577f877a02cb809da0364d23adca3cd50c451b53f279d3df632e1fc11eb66335bce560406004548151908152836020820152a1600455005b50346101d35760003660031901126101d3576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b50346101d35760003660031901126101d3576000546040516001600160a01b039091168152602090f35b50346101d35760203660031901126101d357600435610971816105c6565b6000546001600160a01b039190821633810361065e57826001549216809383161480610a00575b6109ee5782146109dc57426002556001600160a01b03191681176001557f6ab4d119f23076e8ad491bc65ce85f017fb0591dce08755ba8591059cc51737a600080a2005b604051634a2fb73f60e11b8152600490fd5b6040516311bc066560e11b8152600490fd5b506002541515610998565b50346101d35760203660031901126101d3576004356000526005602052602060ff604060002054166040519015158152f35b50346101d35760003660031901126101d3576001546001600160a01b0316338103610a8f5762093a806002544203428111610a82575b111561086257610019906113f3565b610a8a610f5f565b610a73565b6040516311a7f27160e11b8152600490fd5b50346101d35760003660031901126101d3576003546040516001600160a01b039091168152602090f35b50346101d35760003660031901126101d3576001546040516001600160a01b039091168152602090f35b50346101d35760003660031901126101d3576000546040516001600160a01b03909116158152602090f35b50346101d35760003660031901126101d3576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b50346101d35760203660031901126101d357600435610b84816105c6565b6001600160a01b03907f0000000000000000000000000000000000000000000000000000000000000000821633819003610c3b5760046020610bfc9260405192838092636e296e4560e01b82525afa908115610c2e575b600091610c00575b5060405192841693169290921481529081906020820190565b0390f35b610c21915060203d8111610c27575b610c19818361028d565b810190610d04565b38610be3565b503d610c0f565b610c36610d1c565b610bdb565b60405162461bcd60e51b81526020600482015260076024820152662162726964676560c81b6044820152606490fd5b60005b838110610c7d5750506000910152565b8181015183820152602001610c6d565b90602091610ca681518092818552858086019101610c6a565b601f01601f1916010190565b90610cca602091949394604084526040840190610c8d565b6001600160a01b03909416910152565b91610cca90610cf6604093969596606086526060860190610c8d565b908482036020860152610c8d565b908160209103126101d35751610d19816105c6565b90565b506040513d6000823e3d90fd5b15610d3057565b60405162461bcd60e51b8152602060048201526007602482015266042d8cadccee8d60cb1b6044820152606490fd5b906020610d19928181520190610c8d565b91610d9b63ffffffff9160409396959660018060a01b03168552606060208601526060850190610c8d565b9416910152565b908060209392818452848401376000828201840152601f01601f1916010190565b90808352602080930192838260051b850194846000925b858410610deb575050505050505090565b9091929394959681810384528735601e19843603018112156101d357830186810191903567ffffffffffffffff81116101d35780360383136101d357610e3688928392600195610da2565b990194019401929594939190610dda565b90610d199593610eae60a0610edc9397959760e08652805160e0870152600180831b038060208301511661010088015260408201511661012087015260608101516101408701526080810151610160870152015160c06101808601526101a0850190610c8d565b9560208401526040830190606080918035845260208101356020850152604081013560408501520135910152565b60c0818503910152610dc3565b15610ef057565b60405162461bcd60e51b815260206004820152601160248201527010b6b4b93937b91031b7b73732b1ba37b960791b6044820152606490fd5b15610f3057565b60405162461bcd60e51b8152602060048201526007602482015266085d185c99d95d60ca1b6044820152606490fd5b50634e487b7160e01b600052601160045260246000fd5b6001600160601b03908116601f190191908211610f8f57565b6105e2610f5f565b15610f9e57565b60405162461bcd60e51b81526020600482015260096024820152681c1c9bd8d95cdcd95960ba1b6044820152606490fd5b90936001600160a01b0392917f0000000000000000000000000000000000000000000000000000000000000000841690813b156101d3576110849661108d9461103c60a09461105496604051948580948193634870496f60e01b835260009e8f9889958c60048701610e47565b03925af1801561121c575b611209575b5001516112fb565b989392945050508461107c61107060035460018060a01b031690565b6001600160a01b031690565b911614610ee9565b82163014610f29565b61109a6064845114610d29565b6110d56110ab84516020860161144d565b6110cf6110c36001600160601b038360181c16610f76565b6001600160601b031690565b906114fd565b906111036110fe6110fa6110f3856000526005602052604060002090565b5460ff1690565b1590565b610f97565b61112761111a836000526005602052604060002090565b805460ff19166001179055565b7f00000000000000000000000000000000000000000000000000000000000000001690813b156112055760405163473ec9fd60e11b81527f000000000000000000000000000000000000000000000000000000000000000063ffffffff16600482015260248101919091527fb3abc57bfeebd2cac918901db582f71972a8e628bccf19f5ae3e3482b98a5ced936111e09390928290604490829084905af180156111f8575b6111e5575b50604051918291339083610cb2565b0390a1565b806104986111f292610250565b386111d1565b611200610d1c565b6111cc565b8280fd5b8061049861121692610250565b3861104c565b611224610d1c565b611047565b600319810191908211610f8f57565b90611242826102af565b61124f604051918261028d565b8281528092611260601f19916102af565b0190602036910137565b909160c0828403126101d3578151926020830151611287816105c6565b926040810151611296816105c6565b9260608201519260808301519260a08101519067ffffffffffffffff82116101d3570181601f820112156101d35780516112cf816102af565b926112dd604051948561028d565b818452602082840101116101d357610d199160208085019101610c6a565b90602063d764ad0b60e01b63ffffffff60e01b828501511603611373576113228351611229565b9061132c82611238565b9160005b81811061135f57505061134c929350808251830101910161126a565b90919260018060a01b0380911694169495565b858101602401518482018401528201611330565b6064906040519062461bcd60e51b82526004820152600960248201526810b9b2b632b1ba37b960b91b6044820152fd5b6000805490806001600160a01b0383167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a36001600160601b0360a01b809216815560025560015416600155565b60008054916001600160a01b039081169182918416907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a36001600160601b0360a01b80921617600055600060025560015416600155565b8181018082116114f0575b806040518092116114e8575b156114dd576001600160601b038281851694851491826114d1575b5050156114a2575060601b6bffffffffffffffffffffffff60601b161760181b90565b62461bcd60e51b815260206004820152600a602482015269085d1c9d5b98d85d195960b21b6044820152606490fd5b8116149050823861147f565b50505062ffffff1990565b506000611464565b6114f8610f5f565b611458565b9060208101808211611564575b6001600160601b0390818460181c168091116115355750600160ff1b6000191d9260781c1601511690565b9060849450604051936378218d2960e01b855260781c1660048401526024830152604482015260206064820152fd5b61156c610f5f565b61150a56fea26469706673582212203fb4510ce12624479da193f0a89ea703021ae5c442e414832724855a655dfaea64736f6c63430008110033";

type OptimismHubConnectorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OptimismHubConnectorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OptimismHubConnector__factory extends ContractFactory {
  constructor(...args: OptimismHubConnectorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _optimismPortal: PromiseOrValue<string>,
    _gasCap: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<OptimismHubConnector> {
    return super.deploy(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _optimismPortal,
      _gasCap,
      overrides || {}
    ) as Promise<OptimismHubConnector>;
  }
  override getDeployTransaction(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _optimismPortal: PromiseOrValue<string>,
    _gasCap: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _optimismPortal,
      _gasCap,
      overrides || {}
    );
  }
  override attach(address: string): OptimismHubConnector {
    return super.attach(address) as OptimismHubConnector;
  }
  override connect(signer: Signer): OptimismHubConnector__factory {
    return super.connect(signer) as OptimismHubConnector__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OptimismHubConnectorInterface {
    return new utils.Interface(_abi) as OptimismHubConnectorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OptimismHubConnector {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as OptimismHubConnector;
  }
}
