/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  PolygonSpokeConnector,
  PolygonSpokeConnectorInterface,
} from "../../../../../contracts/messaging/connectors/polygon/PolygonSpokeConnector";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "_mirrorDomain",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_amb",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rootManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_processGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_reserveGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_delayBlocks",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_merkle",
        type: "address",
      },
      {
        internalType: "address",
        name: "_watcherManager",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Connector__processMessage_notUsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyOwner_notOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyProposed_notProposedOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__ownershipDelayElapsed_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_noOwnershipChange",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_noProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "RateLimited__rateLimited_messageSendRateExceeded",
    type: "error",
  },
  {
    inputs: [],
    name: "TypedMemView__index_indexMoreThan32Bytes",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "loc",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "len",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "slice",
        type: "uint256",
      },
    ],
    name: "TypedMemView__index_overrun",
    type: "error",
  },
  {
    inputs: [],
    name: "TypedMemView__unsafeCopyTo_identityOOG",
    type: "error",
  },
  {
    inputs: [],
    name: "TypedMemView__unsafeCopyTo_invalidPointer",
    type: "error",
  },
  {
    inputs: [],
    name: "TypedMemView__unsafeCopyTo_nullPointer",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
    ],
    name: "AggregateRootReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
    ],
    name: "AggregateRootRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
    ],
    name: "AggregateRootVerified",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "updated",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "DelayBlocksUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
    ],
    name: "Dispatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "FundsWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageProcessed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "aggregateRoot",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "aggregateIndex",
        type: "uint256",
      },
    ],
    name: "MessageProven",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "encodedData",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previous",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "current",
        type: "address",
      },
    ],
    name: "MirrorConnectorUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "mirrorDomain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "amb",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "rootManager",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "mirrorConnector",
        type: "address",
      },
    ],
    name: "NewConnector",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "proposedOwner",
        type: "address",
      },
    ],
    name: "OwnershipProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "returnData",
        type: "bytes",
      },
    ],
    name: "Process",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "updater",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newRateLimit",
        type: "uint256",
      },
    ],
    name: "SendRateLimitUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "SenderAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "SenderRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "watcherManager",
        type: "address",
      },
    ],
    name: "WatcherManagerChanged",
    type: "event",
  },
  {
    inputs: [],
    name: "AMB",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MERKLE",
    outputs: [
      {
        internalType: "contract MerkleTreeManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIRROR_DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PROCESS_GAS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "RESERVE_GAS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_MANAGER",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptProposedOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
    ],
    name: "addSender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowlistedSenders",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "delay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "delayBlocks",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_destinationDomain",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "_recipientAddress",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_messageBody",
        type: "bytes",
      },
    ],
    name: "dispatch",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "fxChild",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fxRootTunnel",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "home",
    outputs: [
      {
        internalType: "contract IOutbox",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_potentialReplica",
        type: "address",
      },
    ],
    name: "isReplica",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastSentBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "localDomain",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "messages",
    outputs: [
      {
        internalType: "enum SpokeConnector.MessageStatus",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mirrorConnector",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "outboundRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "pendingAggregateRoots",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "processMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "stateId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "rootMessageSender",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "processMessageFromRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newlyProposed",
        type: "address",
      },
    ],
    name: "proposeNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proposed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposedTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "message",
            type: "bytes",
          },
          {
            internalType: "bytes32[32]",
            name: "path",
            type: "bytes32[32]",
          },
          {
            internalType: "uint256",
            name: "index",
            type: "uint256",
          },
        ],
        internalType: "struct SpokeConnector.Proof[]",
        name: "_proofs",
        type: "tuple[]",
      },
      {
        internalType: "bytes32",
        name: "_aggregateRoot",
        type: "bytes32",
      },
      {
        internalType: "bytes32[32]",
        name: "_aggregatePath",
        type: "bytes32[32]",
      },
      {
        internalType: "uint256",
        name: "_aggregateIndex",
        type: "uint256",
      },
    ],
    name: "proveAndProcess",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "provenAggregateRoots",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "provenMessageRoots",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rateLimitBlocks",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_fraudulentRoot",
        type: "bytes32",
      },
    ],
    name: "removePendingAggregateRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
    ],
    name: "removeSender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounced",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_encodedData",
        type: "bytes",
      },
    ],
    name: "send",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "sentMessageRoots",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_delayBlocks",
        type: "uint256",
      },
    ],
    name: "setDelayBlocks",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
    ],
    name: "setMirrorConnector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_rateLimit",
        type: "uint256",
      },
    ],
    name: "setRateLimitBlocks",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_watcherManager",
        type: "address",
      },
    ],
    name: "setWatcherManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_expected",
        type: "address",
      },
    ],
    name: "verifySender",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "watcherManager",
    outputs: [
      {
        internalType: "contract WatcherManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
    ],
    name: "withdrawFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x610160346200048e57620034ea38819003601f8101601f191683016001600160401b038111848210176200049357839282916040528339610140928391810103126200048e576200005081620004a9565b916200005f60208301620004a9565b926200006e60408401620004bb565b906200007d60608501620004bb565b946200008c60808601620004bb565b60a086015160c08701519160e08801519461010099620000ae8b8b01620004bb565b95620000bf610120809c01620004bb565b93600054604051903360018060a01b0382167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a36001600160a01b03199081163317600090815560025560018054909116905563ffffffff8516156200045d57506001600160a01b0383161562000424578992846080528360a0528060c0528260e05260018060a01b0382166200033e575b604080516001600160a01b0395861681529185166020830152919093169083015263ffffffff9081169216907f4f9c27c2fe3f84576ea469d367d044da53c45e951617e8389f2b5ed8db9d25f090606090a36003805460ff60a01b19169055600480546001600160a01b0319166001600160a01b03929092169190911790556001600755620cf84f8111156200030a57613a97821115620002d657865284526001600160a01b03168015620002a257855260085560018060a01b031660018060a01b03196010541617601055604051916130199384620004d18539608051848181610a3e015281816117bd01526122d6015260a0518481816108f70152611567015260c05184610bd2015260e0518461041801525183818161067801528181610c6a015281816110d901526118350152518281816115ce015261239001525181818161050101526123b80152f35b60405162461bcd60e51b815260206004820152600c60248201526b217a65726f206d65726b6c6560a01b6044820152606490fd5b60405162461bcd60e51b815260206004820152600c60248201526b21726573657276652067617360a01b6044820152606490fd5b60405162461bcd60e51b815260206004820152600c60248201526b2170726f636573732067617360a01b6044820152606490fd5b600354604080516001600160a01b0380841682528516602082015292955090917fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc9190a16001600160a01b0319166001600160a01b038281169190911760035560115493908416620003cc576001600160a01b03199093166001600160a01b03821617601155899262000154565b60405162461bcd60e51b815260206004820152602a60248201527f4678426173654368696c6454756e6e656c3a20524f4f545f54554e4e454c5f4160448201526913149150511657d4d15560b21b6064820152608490fd5b60405162461bcd60e51b815260206004820152601160248201527032b6b83a3c903937b7ba26b0b730b3b2b960791b6044820152606490fd5b62461bcd60e51b815260206004820152600c60248201526b32b6b83a3c903237b6b0b4b760a11b6044820152606490fd5b600080fd5b634e487b7160e01b600052604160045260246000fd5b519063ffffffff821682036200048e57565b51906001600160a01b03821682036200048e5756fe6080604052600436101561001b575b361561001957600080fd5b005b60003560e01c806314168416146103fa5780631eeaabea146103f157806325e3beda146103e85780632bb1ae7c146103df5780632bbd59ca146103d6578063301f07c3146103cd5780633cf52ffb146103c45780633f4ba83a146103bb578063450d11f0146103b25780634ff746f6146103a9578063508a109b146103a05780635190bc531461039757806352a9674b14610319578063572386ca1461038e578063579c1618146103855780635bd11efc1461037c5780635c975abb146103735780635f61e3ec1461036a5780636159ada11461036157806365eaf11b1461035857806368742da61461034f5780636a42b8f8146103465780636b04a9331461033d578063715018a6146103345780637f1e9cb01461032b5780638456cb59146103225780638d3638f4146103195780638da5cb5b1461031057806398c9f2b9146103075780639a7c4b71146102fe5780639d3117c7146102f55780639fa92f9d146102ec578063a01892a5146102e3578063a792c29b146102da578063ad9c0c2e146102d1578063b1f8100d146102c8578063b2f87643146102bf578063b697f531146102b6578063b95a2001146102ad578063c5b350df146102a4578063cc3942831461029b578063d1851c9214610292578063d232c22014610289578063d2a3cc7114610280578063d69f9d6114610277578063d7d317b31461026e578063d88beda214610265578063db1b76591461025c578063e0fed010146102535763fa31de010361000e5761024e611714565b61000e565b5061024e611617565b5061024e6115f1565b5061024e6115b5565b5061024e611596565b5061024e611550565b5061024e61146f565b5061024e611444565b5061024e61141a565b5061024e6113f0565b5061024e61133a565b5061024e611301565b5061024e611278565b5061024e611205565b5061024e611151565b5061024e611132565b5061024e611108565b5061024e6110c2565b5061024e6110a6565b5061024e611079565b5061024e61100f565b5061024e610fdd565b5061024e610fb3565b5061024e610a20565b5061024e610f08565b5061024e610ede565b5061024e610eb7565b5061024e610ded565b5061024e610dce565b5061024e610cd7565b5061024e610c41565b5061024e610c01565b5061024e610bbb565b5061024e610b94565b5061024e610ab3565b5061024e610a94565b5061024e610a62565b5061024e6109f0565b5061024e610970565b5061024e6108e5565b5061024e6108bb565b5061024e61084a565b5061024e61082b565b5061024e6107f9565b5061024e6107c0565b5061024e610615565b5061024e6104e8565b5061024e610441565b503461043c57600036600319011261043c57602060405163ffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b600080fd5b503461043c57602036600319011261043c57600054600435906001600160a01b031633036104d65760085481146104a257807f8bd16320f3b60336ed5fd2a770eb7453e7e71cfef4462addffd7ae9dfe201c8e6020604051338152a2600855005b60405162461bcd60e51b815260206004820152600c60248201526b2164656c6179426c6f636b7360a01b6044820152606490fd5b6040516311a8a1bb60e31b8152600490fd5b503461043c57600036600319011261043c5760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b50634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff82111761055d57604052565b610565610524565b604052565b60209067ffffffffffffffff8111610588575b601f01601f19160190565b610590610524565b61057d565b9291926105a18261056a565b916105af604051938461053b565b82948184528183011161043c578281602093846000960137010152565b9080601f8301121561043c578160206105e793359101610595565b90565b602060031982011261043c576004359067ffffffffffffffff821161043c576105e7916004016105cc565b5061061f366105ea565b6106276119ef565b6006546005548101809111610793575b4310610781574360065560405163ebf0c71760e01b81527fdcaa37a042a0087de79018c629bbd29cee82ca80bd9be394e1696bf9e9355077916020826004817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa918215610774575b600092610744575b506106da6106d46106cd84600052600c602052604060002090565b5460ff1690565b15611b0d565b61072e61072160405193610707856106f9836020830160209181520190565b03601f19810187528661053b565b6107118486612489565b600052600c602052604060002090565b805460ff19166001179055565b61073f604051928392339184611b4d565b0390a1005b61076691925060203d811161076d575b61075e818361053b565b810190611ad0565b90386106b2565b503d610754565b61077c61195a565b6106aa565b6040516346cf2af160e11b8152600490fd5b61079b611adf565b610637565b600311156107aa57565b634e487b7160e01b600052602160045260246000fd5b503461043c57602036600319011261043c57600435600052600f60205260ff6040600020541660405160038210156107aa576020918152f35b503461043c57602036600319011261043c57600435600052600a602052602060ff604060002054166040519015158152f35b503461043c57600036600319011261043c576020600254604051908152f35b503461043c576000806003193601126108b85780546001600160a01b031633036104d65761087661190e565b61087e61190e565b60ff60a01b19600354166003557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6020604051338152a180f35b80fd5b503461043c57600036600319011261043c576010546040516001600160a01b039091168152602090f35b503461043c576108f4366105ea565b507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163303610937576040516316c2fdb560e21b8152600490fd5b606460405162461bcd60e51b815260206004820152600460248201526310a0a6a160e11b6044820152fd5b906044916104441161043c57565b503461043c5761046036600319011261043c5760043567ffffffffffffffff80821161043c573660238301121561043c57816004013590811161043c573660248260051b8401011161043c57610019916109c936610962565b906104443592602480359201611bee565b600435906001600160a01b038216820361043c57565b503461043c57602036600319011261043c576020610a0c6109da565b6040516001600160a01b0390911630148152f35b503461043c57600036600319011261043c57602060405163ffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b503461043c57602036600319011261043c57600435600052600c602052602060ff604060002054166040519015158152f35b503461043c57600036600319011261043c576020600554604051908152f35b503461043c57602036600319011261043c57610acd6109da565b6000546001600160a01b0390811633036104d657600354907fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc60408281519581861687521694856020820152a16001600160a01b03199182168317600355601154908116610b3c571617601155005b60405162461bcd60e51b815260206004820152602a60248201527f4678426173654368696c6454756e6e656c3a20524f4f545f54554e4e454c5f4160448201526913149150511657d4d15560b21b6064820152608490fd5b503461043c57600036600319011261043c57602060ff60035460a01c166040519015158152f35b503461043c57600036600319011261043c576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b503461043c57602036600319011261043c576001600160a01b03610c236109da565b16600052600d602052602060ff604060002054166040519015158152f35b503461043c57600036600319011261043c5760405163ebf0c71760e01b815260209081816004817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa908115610cca575b600091610cad575b50604051908152f35b610cc49150823d811161076d5761075e818361053b565b38610ca4565b610cd261195a565b610c9c565b503461043c57602036600319011261043c57610cf16109da565b600080549091906001600160a01b0390811633036104d6571647478111610d8957610d7e81610d6e858080807feaff4b37086828766ad3268786972c0cd24259d4c87a80f9d3963a3c3d999b0d97895af13d15610d84573d610d528161056a565b90610d60604051928361053b565b81528760203d92013e611a5e565b6040519081529081906020820190565b0390a280f35b611a5e565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e63650000006044820152606490fd5b503461043c57600036600319011261043c57602060405162093a808152f35b503461043c57602036600319011261043c5760008054600435906001600160a01b031633036104d657610e1e61190e565b8082526009602052604082205415610e7a57610e74817ff51534ecf10a58db36ce4f5180f59deddf3b3eb7c5e7454e602c2f80a40cc7399284526009602052836040812055604051918291829190602083019252565b0390a180f35b60405162461bcd60e51b8152602060048201526015602482015274616767726567617465526f6f74202165786973747360581b6044820152606490fd5b503461043c576000806003193601126108b85780546001600160a01b031633036104d65780f35b503461043c57600036600319011261043c576011546040516001600160a01b039091168152602090f35b503461043c576000806003193601126108b8576024602060018060a01b0360045416604051928380926384785ecd60e01b82523360048301525afa8015610fa6575b8290610f66575b610f5b9150611967565b610f6361199e565b80f35b506020813d8211610f9e575b81610f7f6020938361053b565b81010312610f9a57518015158103610f9a57610f5b90610f51565b5080fd5b3d9150610f72565b610fae61195a565b610f4a565b503461043c57600036600319011261043c576000546040516001600160a01b039091168152602090f35b503461043c57602036600319011261043c57600435600052600b602052602060ff604060002054166040519015158152f35b503461043c57606036600319011261043c576024356001600160a01b038116810361043c576044359067ffffffffffffffff9081831161043c573660238401121561043c57826004013591821161043c57366024838501011161043c5760246100199301906124fc565b503461043c57602036600319011261043c5760043560005260096020526020604060002054604051908152f35b503461043c57600036600319011261043c576020604051308152f35b503461043c57600036600319011261043c576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b503461043c57600036600319011261043c576004546040516001600160a01b039091168152602090f35b503461043c57600036600319011261043c576020600854604051908152f35b503461043c57602036600319011261043c5761116b6109da565b6000546001600160a01b03919082163381036104d6578260015492168093831614806111fa575b6111e85782146111d657426002556001600160a01b03191681176001557f6ab4d119f23076e8ad491bc65ce85f017fb0591dce08755ba8591059cc51737a600080a2005b604051634a2fb73f60e11b8152600490fd5b6040516311bc066560e11b8152600490fd5b506002541515611192565b503461043c57602036600319011261043c5761121f6109da565b6000546001600160a01b039190821633036104d6577f384859c5ef5fafac31e8bc92ce7fb48b1f2c74c4dd5e212eb84ec202fa5d9fad916020911680600052600d8252604060002060ff198154169055604051908152a1005b503461043c57602036600319011261043c576112926109da565b6000546001600160a01b039190821633036104d6577fd65eca5d561d3a4568c87b9b13ced4ab52a69edadfdfdb22d76bc595f36d7d87916020911680600052600d82526040600020600160ff19825416179055604051908152a1005b6004359063ffffffff8216820361043c57565b503461043c57602036600319011261043c57602063ffffffff806113236112ee565b16600052600e825260406000205416604051908152f35b503461043c576000806003193601126108b8576001546001600160a01b03908181163381036113de5762093a8060025442034281116113d1575b11156113bf578084549384167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08680a36001600160a01b031992831617835560028390551660015580f35b6040516324e0285f60e21b8152600490fd5b6113d9611adf565b611374565b6040516311a7f27160e11b8152600490fd5b503461043c57600036600319011261043c576003546040516001600160a01b039091168152602090f35b503461043c57600036600319011261043c576001546040516001600160a01b039091168152602090f35b503461043c57600036600319011261043c576000546040516001600160a01b03909116158152602090f35b503461043c57602036600319011261043c576114896109da565b6000546001600160a01b0390811633036104d6576004548282169116811461150b577fc16d059e43d7f8e29ccb4e001a2f249d3c59e274925d6a6bc3912943441d9f6c916114f161073f9260018060a01b03166001600160601b0360a01b6004541617600455565b6040516001600160a01b0390911681529081906020820190565b60405162461bcd60e51b815260206004820152601760248201527f616c72656164792077617463686572206d616e616765720000000000000000006044820152606490fd5b503461043c57600036600319011261043c576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b503461043c57600036600319011261043c576020600654604051908152f35b503461043c57600036600319011261043c5760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b503461043c57602036600319011261043c5761160b6109da565b50602060405160008152f35b503461043c57602036600319011261043c57600054600435906001600160a01b031633036104d657600554811461167e576040817f8e7fa5e406cb856aab05575e45ea011c6748376cc1b5229e3d67b92986406a15926005558151903382526020820152a1005b60405162461bcd60e51b815260206004820152600f60248201526e085b995dc81c985d19481b1a5b5a5d608a1b6044820152606490fd5b60005b8381106116c85750506000910152565b81810151838201526020016116b8565b906020916116f1815180928185528580860191016116b5565b601f01601f1916010190565b6040906105e79392815281602082015201906116d8565b503461043c57606036600319011261043c5761172e6112ee565b60443567ffffffffffffffff811161043c5761174e9036906004016105cc565b33600052600d60205260409160ff836000205416156118db5790816117866117e19363ffffffff16600052600e602052604060002090565b906117b6611798835463ffffffff1690565b926117a284611b77565b63ffffffff1663ffffffff19825416179055565b60243591337f0000000000000000000000000000000000000000000000000000000000000000612ab7565b9061189782516020840120917f40f08ee347fc927ae45902edc87debb024aab1a311943731968607f603f2152f8151632d287e4360e01b815282818061182f88600483019190602083019252565b038160007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af180156118ce575b600091829161189b575b5061187a90611baf565b61188a8785519384938985611bcb565b0390a151928392836116fd565b0390f35b61187a92506118c09150843d86116118c7575b6118b8818361053b565b810190611b99565b9091611870565b503d6118ae565b6118d661195a565b611866565b825162461bcd60e51b815260206004820152600c60248201526b08585b1b1bdddb1a5cdd195960a21b6044820152606490fd5b60ff60035460a01c161561191e57565b60405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606490fd5b506040513d6000823e3d90fd5b1561196e57565b60405162461bcd60e51b815260206004820152600860248201526710bbb0ba31b432b960c11b6044820152606490fd5b6119a66119ef565b6119ae6119ef565b6003805460ff60a01b1916600160a01b1790556040513381527f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25890602090a1565b60ff60035460a01c166119fe57565b60405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606490fd5b90611a4e6020919493946040845260408401906116d8565b6001600160a01b03909416910152565b15611a6557565b60405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d617920686176652072657665727465640000000000006064820152608490fd5b9081602091031261043c575190565b50634e487b7160e01b600052601160045260246000fd5b91908201809211611b0357565b611b0b611adf565b565b15611b1457565b60405162461bcd60e51b81526020600482015260116024820152701c9bdbdd08185b1c9958591e481cd95b9d607a1b6044820152606490fd5b91611a4e90611b696040939695966060865260608601906116d8565b9084820360208601526116d8565b60019063ffffffff809116908114611b8d570190565b611b95611adf565b0190565b919082604091031261043c576020825192015190565b600019810191908211611b0357565b91908203918211611b0357565b90926080926105e7959483526020830152604082015281606082015201906116d8565b9492919093611bfb6119ef565b600260075414611d4557611c8761072187611c7788946002600755611c21861515611d8a565b611c3e611c37611c318886611dc0565b80611e15565b3691610595565b97611c70895199611c578960209c8d8094012097611dc0565b018d611c676104209a8b92611dc0565b01359086611edc565b9788611f4d565b600052600f602052604060002090565b60015b8563ffffffff918883821683811015611cf55787611c7788611ce8858a611cdf878b611cc6611c37611c3160019f9c6107219d611cee9f611df2565b89815191012098611cd8838388611df2565b0194611df2565b01359085611edc565b14611e48565b0116611c8a565b505050505050505060005b63ffffffff9081811684811015611d355790611d2d611d28611c37611c31600195898b611df2565b6122b6565b500116611d00565b505050915050611b0b6001600755565b60405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b15611d9157565b60405162461bcd60e51b81526020600482015260076024820152662170726f6f667360c81b6044820152606490fd5b9015611ddc5780359061043e198136030182121561043c570190565b634e487b7160e01b600052603260045260246000fd5b9190811015611ddc5760051b8101359061043e198136030182121561043c570190565b903590601e198136030182121561043c570180359067ffffffffffffffff821161043c5760200191813603831361043c57565b15611e4f57565b60405162461bcd60e51b815260206004820152600b60248201526a085cda185c9959149bdbdd60aa1b6044820152606490fd5b9190604051926104009081850185811067ffffffffffffffff821117611ecf575b6040528491810192831161043c57905b828210611ebf57505050565b8135815260209182019101611eb3565b611ed7610524565b611ea3565b91909180600052600f60205260ff6040600020541660038110156107aa57611f1257611f0c6105e7933690611e82565b906127ae565b60405162461bcd60e51b8152602060048201526013602482015272214d6573736167655374617475732e4e6f6e6560681b6044820152606490fd5b9192909282600052600b60205260ff6040600020541661200e57611f8682611f808693611f79856120a3565b3690611e82565b856127ae565b03611fd357611fce7f7ec1ea51fe3db53e55ed9d922854bc2156f467ff2f87d74e2086dae2c84a88a89183600052600b602052610d6e6040600020600160ff19825416179055565b0390a3565b60405162461bcd60e51b81526020600482015260136024820152721a5b9d985b1a59081a5b989bdd5b99149bdbdd606a1b6044820152606490fd5b50505050565b1561201b57565b60405162461bcd60e51b81526020600482015260146024820152731859d9dc9959d85d19549bdbdd0808595e1a5cdd60621b6044820152606490fd5b1561205e57565b60405162461bcd60e51b815260206004820152601760248201527f616767726567617465526f6f74202176657269666965640000000000000000006044820152606490fd5b80156121535760ff6120bf82600052600a602052604060002090565b54166121505761214d816121016120f76120e56000956000526009602052604060002090565b546120f1811515612014565b43611bbe565b6008541115612057565b61211861072182600052600a602052604060002090565b807f36b314aba9f663b4d3ef3288ae489341cc5e6a2725a05fa2b72df7a27e03f42a8480a26000526009602052604060002090565b55565b50565b60405162461bcd60e51b8152602060048201526013602482015272616767726567617465526f6f7420656d70747960681b6044820152606490fd5b1561219557565b60405162461bcd60e51b815260206004820152600c60248201526b10b232b9ba34b730ba34b7b760a11b6044820152606490fd5b156121d057565b60405162461bcd60e51b815260206004820152600760248201526610b83937bb32b760c91b6044820152606490fd5b1561220657565b606460405162461bcd60e51b81526020600482015260046024820152632167617360e01b6044820152fd5b60405190610120820182811067ffffffffffffffff82111761225f575b604052610100808352366020840137565b612267610524565b61224e565b90926105e7949360809363ffffffff8092168452166020830152604082015281606082015201906116d8565b6105e7939260609282521515602082015281604082015201906116d8565b80516122c491602001612bb4565b906123016122d183612ea9565b60e01c7f000000000000000000000000000000000000000000000000000000000000000063ffffffff161461218e565b7fd42de95a9b26f1be134c8ecce389dc4fcfa18753d01661b7b361233569e8fe486124726001600160601b03808560181c16908560781c16209361236660016123576106cd88600052600f602052604060002090565b612360816107a0565b146121c9565b61238a61237d86600052600f602052604060002090565b805460ff19166002179055565b5a6123e87f0000000000000000000000000000000000000000000000000000000000000000916123e26123dd7f000000000000000000000000000000000000000000000000000000000000000085611af6565b611baf565b106121ff565b6124006123f483612d93565b6001600160a01b031690565b612408612231565b5061246d61241584612df2565b60e01c61245f61242486612e4b565b60e01c9561244261243d61243783612d34565b92612b1b565b612f07565b9060405197889463ab2dc3f560e01b60208701526024860161226c565b03601f19810185528461053b565b612b47565b93612484829560405193849384612298565b0390a1565b90516124c8576124847f8c5261668696ce22758910d05bab8f186d6eb247ceac2af2e82c7dc17669b036916040519182916020835260208301906116d8565b60405162461bcd60e51b815260206004820152600c60248201526b042c8c2e8c240d8cadccee8d60a31b6044820152606490fd5b6010546001600160a01b03939192908416330361261b5761251e913691610595565b9180601154169116036125c2576020815103612593576124847fb3abc57bfeebd2cac918901db582f71972a8e628bccf19f5ae3e3482b98a5ced91612573815160208301519060208110612581575b506126ac565b604051918291339083611a36565b6000199060200360031b1b163861256d565b60405162461bcd60e51b8152602060048201526007602482015266042d8cadccee8d60cb1b6044820152606490fd5b60405162461bcd60e51b815260206004820152602b60248201527f4678426173654368696c6454756e6e656c3a20494e56414c49445f53454e444560448201526a1497d19493d357d493d3d560aa1b6064820152608490fd5b60405162461bcd60e51b815260206004820152602160248201527f4678426173654368696c6454756e6e656c3a20494e56414c49445f53454e44456044820152602960f91b6064820152608490fd5b1561267157565b60405162461bcd60e51b81526020600482015260136024820152723937b7ba1030b63932b0b23c90383937bb32b760691b6044820152606490fd5b8015612778576126c6816000526009602052604060002090565b5461273c576124848161271661271161270d6106cd7f84ef18531155afdb0e64ff905d67044ae3aac63a6fba4661cfd9c4c14f289bc896600052600a602052604060002090565b1590565b61266a565b4361272b826000526009602052604060002090565b556040519081529081906020820190565b60405162461bcd60e51b8152602060048201526014602482015273726f6f7420616c72656164792070656e64696e6760601b6044820152606490fd5b60405162461bcd60e51b815260206004820152600e60248201526d6e657720726f6f7420656d70747960901b6044820152606490fd5b906103e06020916005938386861b169081528151908403526040946000948686206002831615821b90818703528584015190528686206004831615821b90818703528784015190528686206008831615821b9081870352606084015190528686206010831615821b90818703526080840151905286862085831615821b908187035260a0840151905286862087831615821b908187035260c084015190528686206080831615821b908187035260e0840151905286862061010080841615831b918288035284015190528686206102009081841615831b90818803526101208501519052878720610400841615831b90818803526101408501519052878720610800841615831b90818803526101608501519052878720611000841615831b90818803526101808501519052878720612000841615831b90818803526101a08501519052878720614000841615831b90818803526101c08501519052878720618000841615831b90818803526101e085015190528787209062010000841615831b9182880352840151905286862062020000831615821b9081870352610220840151905286862062040000831615821b9081870352610240840151905286862062080000831615821b9081870352610260840151905286862062100000831615821b9081870352610280840151905286862062200000831615821b90818703526102a0840151905286862062400000831615821b90818703526102c0840151905286862062800000831615821b90818703526102e084015190528686206301000000831615821b908187035261030084015190528686206302000000831615821b908187035261032084015190528686206304000000831615821b908187035261034084015190528686206308000000831615821b908187035261036084015190528686206310000000831615821b908187035261038084015190528686206320000000831615821b90818703526103a084015190528686206340000000831615821b90818703526103c084015190526380000000878720921615901b80940352015190522090565b9490936105e794606c9460405197889563ffffffff60e01b9384809360e01b166020890152602488015260e01b16604486015260e01b166048840152604c830152612b0b81518092602086860191016116b5565b810103604c81018452018261053b565b6105e7906001600160601b038160181c1690604b19820191821115612cce57612b42611adf565b612cce565b9092919260008060405195610120870187811067ffffffffffffffff821117612ba7575b604052610100938488528260208901968636893760208451940192f1913d91808311612b9e575b506000908286523e9190565b91506000612b92565b612baf610524565b612b6b565b818101808211612c57575b80604051809211612c4f575b15612c44576001600160601b03828185169485149182612c38575b505015612c09575060601b6bffffffffffffffffffffffff60601b161760181b90565b62461bcd60e51b815260206004820152600a602482015269085d1c9d5b98d85d195960b21b6044820152606490fd5b81161490508238612be6565b50505062ffffff1990565b506000612bcb565b612c5f611adf565b612bbf565b6001600160601b0380841693908316929084149081612cc4575b5015612c925760601b1760601b1760181b90565b60405162461bcd60e51b815260206004820152600a602482015269085d1c9d5b98d85d195960b21b6044820152606490fd5b9050821438612c7e565b906001600160601b0391828160781c1692604c840193848111612d27575b81604c8583010193848711612d1a575b60181c16011610612d10576105e791612bb4565b505062ffffff1990565b612d22611adf565b612cfc565b612d2f611adf565b612cec565b6001600160601b03808260181c1680602411612d63575060789190911c1660040151600160ff1b6000191d1690565b60849291604051926378218d2960e01b845260781c16600483015260248201526004604482015260206064820152fd5b6001600160601b03808260181c1680604c11612dc2575060789190911c16602c0151600160ff1b6000191d1690565b60849291604051926378218d2960e01b845260781c1660048301526024820152602c604482015260206064820152fd5b6001600160601b03808260181c1680600411612e1b5750600160ff1b601f1d9160781c16511690565b60849291604051926378218d2960e01b845260781c16600483015260248201526000604482015260046064820152fd5b6001600160601b03808260181c1680602811612e79575060789190911c1660240151600160ff1b601f1d1690565b60849291604051926378218d2960e01b845260781c16600483015260248201526024604482015260046064820152fd5b6001600160601b03808260181c1680602c11612ed7575060789190911c1660280151600160ff1b601f1d1690565b60849291604051926378218d2960e01b845260781c16600483015260248201526028604482015260046064820152fd5b906001600160601b03808360181c169060405193602085019162ffffff1980831614612fa157612f3682612fb0565b612f8f578260405111612f8957838381612f57938560781c1660045afa1590565b612f7757612f6991839160d81c612c64565b506020818401016040528252565b604051632af1bd9b60e21b8152600490fd5b60206060fd5b604051632ee0949160e11b8152600490fd5b63148d513360e21b8652600486fd5b64ffffffffff8160d81c14612fdd576001600160601b036040519181808260181c169160781c1601161190565b5060019056fea264697066735822122057c727f8b06c4d09b4a8b671490899de6151752f6daf59c3fa9f633bfe89d98f64736f6c63430008110033";

type PolygonSpokeConnectorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PolygonSpokeConnectorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PolygonSpokeConnector__factory extends ContractFactory {
  constructor(...args: PolygonSpokeConnectorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _processGas: PromiseOrValue<BigNumberish>,
    _reserveGas: PromiseOrValue<BigNumberish>,
    _delayBlocks: PromiseOrValue<BigNumberish>,
    _merkle: PromiseOrValue<string>,
    _watcherManager: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PolygonSpokeConnector> {
    return super.deploy(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _processGas,
      _reserveGas,
      _delayBlocks,
      _merkle,
      _watcherManager,
      overrides || {}
    ) as Promise<PolygonSpokeConnector>;
  }
  override getDeployTransaction(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _processGas: PromiseOrValue<BigNumberish>,
    _reserveGas: PromiseOrValue<BigNumberish>,
    _delayBlocks: PromiseOrValue<BigNumberish>,
    _merkle: PromiseOrValue<string>,
    _watcherManager: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _processGas,
      _reserveGas,
      _delayBlocks,
      _merkle,
      _watcherManager,
      overrides || {}
    );
  }
  override attach(address: string): PolygonSpokeConnector {
    return super.attach(address) as PolygonSpokeConnector;
  }
  override connect(signer: Signer): PolygonSpokeConnector__factory {
    return super.connect(signer) as PolygonSpokeConnector__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PolygonSpokeConnectorInterface {
    return new utils.Interface(_abi) as PolygonSpokeConnectorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PolygonSpokeConnector {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as PolygonSpokeConnector;
  }
}
