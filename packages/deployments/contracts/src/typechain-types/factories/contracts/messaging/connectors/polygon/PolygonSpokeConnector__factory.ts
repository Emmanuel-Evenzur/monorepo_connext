/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  PolygonSpokeConnector,
  PolygonSpokeConnectorInterface,
} from "../../../../../contracts/messaging/connectors/polygon/PolygonSpokeConnector";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "_mirrorDomain",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_amb",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rootManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_merkle",
        type: "address",
      },
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_mirrorGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_processGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_reserveGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_delayBlocks",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_watcherManager",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ProposedOwnable__acceptProposedOwner_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyOwner_notOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyProposed_notProposedOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_noOwnershipChange",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_noProposal",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "current",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "pending",
        type: "bytes32",
      },
    ],
    name: "AggregateRootsUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
    ],
    name: "Dispatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageProcessed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previous",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "current",
        type: "address",
      },
    ],
    name: "MirrorConnectorUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "previous",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "current",
        type: "uint256",
      },
    ],
    name: "MirrorGasUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "mirrorDomain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "amb",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "rootManager",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "mirrorConnector",
        type: "address",
      },
    ],
    name: "NewConnector",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "proposedOwner",
        type: "address",
      },
    ],
    name: "OwnershipProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "returnData",
        type: "bytes",
      },
    ],
    name: "Process",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "SenderAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "SenderRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "watcherManager",
        type: "address",
      },
    ],
    name: "WatcherManagerChanged",
    type: "event",
  },
  {
    inputs: [],
    name: "AMB",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MERKLE",
    outputs: [
      {
        internalType: "contract MerkleTreeManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIRROR_DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PROCESS_GAS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "RESERVE_GAS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_MANAGER",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptProposedOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
    ],
    name: "addSender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "aggregateRootCurrent",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "aggregateRootPending",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "aggregateRootPendingBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "delay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "delayBlocks",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_destinationDomain",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "_recipientAddress",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_messageBody",
        type: "bytes",
      },
    ],
    name: "dispatch",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "fxChild",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fxRootTunnel",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "home",
    outputs: [
      {
        internalType: "contract IOutbox",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isPaused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_potentialReplica",
        type: "address",
      },
    ],
    name: "isReplica",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "localDomain",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "messages",
    outputs: [
      {
        internalType: "enum SpokeConnector.MessageStatus",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mirrorConnector",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mirrorGas",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "outboundRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "processMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "stateId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "rootMessageSender",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "processMessageFromRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newlyProposed",
        type: "address",
      },
    ],
    name: "proposeNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proposed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposedTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "message",
            type: "bytes",
          },
          {
            internalType: "bytes32[32]",
            name: "path",
            type: "bytes32[32]",
          },
          {
            internalType: "uint256",
            name: "index",
            type: "uint256",
          },
        ],
        internalType: "struct SpokeConnector.Proof[]",
        name: "_proofs",
        type: "tuple[]",
      },
      {
        internalType: "bytes32[32]",
        name: "_aggregatorPath",
        type: "bytes32[32]",
      },
      {
        internalType: "uint256",
        name: "_aggregatorIndex",
        type: "uint256",
      },
    ],
    name: "proveAndProcess",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "provenRoots",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
    ],
    name: "removeSender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounced",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "send",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_current",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_pending",
        type: "bytes32",
      },
    ],
    name: "setAggregateRoots",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_delayBlocks",
        type: "uint256",
      },
    ],
    name: "setDelayBlocks",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_fxRootTunnel",
        type: "address",
      },
    ],
    name: "setFxRootTunnel",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
    ],
    name: "setMirrorConnector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_mirrorGas",
        type: "uint256",
      },
    ],
    name: "setMirrorGas",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_watcherManager",
        type: "address",
      },
    ],
    name: "setWatcherManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "paused",
        type: "bool",
      },
    ],
    name: "setWatcherPaused",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_expected",
        type: "address",
      },
    ],
    name: "verifySender",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "whitelistedSenders",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6101606040523480156200001257600080fd5b50604051620040433803806200404383398101604081905262000035916200043d565b888b8b828b8b8b8b8b8b8b8b808b8b8b8b8a8a6200005333620002f4565b8563ffffffff166000036200009e5760405162461bcd60e51b815260206004820152600c60248201526b32b6b83a3c903237b6b0b4b760a11b60448201526064015b60405180910390fd5b6001600160a01b038316620000ea5760405162461bcd60e51b815260206004820152601160248201527032b6b83a3c903937b7ba26b0b730b3b2b960791b604482015260640162000095565b63ffffffff8087166080526001600160a01b0380861660a05284811660c05290861660e0528216156200012257620001228262000353565b801562000134576200013481620003bc565b604080516001600160a01b0386811682528581166020830152841681830152905163ffffffff87811692908916917f4f9c27c2fe3f84576ea469d367d044da53c45e951617e8389f2b5ed8db9d25f09181900360600190a35050600580546001600160a01b0319166001600160a01b039690961695909517909455505060016006555050620cf850841015620001fc5760405162461bcd60e51b815260206004820152600c60248201526b2170726f636573732067617360a01b604482015260640162000095565b613a988310156200023f5760405162461bcd60e51b815260206004820152600c60248201526b21726573657276652067617360a01b604482015260640162000095565b6101208490526101408390526001600160a01b038716156200026257866200028f565b6040516200027090620003fd565b604051809103906000f0801580156200028d573d6000803e3d6000fd5b505b6001600160a01b0316610100816001600160a01b03168152505081600781905550505050505050505050505080600f60016101000a8154816001600160a01b0302191690836001600160a01b03160217905550505050505050505050505050620004fc565b600080546001600160a01b038381166001600160a01b0319808416821785556002859055600180549091169055604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b60045460408051918252602082018390527f34b09b90f4cfa8747776f5cffd7d53ce7863a9b1f1fc8121903d22543a256511910160405180910390a1600455565b610cf2806200335183390190565b805163ffffffff811681146200042057600080fd5b919050565b80516001600160a01b03811681146200042057600080fd5b60008060008060008060008060008060006101608c8e0312156200046057600080fd5b6200046b8c6200040b565b9a506200047b60208d016200040b565b99506200048b60408d0162000425565b98506200049b60608d0162000425565b9750620004ab60808d0162000425565b9650620004bb60a08d0162000425565b955060c08c0151945060e08c015193506101008c015192506101208c01519150620004ea6101408d0162000425565b90509295989b509295989b9093969950565b60805160a05160c05160e051610100516101205161014051612dad620005a4600039600081816102f50152611aaf01526000818161066e01528181611ad00152611b570152600081816105120152818161082601528181610dad01526114c00152600061029f01526000610437015260008181610647015281816107590152611c970152600081816103fd015281816104b60152818161147101526119b10152612dad6000f3fe608060405234801561001057600080fd5b50600436106102955760003560e01c80639aa44d0011610167578063c1ca1622116100ce578063d2a3cc7111610087578063d2a3cc711461062f578063d69f9d6114610642578063d88beda214610669578063db1b765914610690578063f38a267b146106a3578063fa31de01146106c657600080fd5b8063c1ca1622146105d5578063c5b350df146105e8578063cc394283146105f0578063cf796c7514610603578063d1851c921461060c578063d232c2201461061d57600080fd5b8063b1f8100d11610120578063b1f8100d1461055b578063b2f876431461056e578063b39af46614610581578063b46300ec14610594578063b697f5311461059c578063b95a2001146105af57600080fd5b80639aa44d00146104fe5780639fa92f9d14610507578063a01892a51461050d578063ad9c0c2e14610534578063b0c273cc1461053d578063b187bd261461055057600080fd5b80635bd11efc1161020b578063715018a6116101c4578063715018a6146104865780637f1e9cb01461048e57806388837094146104a15780638d3638f4146104b45780638da5cb5b146104da5780639a7c4b71146104eb57600080fd5b80635bd11efc1461041f5780635f61e3ec1461043257806364fd5f841461045957806365eaf11b146104625780636a42b8f81461046a5780636eb67a511461047357600080fd5b80633cf52ffb1161025d5780633cf52ffb146103885780633fc40eaa14610390578063450d11f0146103995780634ff746f6146103c95780635190bc53146103dc57806352a9674b146103f857600080fd5b8063141684161461029a5780631eeaabea146102db57806325e3beda146102f0578063272efc69146103255780632bbd59ca14610358575b600080fd5b6102c17f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff90911681526020015b60405180910390f35b6102ee6102e93660046125ff565b6106d9565b005b6103177f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020016102d2565b610348610333366004612634565b600c6020526000908152604090205460ff1681565b60405190151581526020016102d2565b61037b6103663660046125ff565b600e6020526000908152604090205460ff1681565b6040516102d29190612665565b600254610317565b61031760095481565b600f546103b19061010090046001600160a01b031681565b6040516001600160a01b0390911681526020016102d2565b6102ee6103d7366004612730565b61074e565b6103486103ea366004612634565b6001600160a01b0316301490565b6102c17f000000000000000000000000000000000000000000000000000000000000000081565b6102ee61042d366004612634565b6107eb565b6103b17f000000000000000000000000000000000000000000000000000000000000000081565b610317600a5481565b610317610822565b62093a80610317565b6102ee6104813660046125ff565b6108ab565b6102ee6108df565b6010546103b1906001600160a01b031681565b6102ee6104af366004612634565b61099e565b7f00000000000000000000000000000000000000000000000000000000000000006102c1565b6000546001600160a01b03166103b1565b6102ee6104f9366004612765565b610a2c565b61031760085481565b306103b1565b6103b17f000000000000000000000000000000000000000000000000000000000000000081565b61031760075481565b6102ee61054b3660046127fa565b610adc565b600f5460ff16610348565b6102ee610569366004612634565b610bda565b6102ee61057c366004612634565b610c7f565b6102ee61058f366004612817565b610cfb565b6102ee610da9565b6102ee6105aa366004612634565b610e8a565b6102c16105bd36600461284d565b600d6020526000908152604090205463ffffffff1681565b6102ee6105e3366004612868565b610f09565b6102ee6112a4565b6003546103b1906001600160a01b031681565b61031760045481565b6001546001600160a01b03166103b1565b6000546001600160a01b031615610348565b6102ee61063d366004612634565b6112ff565b6103b17f000000000000000000000000000000000000000000000000000000000000000081565b6103177f000000000000000000000000000000000000000000000000000000000000000081565b61034861069e366004612634565b6113c1565b6103486106b13660046125ff565b600b6020526000908152604090205460ff1681565b6103176106d4366004612900565b6113d2565b6000546001600160a01b03163314610704576040516311a8a1bb60e31b815260040160405180910390fd5b60075481036107495760405162461bcd60e51b815260206004820152600c60248201526b2164656c6179426c6f636b7360a01b60448201526064015b60405180910390fd5b600755565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146107af5760405162461bcd60e51b81526004016107409060208082526004908201526310a0a6a160e11b604082015260600190565b7fb3abc57bfeebd2cac918901db582f71972a8e628bccf19f5ae3e3482b98a5ced81336040516107e09291906129af565b60405180910390a150565b6000546001600160a01b03163314610816576040516311a8a1bb60e31b815260040160405180910390fd5b61081f8161158f565b50565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ebf0c7176040518163ffffffff1660e01b8152600401602060405180830381865afa158015610882573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108a691906129d9565b905090565b6000546001600160a01b031633146108d6576040516311a8a1bb60e31b815260040160405180910390fd5b61081f816115f8565b6000546001600160a01b0316331461090a576040516311a8a1bb60e31b815260040160405180910390fd5b60025460000361092d57604051630e4b303f60e21b815260040160405180910390fd5b62093a806002544261093f9190612a08565b1161095d576040516386d4b3f160e01b815260040160405180910390fd5b6001546001600160a01b031615610987576040516323295ef960e01b815260040160405180910390fd5b60015461099c906001600160a01b0316611639565b565b6010546001600160a01b031615610a0a5760405162461bcd60e51b815260206004820152602a60248201527f4678426173654368696c6454756e6e656c3a20524f4f545f54554e4e454c5f4160448201526913149150511657d4d15560b21b6064820152608401610740565b601080546001600160a01b0319166001600160a01b0392909216919091179055565b600f5461010090046001600160a01b03163314610a955760405162461bcd60e51b815260206004820152602160248201527f4678426173654368696c6454756e6e656c3a20494e56414c49445f53454e44456044820152602960f91b6064820152608401610740565b610ad6848484848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061169892505050565b50505050565b6005546040516384785ecd60e01b81523360048201526001600160a01b03909116906384785ecd90602401602060405180830381865afa158015610b24573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b489190612a1f565b610b7f5760405162461bcd60e51b815260206004820152600860248201526710bbb0ba31b432b960c11b6044820152606401610740565b600f5481151560ff909116151503610bc75760405162461bcd60e51b815260206004820152600b60248201526a105b1c9958591e481cd95d60aa1b6044820152606401610740565b600f805460ff1916911515919091179055565b6000546001600160a01b03163314610c05576040516311a8a1bb60e31b815260040160405180910390fd5b6001546001600160a01b038281169116148015610c2a57506001600160a01b03811615155b15610c48576040516311bc066560e11b815260040160405180910390fd5b6000546001600160a01b03808316911603610c7657604051634a2fb73f60e11b815260040160405180910390fd5b61081f81611796565b6000546001600160a01b03163314610caa576040516311a8a1bb60e31b815260040160405180910390fd5b6001600160a01b0381166000818152600c6020908152604091829020805460ff1916905590519182527f384859c5ef5fafac31e8bc92ce7fb48b1f2c74c4dd5e212eb84ec202fa5d9fad91016107e0565b6000546001600160a01b03163314610d26576040516311a8a1bb60e31b815260040160405180910390fd5b600f5460ff16610d625760405162461bcd60e51b8152602060048201526007602482015266085c185d5cd95960ca1b6044820152606401610740565b6008829055600981905560408051838152602081018390527fbe4fbf2f787f5368b702855f62c5a32d491f12b2caf62d0481ebf44e0354ce76910160405180910390a15050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ebf0c7176040518163ffffffff1660e01b8152600401602060405180830381865afa158015610e09573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e2d91906129d9565b604051602001610e3f91815260200190565b6040516020818303038152906040529050610e59816117e4565b7fa69577a1e55dd0712044e7078b408c39fadff8b3e1b334b202ff17e70eda9fdc81336040516107e09291906129af565b6000546001600160a01b03163314610eb5576040516311a8a1bb60e31b815260040160405180910390fd5b6001600160a01b0381166000818152600c6020908152604091829020805460ff1916600117905590519182527fd65eca5d561d3a4568c87b9b13ced4ab52a69edadfdfdb22d76bc595f36d7d8791016107e0565b600f5460ff1615610f485760405162461bcd60e51b8152602060048201526009602482015268085d5b9c185d5cd95960ba1b6044820152606401610740565b82610f7f5760405162461bcd60e51b81526020600482015260076024820152662170726f6f667360c81b6044820152606401610740565b600084846000818110610f9457610f94612a3c565b9050602002810190610fa69190612a52565b610fb09080612a73565b604051610fbe929190612ac1565b6040518091039020905060006110258287876000818110610fe157610fe1612a3c565b9050602002810190610ff39190612a52565b6020018888600081811061100957611009612a3c565b905060200281019061101b9190612a52565b61042001356117ed565b6000818152600b602052604090205490915060ff166110eb576000600a54431161105157600854611055565b6009545b9050600061108d8387602080602002604051908101604052809291908260208002808284376000920191909152508991506118929050565b90508181146110cf5760405162461bcd60e51b815260206004820152600e60248201526d085859d9dc9959d85d19549bdbdd60921b6044820152606401610740565b50506000818152600b60205260409020805460ff191660011790555b6000828152600e60205260409020805460ff191660019081179091555b63ffffffff811686111561120f5786868263ffffffff1681811061112e5761112e612a3c565b90506020028101906111409190612a52565b61114a9080612a73565b604051611158929190612ac1565b6040518091039020925060006111ad8489898563ffffffff1681811061118057611180612a3c565b90506020028101906111929190612a52565b6020018a8a8663ffffffff1681811061100957611009612a3c565b90508281146111ec5760405162461bcd60e51b815260206004820152600b60248201526a085cda185c9959149bdbdd60aa1b6044820152606401610740565b506000838152600e60205260409020805460ff1916600190811790915501611108565b5060005b63ffffffff811686111561129b5761129287878363ffffffff1681811061123c5761123c612a3c565b905060200281019061124e9190612a52565b6112589080612a73565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061194392505050565b50600101611213565b50505050505050565b6001546001600160a01b031633146112cf576040516311a7f27160e11b815260040160405180910390fd5b62093a80600254426112e19190612a08565b116109875760405163d39c12bb60e01b815260040160405180910390fd5b6000546001600160a01b0316331461132a576040516311a8a1bb60e31b815260040160405180910390fd5b6005546001600160a01b03908116908216036113885760405162461bcd60e51b815260206004820152601760248201527f616c72656164792077617463686572206d616e616765720000000000000000006044820152606401610740565b6040516001600160a01b03821681527fc16d059e43d7f8e29ccb4e001a2f249d3c59e274925d6a6bc3912943441d9f6c906020016107e0565b60006113cc82611c8a565b92915050565b336000908152600c602052604081205460ff166114205760405162461bcd60e51b815260206004820152600c60248201526b085dda1a5d195b1a5cdd195960a21b6044820152606401610740565b63ffffffff8085166000908152600d602052604090205416611443816001612ad1565b63ffffffff8681166000908152600d60205260408120805463ffffffff19169390921692909217905561149a7f00000000000000000000000000000000000000000000000000000000000000003384898989611cf6565b80516020820120604051632d287e4360e01b8152600481018290529192509060009081907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632d287e439060240160408051808303816000875af1158015611510573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115349190612af9565b90925090507f40f08ee347fc927ae45902edc87debb024aab1a311943731968607f603f2152f83611566600184612a08565b84876040516115789493929190612b1d565b60405180910390a1509093505050505b9392505050565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b60045460408051918252602082018390527f34b09b90f4cfa8747776f5cffd7d53ce7863a9b1f1fc8121903d22543a256511910160405180910390a1600455565b600080546001600160a01b038381166001600160a01b0319808416821785556002859055600180549091169055604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60105482906001600160a01b0380831691161461170b5760405162461bcd60e51b815260206004820152602b60248201527f4678426173654368696c6454756e6e656c3a20494e56414c49445f53454e444560448201526a1497d19493d357d493d3d560aa1b6064820152608401610740565b81516020146117465760405162461bcd60e51b8152602060048201526007602482015266042d8cadccee8d60cb1b6044820152606401610740565b61175761175283612b42565b611d2e565b7fb3abc57bfeebd2cac918901db582f71972a8e628bccf19f5ae3e3482b98a5ced82336040516117889291906129af565b60405180910390a150505050565b42600255600180546001600160a01b0319166001600160a01b0383169081179091556040517f6ab4d119f23076e8ad491bc65ce85f017fb0591dce08755ba8591059cc51737a90600090a250565b61081f81611dc2565b6000806000858152600e602052604090205460ff1660028111156118135761181361264f565b146118565760405162461bcd60e51b8152602060048201526013602482015272214d6573736167655374617475732e4e6f6e6560681b6044820152606401610740565b61188a8484602080602002604051908101604052809291908260208002808284376000920191909152508691506118929050565b949350505050565b8260005b602081101561193b57600183821c1660008583602081106118b9576118b9612a3c565b60200201519050816001036118f9576040805160208101839052908101859052606001604051602081830303815290604052805190602001209350611926565b60408051602081018690529081018290526060016040516020818303038152906040528051906020012093505b5050808061193390612b66565b915050611896565b509392505050565b60006002600654036119975760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610740565b600260065560006119a88382611df1565b905063ffffffff7f0000000000000000000000000000000000000000000000000000000000000000166119e062ffffff198316611e15565b63ffffffff1614611a225760405162461bcd60e51b815260206004820152600c60248201526b10b232b9ba34b730ba34b7b760a11b6044820152606401610740565b6000611a3362ffffff198316611e2a565b905060016000828152600e602052604090205460ff166002811115611a5a57611a5a61264f565b14611a915760405162461bcd60e51b815260206004820152600760248201526610b83937bb32b760c91b6044820152606401610740565b6000818152600e60205260409020805460ff19166002179055611af47f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000612b7f565b5a1015611b2c5760405162461bcd60e51b8152600401610740906020808252600490820152632167617360e01b604082015260600190565b6000611b3d62ffffff198416611e73565b6040805161010080825261012082019092529192506000917f0000000000000000000000000000000000000000000000000000000000000000908390836020820181803683370190505090506000611b9a62ffffff198916611e84565b611ba962ffffff198a16611e98565b611bb862ffffff198b16611ead565b611bd5611bca62ffffff198d16611ec2565b62ffffff1916611ef0565b604051602401611be89493929190612b97565b60408051601f198184030181529190526020810180516001600160e01b031663ab2dc3f560e01b17815281519192506000918291828a88f198503d945083851115611c31578394505b848252846000602084013e7fd42de95a9b26f1be134c8ecce389dc4fcfa18753d01661b7b361233569e8fe48878a84604051611c6f93929190612bc6565b60405180910390a15050600160065550949695505050505050565b6000336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614611cee5760405162461bcd60e51b81526020600482015260076024820152662162726964676560c81b6044820152606401610740565b506001919050565b6060868686868686604051602001611d1396959493929190612be7565b60405160208183030381529060405290509695505050505050565b600754600a54611d3e9190612b7f565b4311611d7b5760405162461bcd60e51b815260206004820152600c60248201526b2164656c6179426c6f636b7360a01b6044820152606401610740565b6009805460088190559082905543600a5560408051918252602082018390527fbe4fbf2f787f5368b702855f62c5a32d491f12b2caf62d0481ebf44e0354ce7691016107e0565b7f8c5261668696ce22758910d05bab8f186d6eb247ceac2af2e82c7dc17669b036816040516107e09190612c41565b815160009060208401611e0c64ffffffffff85168284611f39565b95945050505050565b60006113cc62ffffff19831660286004611f80565b600080611e408360781c6001600160601b031690565b6001600160601b031690506000611e608460181c6001600160601b031690565b6001600160601b03169091209392505050565b60006113cc611e8183611fb0565b90565b60006113cc62ffffff198316826004611f80565b60006113cc62ffffff19831660246004611f80565b60006113cc62ffffff19831660046020611fc1565b60006113cc604c611ee081601886901c6001600160601b0316612a08565b62ffffff1985169190600061211d565b6060600080611f088460181c6001600160601b031690565b6001600160601b031690506040519150819250611f288483602001612197565b508181016020016040529052919050565b600080611f468385612b7f565b9050604051811115611f56575060005b80600003611f6b5762ffffff19915050611588565b5050606092831b9190911790911b1760181b90565b6000611f8d826020612c54565b611f98906008612c77565b60ff16611fa6858585611fc1565b901c949350505050565b60006113cc62ffffff198316602c60205b60008160ff16600003611fd657506000611588565b611fe98460181c6001600160601b031690565b6001600160601b0316611fff60ff841685612b7f565b11156120635761204a61201b8560781c6001600160601b031690565b6001600160601b03166120378660181c6001600160601b031690565b6001600160601b0316858560ff166122ee565b60405162461bcd60e51b81526004016107409190612c41565b60208260ff1611156120dd5760405162461bcd60e51b815260206004820152603a60248201527f54797065644d656d566965772f696e646578202d20417474656d70746564207460448201527f6f20696e646578206d6f7265207468616e2033322062797465730000000000006064820152608401610740565b6008820260006120f68660781c6001600160601b031690565b6001600160601b031690506000600160ff1b60001984011d91909501511695945050505050565b6000806121338660781c6001600160601b031690565b6001600160601b031690506121478661235c565b846121528784612b7f565b61215c9190612b7f565b111561216f5762ffffff1991505061188a565b6121798582612b7f565b905061218d8364ffffffffff168286611f39565b9695505050505050565b600062ffffff19808416036121ff5760405162461bcd60e51b815260206004820152602860248201527f54797065644d656d566965772f636f7079546f202d204e756c6c20706f696e7460448201526732b9103232b932b360c11b6064820152608401610740565b61220883612395565b6122685760405162461bcd60e51b815260206004820152602b60248201527f54797065644d656d566965772f636f7079546f202d20496e76616c696420706f60448201526a34b73a32b9103232b932b360a91b6064820152608401610740565b600061227d8460181c6001600160601b031690565b6001600160601b03169050600061229d8560781c6001600160601b031690565b6001600160601b0316905060006040519050848111156122bd5760206060fd5b8285848460045afa5061218d6122d38760d81c90565b64ffffffffff60601b606091821b168717901b841760181b90565b606060006122fb866123d2565b9150506000612309866123d2565b9150506000612317866123d2565b9150506000612325866123d2565b9150508383838360405160200161233f9493929190612ca0565b604051602081830303815290604052945050505050949350505050565b60006123718260181c6001600160601b031690565b6123848360781c6001600160601b031690565b016001600160601b03169050919050565b60006123a18260d81c90565b64ffffffffff1664ffffffffff036123bb57506000919050565b60006123c68361235c565b60405110199392505050565b600080601f5b600f8160ff1611156124275760006123f1826008612c77565b60ff1685901c905061240281612480565b61ffff16841793508160ff1660101461241d57601084901b93505b50600019016123d8565b50600f5b60ff8160ff16101561247a576000612444826008612c77565b60ff1685901c905061245581612480565b61ffff16831792508160ff1660001461247057601083901b92505b506000190161242b565b50915091565b600061249260048360ff16901c6124b2565b60ff1661ffff919091161760081b6124a9826124b2565b60ff1617919050565b600060f08083179060ff821690036124cd5750603092915050565b8060ff1660f1036124e15750603192915050565b8060ff1660f2036124f55750603292915050565b8060ff1660f3036125095750603392915050565b8060ff1660f40361251d5750603492915050565b8060ff1660f5036125315750603592915050565b8060ff1660f6036125455750603692915050565b8060ff1660f7036125595750603792915050565b8060ff1660f80361256d5750603892915050565b8060ff1660f9036125815750603992915050565b8060ff1660fa036125955750606192915050565b8060ff1660fb036125a95750606292915050565b8060ff1660fc036125bd5750606392915050565b8060ff1660fd036125d15750606492915050565b8060ff1660fe036125e55750606592915050565b8060ff1660ff036125f95750606692915050565b50919050565b60006020828403121561261157600080fd5b5035919050565b80356001600160a01b038116811461262f57600080fd5b919050565b60006020828403121561264657600080fd5b61158882612618565b634e487b7160e01b600052602160045260246000fd5b602081016003831061268757634e487b7160e01b600052602160045260246000fd5b91905290565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126126b457600080fd5b813567ffffffffffffffff808211156126cf576126cf61268d565b604051601f8301601f19908116603f011681019082821181831017156126f7576126f761268d565b8160405283815286602085880101111561271057600080fd5b836020870160208301376000602085830101528094505050505092915050565b60006020828403121561274257600080fd5b813567ffffffffffffffff81111561275957600080fd5b61188a848285016126a3565b6000806000806060858703121561277b57600080fd5b8435935061278b60208601612618565b9250604085013567ffffffffffffffff808211156127a857600080fd5b818701915087601f8301126127bc57600080fd5b8135818111156127cb57600080fd5b8860208285010111156127dd57600080fd5b95989497505060200194505050565b801515811461081f57600080fd5b60006020828403121561280c57600080fd5b8135611588816127ec565b6000806040838503121561282a57600080fd5b50508035926020909101359150565b803563ffffffff8116811461262f57600080fd5b60006020828403121561285f57600080fd5b61158882612839565b600080600080610440858703121561287f57600080fd5b843567ffffffffffffffff8082111561289757600080fd5b818701915087601f8301126128ab57600080fd5b8135818111156128ba57600080fd5b8860208260051b85010111156128cf57600080fd5b6020830196508095505050506104208501868111156128ed57600080fd5b9396929550505060209290920191903590565b60008060006060848603121561291557600080fd5b61291e84612839565b925060208401359150604084013567ffffffffffffffff81111561294157600080fd5b61294d868287016126a3565b9150509250925092565b60005b8381101561297257818101518382015260200161295a565b83811115610ad65750506000910152565b6000815180845261299b816020860160208601612957565b601f01601f19169290920160200192915050565b6040815260006129c26040830185612983565b905060018060a01b03831660208301529392505050565b6000602082840312156129eb57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b600082821015612a1a57612a1a6129f2565b500390565b600060208284031215612a3157600080fd5b8151611588816127ec565b634e487b7160e01b600052603260045260246000fd5b6000823561043e19833603018112612a6957600080fd5b9190910192915050565b6000808335601e19843603018112612a8a57600080fd5b83018035915067ffffffffffffffff821115612aa557600080fd5b602001915036819003821315612aba57600080fd5b9250929050565b8183823760009101908152919050565b600063ffffffff808316818516808303821115612af057612af06129f2565b01949350505050565b60008060408385031215612b0c57600080fd5b505080516020909101519092909150565b84815283602082015282604082015260806060820152600061218d6080830184612983565b805160208083015191908110156125f95760001960209190910360031b1b16919050565b600060018201612b7857612b786129f2565b5060010190565b60008219821115612b9257612b926129f2565b500190565b600063ffffffff80871683528086166020840152508360408301526080606083015261218d6080830184612983565b8381528215156020820152606060408201526000611e0c6060830184612983565b600063ffffffff60e01b808960e01b168352876004840152808760e01b166024840152808660e01b1660288401525083602c8301528251612c2f81604c850160208701612957565b91909101604c01979650505050505050565b6020815260006115886020830184612983565b600060ff821660ff841680821015612c6e57612c6e6129f2565b90039392505050565b600060ff821660ff84168160ff0481118215151615612c9857612c986129f2565b029392505050565b7f54797065644d656d566965772f696e646578202d204f76657272616e20746865815274040ecd2caee5c40a6d8d2c6ca40d2e640c2e84060f605b1b60208201526001600160d01b031960d086811b821660358401526e040eed2e8d040d8cadccee8d04060f608b1b603b840181905286821b8316604a8501527f2e20417474656d7074656420746f20696e646578206174206f666673657420306050850152600f60fb1b607085015285821b83166071850152607784015283901b166086820152601760f91b608c8201526000608d820161218d56fea2646970667358221220deec2ba46e5263feff3f46addbf477232a0a37719c68908e5fa1470ee5b5412664736f6c634300080f0033608060405234801561001057600080fd5b50602180546001600160a01b03191633179055610cc0806100326000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c806331d0913c1161005b57806331d0913c146100d65780634b72d0d414610101578063ebf0c71714610116578063fd54b2281461011e57600080fd5b806306661abd146100825780631b373a98146100995780632d287e43146100ae575b600080fd5b6020545b6040519081526020015b60405180910390f35b6100ac6100a7366004610a6f565b610128565b005b6100c16100bc366004610a9f565b610192565b60408051928352602083019190915201610090565b6021546100e9906001600160a01b031681565b6040516001600160a01b039091168152602001610090565b610109610262565b6040516100909190610ab8565b61008661029e565b6020546100869081565b6021546001600160a01b031633146101705760405162461bcd60e51b815260206004820152600660248201526510b7bbb732b960d11b60448201526064015b60405180910390fd5b602180546001600160a01b0319166001600160a01b0392909216919091179055565b60215460009081906001600160a01b031633146101da5760405162461bcd60e51b815260206004820152600660248201526510b7bbb732b960d11b6044820152606401610167565b60408051610440810180835260009283918391820190839060209082845b8154815260200190600101908083116101f8575050509183525050602091820154910152905061022881856102f5565b905061023381610431565b6020808301518351929550935082916000916102509183916109dd565b50602091820151910155509092909150565b61026a610a1b565b604080516104008101918290529060009060209082845b815481526020019060010190808311610281575050505050905090565b6040805161044081018083526000928392918391839190820190839060209082845b8154815260200190600101908083116102c057505050918352505060209182015491015290506102ef81610431565b91505090565b6102fd610a3a565b600161030b60206002610be8565b6103159190610bf4565b83602001511061035a5760405162461bcd60e51b815260206004820152601060248201526f1b595c9adb19481d1c995948199d5b1b60821b6044820152606401610167565b60018360200181815161036d9190610c0b565b905250602083015160005b602081101561041d57816001166001036103b1578451849082602081106103a1576103a1610c23565b60200201525083915061042b9050565b845181602081106103c4576103c4610c23565b6020020151846040516020016103e4929190918252602082015260400190565b6040516020818303038152906040528051906020012093506002826104099190610c39565b91508061041581610c5b565b915050610378565b50610426610c74565b839150505b92915050565b600061042b8261043f610444565b610905565b61044c610a1b565b600081527fad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb560208201527fb4c11951957c6f8f642c4af61cd6b24640fec6dc7fc607ee8206a99e92410d3060408201527f21ddb9a356815c3fac1026b6dec5df3124afbadb485c9ba5a3e3398a04b7ba8560608201527fe58769b32a1beaf1ea27375a44095a0d1fb664ce2dd358e7fcbfb78c26a1934460808201527f0eb01ebfc9ed27500cd4dfc979272d1f0913cc9f66540d7e8005811109e1cf2d60a08201527f887c22bd8750d34016ac3c66b5ff102dacdd73f6b014e710b51e8022af9a196860c08201527fffd70157e48063fc33c97a050f7f640233bf646cc98d9524c6b92bcf3ab56f8360e08201527f9867cc5f7f196b93bae1e27e6320742445d290f2263827498b54fec539f756af6101008201527fcefad4e508c098b9a7e1d8feb19955fb02ba9675585078710969d3440f5054e06101208201527ff9dc3e7fe016e050eff260334f18a5d4fe391d82092319f5964f2e2eb7c1c3a56101408201527ff8b13a49e282f609c317a833fb8d976d11517c571d1221a265d25af778ecf8926101608201527f3490c6ceeb450aecdc82e28293031d10c7d73bf85e57bf041a97360aa2c5d99c6101808201527fc1df82d9c4b87413eae2ef048f94b4d3554cea73d92b0f7af96e0271c691e2bb6101a08201527f5c67add7c6caf302256adedf7ab114da0acfe870d449a3a489f781d659e8becc6101c08201527fda7bce9f4e8618b6bd2f4132ce798cdc7a60e7e1460a7299e3c6342a579626d26101e08201527f2733e50f526ec2fa19a22b31e8ed50f23cd1fdf94c9154ed3a7609a2f1ff981f6102008201527fe1d3b5c807b281e4683cc6d6315cf95b9ade8641defcb32372f1c126e398ef7a6102208201527f5a2dce0a8a7f68bb74560f8f71837c2c2ebbcbf7fffb42ae1896f13f7c7479a06102408201527fb46a28b6f55540f89444f63de0378e3d121be09e06cc9ded1c20e65876d36aa06102608201527fc65e9645644786b620e2dd2ad648ddfcbf4a7e5b1a3a4ecfe7f64667a3f0b7e26102808201527ff4418588ed35a2458cffeb39b93d26f18d2ab13bdce6aee58e7b99359ec2dfd96102a08201527f5a9c16dc00d6ef18b7933a6f8dc65ccb55667138776f7dea101070dc8796e3776102c08201527f4df84f40ae0c8229d0d6069e5c8f39a7c299677a09d367fc7b05e3bc380ee6526102e08201527fcdc72595f74c7b1043d0e1ffbab734648c838dfb0527d971b602bc216c9619ef6103008201527f0abf5ac974a1ed57f4050aa510dd9c74f508277b39d7973bb2dfccc5eeb0618d6103208201527fb8cd74046ff337f0a7bf2c8e03e10f642c1886798d71806ab1e888d9e5ee87d06103408201527f838c5655cb21c6cb83313b5a631175dff4963772cce9108188b34ac87c81c41e6103608201527f662ee4dd2dd7b2bc707961b1e646c4047669dcb6584f0d8d770daf5d7e7deb2e6103808201527f388ab20e2573d171a88108e79d820e98f26c0b84aa8b2f4aa4968dbb818ea3226103a08201527f93237c50ba75ee485f4c22adf2f741400bdf8d6a9cc7df7ecae576221665d7356103c08201527f8448818bb4ae4562849e949e17ac16e0be16688e156b5cf15e098c627c0056a96103e082015290565b6020820151600090815b60208110156109d5578451600183831c1690600090836020811061093557610935610c23565b60200201519050816001036109755760408051602081018390529081018690526060016040516020818303038152906040528051906020012094506109c0565b8486846020811061098857610988610c23565b60200201516040516020016109a7929190918252602082015260400190565b6040516020818303038152906040528051906020012094505b505080806109cd90610c5b565b91505061090f565b505092915050565b8260208101928215610a0b579160200282015b82811115610a0b5782518255916020019190600101906109f0565b50610a17929150610a5a565b5090565b6040518061040001604052806020906020820280368337509192915050565b6040518060400160405280610a4d610a1b565b8152602001600081525090565b5b80821115610a175760008155600101610a5b565b600060208284031215610a8157600080fd5b81356001600160a01b0381168114610a9857600080fd5b9392505050565b600060208284031215610ab157600080fd5b5035919050565b6104008101818360005b6020808210610ad15750610ae5565b825184529283019290910190600101610ac2565b50505092915050565b634e487b7160e01b600052601160045260246000fd5b600181815b80851115610b3f578160001904821115610b2557610b25610aee565b80851615610b3257918102915b93841c9390800290610b09565b509250929050565b600082610b565750600161042b565b81610b635750600061042b565b8160018114610b795760028114610b8357610b9f565b600191505061042b565b60ff841115610b9457610b94610aee565b50506001821b61042b565b5060208310610133831016604e8410600b8410161715610bc2575081810a61042b565b610bcc8383610b04565b8060001904821115610be057610be0610aee565b029392505050565b6000610a988383610b47565b600082821015610c0657610c06610aee565b500390565b60008219821115610c1e57610c1e610aee565b500190565b634e487b7160e01b600052603260045260246000fd5b600082610c5657634e487b7160e01b600052601260045260246000fd5b500490565b600060018201610c6d57610c6d610aee565b5060010190565b634e487b7160e01b600052600160045260246000fdfea2646970667358221220473e41972ea39b695c6e7f870f4fe157078088b090f4c9e75e8aa37c7070423464736f6c634300080f0033";

type PolygonSpokeConnectorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PolygonSpokeConnectorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PolygonSpokeConnector__factory extends ContractFactory {
  constructor(...args: PolygonSpokeConnectorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _merkle: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _mirrorGas: PromiseOrValue<BigNumberish>,
    _processGas: PromiseOrValue<BigNumberish>,
    _reserveGas: PromiseOrValue<BigNumberish>,
    _delayBlocks: PromiseOrValue<BigNumberish>,
    _watcherManager: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PolygonSpokeConnector> {
    return super.deploy(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _merkle,
      _mirrorConnector,
      _mirrorGas,
      _processGas,
      _reserveGas,
      _delayBlocks,
      _watcherManager,
      overrides || {}
    ) as Promise<PolygonSpokeConnector>;
  }
  override getDeployTransaction(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _merkle: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _mirrorGas: PromiseOrValue<BigNumberish>,
    _processGas: PromiseOrValue<BigNumberish>,
    _reserveGas: PromiseOrValue<BigNumberish>,
    _delayBlocks: PromiseOrValue<BigNumberish>,
    _watcherManager: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _merkle,
      _mirrorConnector,
      _mirrorGas,
      _processGas,
      _reserveGas,
      _delayBlocks,
      _watcherManager,
      overrides || {}
    );
  }
  override attach(address: string): PolygonSpokeConnector {
    return super.attach(address) as PolygonSpokeConnector;
  }
  override connect(signer: Signer): PolygonSpokeConnector__factory {
    return super.connect(signer) as PolygonSpokeConnector__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PolygonSpokeConnectorInterface {
    return new utils.Interface(_abi) as PolygonSpokeConnectorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PolygonSpokeConnector {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as PolygonSpokeConnector;
  }
}
