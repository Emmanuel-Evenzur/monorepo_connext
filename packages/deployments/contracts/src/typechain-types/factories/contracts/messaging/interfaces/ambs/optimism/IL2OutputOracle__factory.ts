/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../../common";
import type {
  IL2OutputOracle,
  IL2OutputOracleInterface,
} from "../../../../../../contracts/messaging/interfaces/ambs/optimism/IL2OutputOracle";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_l2OutputIndex",
        type: "uint256",
      },
    ],
    name: "getL2Output",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "outputRoot",
            type: "bytes32",
          },
          {
            internalType: "uint128",
            name: "timestamp",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "l2BlockNumber",
            type: "uint128",
          },
        ],
        internalType: "struct Types.OutputProposal",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "startingTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610107806100206000396000f3fe6080604052348015600f57600080fd5b506004361060325760003560e01c806388786272146037578063a25ae557146052575b600080fd5b603f60005481565b6040519081526020015b60405180910390f35b607e605d36600460b9565b50604080516060810182526000808252602082018190529181019190915290565b60408051825181526020808401516fffffffffffffffffffffffffffffffff9081169183019190915292820151909216908201526060016049565b60006020828403121560ca57600080fd5b503591905056fea2646970667358221220d3bb9876f539bdc4c63114f8cfc68bc76a48604e7e22e95e8bc787d9ce951a9c64736f6c63430008110033";

type IL2OutputOracleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: IL2OutputOracleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class IL2OutputOracle__factory extends ContractFactory {
  constructor(...args: IL2OutputOracleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<IL2OutputOracle> {
    return super.deploy(overrides || {}) as Promise<IL2OutputOracle>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): IL2OutputOracle {
    return super.attach(address) as IL2OutputOracle;
  }
  override connect(signer: Signer): IL2OutputOracle__factory {
    return super.connect(signer) as IL2OutputOracle__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): IL2OutputOracleInterface {
    return new utils.Interface(_abi) as IL2OutputOracleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IL2OutputOracle {
    return new Contract(address, _abi, signerOrProvider) as IL2OutputOracle;
  }
}
