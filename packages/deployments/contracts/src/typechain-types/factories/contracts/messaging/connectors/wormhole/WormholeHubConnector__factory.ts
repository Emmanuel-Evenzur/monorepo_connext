/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  WormholeHubConnector,
  WormholeHubConnectorInterface,
} from "../../../../../contracts/messaging/connectors/wormhole/WormholeHubConnector";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "_mirrorDomain",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_amb",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rootManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_gasCap",
        type: "uint256",
      },
      {
        internalType: "uint16",
        name: "_mirrorChainId",
        type: "uint16",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Connector__processMessage_notUsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyOwner_notOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyProposed_notProposedOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__ownershipDelayElapsed_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_noOwnershipChange",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_noProposal",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_previous",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_updated",
        type: "uint256",
      },
    ],
    name: "GasCapUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageProcessed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "encodedData",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previous",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "current",
        type: "address",
      },
    ],
    name: "MirrorConnectorUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "mirrorDomain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "amb",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "rootManager",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "mirrorConnector",
        type: "address",
      },
    ],
    name: "NewConnector",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "proposedOwner",
        type: "address",
      },
    ],
    name: "OwnershipProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "AMB",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIRROR_CHAIN_ID",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIRROR_DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_MANAGER",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptProposedOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "delay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mirrorConnector",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "processMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "processedWhMessages",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newlyProposed",
        type: "address",
      },
    ],
    name: "proposeNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proposed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposedTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "payload",
        type: "bytes",
      },
      {
        internalType: "bytes[]",
        name: "additionalVaas",
        type: "bytes[]",
      },
      {
        internalType: "bytes32",
        name: "sourceAddress",
        type: "bytes32",
      },
      {
        internalType: "uint16",
        name: "sourceChain",
        type: "uint16",
      },
      {
        internalType: "bytes32",
        name: "deliveryHash",
        type: "bytes32",
      },
    ],
    name: "receiveWormholeMessages",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounced",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "_encodedData",
        type: "bytes",
      },
    ],
    name: "sendMessage",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_gasCap",
        type: "uint256",
      },
    ],
    name: "setGasCap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
    ],
    name: "setMirrorConnector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_expected",
        type: "address",
      },
    ],
    name: "verifySender",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6101206040523480156200001257600080fd5b50604051620017c5380380620017c58339810160408190526200003591620002e8565b818181898989898984848484846200004d33620001a7565b8463ffffffff16600003620000985760405162461bcd60e51b815260206004820152600c60248201526b32b6b83a3c903237b6b0b4b760a11b60448201526064015b60405180910390fd5b6001600160a01b038216620000e45760405162461bcd60e51b815260206004820152601160248201527032b6b83a3c903937b7ba26b0b730b3b2b960791b60448201526064016200008f565b63ffffffff8086166080526001600160a01b0380851660a05283811660c05290851660e0528116156200011c576200011c816200020c565b604080516001600160a01b0385811682528481166020830152831681830152905163ffffffff86811692908816917f4f9c27c2fe3f84576ea469d367d044da53c45e951617e8389f2b5ed8db9d25f09181900360600190a3505050505050505050506200018f816200027560201b60201c565b5061ffff1661010052506200037e9650505050505050565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b039092166001600160a01b0319928316178155600255600180549091169055565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b60045460408051918252602082018390527f877a02cb809da0364d23adca3cd50c451b53f279d3df632e1fc11eb66335bce5910160405180910390a1600455565b805163ffffffff81168114620002cb57600080fd5b919050565b80516001600160a01b0381168114620002cb57600080fd5b600080600080600080600060e0888a0312156200030457600080fd5b6200030f88620002b6565b96506200031f60208901620002b6565b95506200032f60408901620002d0565b94506200033f60608901620002d0565b93506200034f60808901620002d0565b925060a0880151915060c088015161ffff811681146200036e57600080fd5b8091505092959891949750929550565b60805160a05160c05160e051610100516113bc620004096000396000818161037f015281816105c201528181610cf301528181610d940152610dba01526000818161014c0152610a49015260008181610295015281816104700152610a2201526000818161042301528181610525015281816108f30152610c670152600061024101526113bc6000f3fe60806040526004361061012e5760003560e01c8063715018a6116100ab578063c8a4d6901161006f578063c8a4d6901461036d578063cc394283146103b4578063d1851c92146103d4578063d232c220146103f2578063d69f9d6114610411578063db1b76591461044557600080fd5b8063715018a6146102e55780637850b020146102fa5780638da5cb5b1461031a578063b1f8100d14610338578063c5b350df1461035857600080fd5b8063529dca32116100f2578063529dca321461021c57806352a9674b1461022f5780635bd11efc146102635780635f61e3ec146102835780636a42b8f8146102cf57600080fd5b8063141684161461013a57806318c81709146101885780633cf52ffb146101c857806348e6fa23146101e75780634ff746f6146101fc57600080fd5b3661013557005b600080fd5b34801561014657600080fd5b5061016e7f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff90911681526020015b60405180910390f35b34801561019457600080fd5b506101b86101a3366004610f0f565b60056020526000908152604090205460ff1681565b604051901515815260200161017f565b3480156101d457600080fd5b506002545b60405190815260200161017f565b6101fa6101f5366004610fdf565b610465565b005b34801561020857600080fd5b506101fa610217366004611043565b61051a565b6101fa61022a366004611097565b6105c0565b34801561023b57600080fd5b5061016e7f000000000000000000000000000000000000000000000000000000000000000081565b34801561026f57600080fd5b506101fa61027e3660046111a0565b6106ac565b34801561028f57600080fd5b506102b77f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161017f565b3480156102db57600080fd5b5062093a806101d9565b3480156102f157600080fd5b506101fa6106e3565b34801561030657600080fd5b506101fa610315366004610f0f565b610797565b34801561032657600080fd5b506000546001600160a01b03166102b7565b34801561034457600080fd5b506101fa6103533660046111a0565b6107cb565b34801561036457600080fd5b506101fa610869565b34801561037957600080fd5b506103a17f000000000000000000000000000000000000000000000000000000000000000081565b60405161ffff909116815260200161017f565b3480156103c057600080fd5b506003546102b7906001600160a01b031681565b3480156103e057600080fd5b506001546001600160a01b03166102b7565b3480156103fe57600080fd5b506000546001600160a01b0316156101b8565b34801561041d57600080fd5b506102b77f000000000000000000000000000000000000000000000000000000000000000081565b34801561045157600080fd5b506101b86104603660046111a0565b6108d9565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146104d15760405162461bcd60e51b815260206004820152600c60248201526b10b937b7ba26b0b730b3b2b960a11b60448201526064015b60405180910390fd5b6104db82826108ea565b7fdcaa37a042a0087de79018c629bbd29cee82ca80bd9be394e1696bf9e935507782823360405161050e93929190611216565b60405180910390a15050565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461057b5760405162461bcd60e51b81526004016104c89060208082526004908201526310a0a6a160e11b604082015260600190565b61058481610939565b7fb3abc57bfeebd2cac918901db582f71972a8e628bccf19f5ae3e3482b98a5ced81336040516105b5929190611254565b60405180910390a150565b7f000000000000000000000000000000000000000000000000000000000000000061ffff168261ffff16146106275760405162461bcd60e51b815260206004820152600d60248201526c10b9b7bab931b29031b430b4b760991b60448201526064016104c8565b60008181526005602052604090205460ff161561067a5760405162461bcd60e51b8152602060048201526011602482015270185b1c9958591e481c1c9bd8d95cdcd959607a1b60448201526064016104c8565b6000818152600560205260409020805460ff191660011790556106a561069f84610952565b86610999565b5050505050565b6000546001600160a01b031633146106d7576040516311a8a1bb60e31b815260040160405180910390fd5b6106e081610afe565b50565b6000546001600160a01b0316331461070e576040516311a8a1bb60e31b815260040160405180910390fd5b62093a8060025442610720919061127e565b1161073e576040516324e0285f60e21b815260040160405180910390fd5b60025460000361076157604051630e4b303f60e21b815260040160405180910390fd5b6001546001600160a01b03161561078b576040516323295ef960e01b815260040160405180910390fd5b6107956000610b67565b565b6000546001600160a01b031633146107c2576040516311a8a1bb60e31b815260040160405180910390fd5b6106e081610bcc565b6000546001600160a01b031633146107f6576040516311a8a1bb60e31b815260040160405180910390fd5b6001546001600160a01b038281169116148015610814575060025415155b15610832576040516311bc066560e11b815260040160405180910390fd5b6000546001600160a01b0380831691160361086057604051634a2fb73f60e11b815260040160405180910390fd5b6106e081610c0d565b6001546001600160a01b03163314610894576040516311a7f27160e11b815260040160405180910390fd5b62093a80600254426108a6919061127e565b116108c4576040516324e0285f60e21b815260040160405180910390fd5b600154610795906001600160a01b0316610b67565b60006108e482610c5b565b92915050565b600354610935907f0000000000000000000000000000000000000000000000000000000000000000906001600160a01b031661092e6000546001600160a01b031690565b8585610c96565b5050565b6040516316c2fdb560e21b815260040160405180910390fd5b600060a082901c156109955760405162461bcd60e51b815260206004820152600c60248201526b2165766d206164647265737360a01b60448201526064016104c8565b5090565b6109a282610c5b565b6109dd5760405162461bcd60e51b815260206004820152600c60248201526b10b61921b7b73732b1ba37b960a11b60448201526064016104c8565b8051602014610a185760405162461bcd60e51b8152602060048201526007602482015266042d8cadccee8d60cb1b60448201526064016104c8565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016638e7d93fa7f0000000000000000000000000000000000000000000000000000000000000000610a718461129f565b6040516001600160e01b031960e085901b16815263ffffffff9290921660048301526024820152604401600060405180830381600087803b158015610ab557600080fd5b505af1158015610ac9573d6000803e3d6000fd5b505050507fb3abc57bfeebd2cac918901db582f71972a8e628bccf19f5ae3e3482b98a5ced813360405161050e929190611254565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b039092166001600160a01b0319928316178155600255600180549091169055565b60045460408051918252602082018390527f877a02cb809da0364d23adca3cd50c451b53f279d3df632e1fc11eb66335bce5910160405180910390a1600455565b42600255600180546001600160a01b0319166001600160a01b0383169081179091556040517f6ab4d119f23076e8ad491bc65ce85f017fb0591dce08755ba8591059cc51737a90600090a250565b6003546000906108e4907f0000000000000000000000000000000000000000000000000000000000000000906001600160a01b031684610e49565b8151602014610cd65760405162461bcd60e51b815260206004820152600c60248201526b042c8c2e8c240d8cadccee8d60a31b60448201526064016104c8565b6000610ce182610ea2565b60405163c23ee3c360e01b815261ffff7f0000000000000000000000000000000000000000000000000000000000000000166004820152600060248201819052604482018390529192506001600160a01b0388169063c23ee3c3906064016040805180830381865afa158015610d5b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d7f91906112c6565b509050866001600160a01b0316634b5ca6f4827f000000000000000000000000000000000000000000000000000000000000000089886000887f00000000000000000000000000000000000000000000000000000000000000008d6040518963ffffffff1660e01b8152600401610dfc97969594939291906112ea565b60206040518083038185885af1158015610e1a573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610e3f9190611343565b5050505050505050565b6000336001600160a01b03851614610e8e5760405162461bcd60e51b815260206004820152600860248201526710b932b630bcb2b960c11b60448201526064016104c8565b506001600160a01b03918216911614919050565b60008151602014610ee45760405162461bcd60e51b815260206004820152600c60248201526b042c8c2e8c240d8cadccee8d60a31b60448201526064016104c8565b6108e482806020019051810190610efb919061136d565b600060045482111561099557505060045490565b600060208284031215610f2157600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610f6757610f67610f28565b604052919050565b600082601f830112610f8057600080fd5b813567ffffffffffffffff811115610f9a57610f9a610f28565b610fad601f8201601f1916602001610f3e565b818152846020838601011115610fc257600080fd5b816020850160208301376000918101602001919091529392505050565b60008060408385031215610ff257600080fd5b823567ffffffffffffffff8082111561100a57600080fd5b61101686838701610f6f565b9350602085013591508082111561102c57600080fd5b5061103985828601610f6f565b9150509250929050565b60006020828403121561105557600080fd5b813567ffffffffffffffff81111561106c57600080fd5b61107884828501610f6f565b949350505050565b803561ffff8116811461109257600080fd5b919050565b600080600080600060a086880312156110af57600080fd5b853567ffffffffffffffff808211156110c757600080fd5b6110d389838a01610f6f565b96506020915081880135818111156110ea57600080fd5b8801601f81018a136110fb57600080fd5b80358281111561110d5761110d610f28565b8060051b61111c858201610f3e565b918252828101850191858101908d84111561113657600080fd5b86850192505b83831015611172578235868111156111545760008081fd5b6111628f8983890101610f6f565b835250918601919086019061113c565b809a50505050505050506040860135925061118f60608701611080565b949793965091946080013592915050565b6000602082840312156111b257600080fd5b81356001600160a01b03811681146111c957600080fd5b9392505050565b6000815180845260005b818110156111f6576020818501810151868301820152016111da565b506000602082860101526020601f19601f83011685010191505092915050565b60608152600061122960608301866111d0565b828103602084015261123b81866111d0565b91505060018060a01b0383166040830152949350505050565b60408152600061126760408301856111d0565b905060018060a01b03831660208301529392505050565b818103818111156108e457634e487b7160e01b600052601160045260246000fd5b805160208083015191908110156112c0576000198160200360031b1b821691505b50919050565b600080604083850312156112d957600080fd5b505080516020909101519092909150565b600061ffff808a16835260018060a01b03808a16602085015260e0604085015261131760e085018a6111d0565b925087606085015286608085015281861660a085015280851660c0850152505098975050505050505050565b60006020828403121561135557600080fd5b815167ffffffffffffffff811681146111c957600080fd5b60006020828403121561137f57600080fd5b505191905056fea26469706673582212203027a59c110037ba1bbe1360c77f608a6554193b66cbe5a8ddc24dad238a5fef64736f6c63430008110033";

type WormholeHubConnectorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WormholeHubConnectorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class WormholeHubConnector__factory extends ContractFactory {
  constructor(...args: WormholeHubConnectorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _gasCap: PromiseOrValue<BigNumberish>,
    _mirrorChainId: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<WormholeHubConnector> {
    return super.deploy(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _gasCap,
      _mirrorChainId,
      overrides || {}
    ) as Promise<WormholeHubConnector>;
  }
  override getDeployTransaction(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _gasCap: PromiseOrValue<BigNumberish>,
    _mirrorChainId: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _gasCap,
      _mirrorChainId,
      overrides || {}
    );
  }
  override attach(address: string): WormholeHubConnector {
    return super.attach(address) as WormholeHubConnector;
  }
  override connect(signer: Signer): WormholeHubConnector__factory {
    return super.connect(signer) as WormholeHubConnector__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WormholeHubConnectorInterface {
    return new utils.Interface(_abi) as WormholeHubConnectorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): WormholeHubConnector {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as WormholeHubConnector;
  }
}
