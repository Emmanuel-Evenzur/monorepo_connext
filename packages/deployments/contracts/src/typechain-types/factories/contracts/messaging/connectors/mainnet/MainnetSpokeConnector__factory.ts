/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  MainnetSpokeConnector,
  MainnetSpokeConnectorInterface,
} from "../../../../../contracts/messaging/connectors/mainnet/MainnetSpokeConnector";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "_mirrorDomain",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_amb",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rootManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_merkle",
        type: "address",
      },
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_mirrorGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_processGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_reserveGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_delayBlocks",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_watcherManager",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ProposedOwnable__acceptProposedOwner_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyOwner_notOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyProposed_notProposedOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_noOwnershipChange",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_noProposal",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "current",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "pending",
        type: "bytes32",
      },
    ],
    name: "AggregateRootsUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
    ],
    name: "Dispatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageProcessed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previous",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "current",
        type: "address",
      },
    ],
    name: "MirrorConnectorUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "previous",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "current",
        type: "uint256",
      },
    ],
    name: "MirrorGasUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "mirrorDomain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "amb",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "rootManager",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "mirrorConnector",
        type: "address",
      },
    ],
    name: "NewConnector",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "proposedOwner",
        type: "address",
      },
    ],
    name: "OwnershipProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "returnData",
        type: "bytes",
      },
    ],
    name: "Process",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "SenderAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "SenderRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "watcherManager",
        type: "address",
      },
    ],
    name: "WatcherManagerChanged",
    type: "event",
  },
  {
    inputs: [],
    name: "AMB",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MERKLE",
    outputs: [
      {
        internalType: "contract MerkleTreeManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIRROR_DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PROCESS_GAS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "RESERVE_GAS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_MANAGER",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptProposedOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
    ],
    name: "addSender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "aggregateRootCurrent",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "aggregateRootPending",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "aggregateRootPendingBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "delay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "delayBlocks",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_destinationDomain",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "_recipientAddress",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_messageBody",
        type: "bytes",
      },
    ],
    name: "dispatch",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "home",
    outputs: [
      {
        internalType: "contract IOutbox",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isPaused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_potentialReplica",
        type: "address",
      },
    ],
    name: "isReplica",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "localDomain",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "messages",
    outputs: [
      {
        internalType: "enum SpokeConnector.MessageStatus",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mirrorConnector",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mirrorGas",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "outboundRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "processMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newlyProposed",
        type: "address",
      },
    ],
    name: "proposeNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proposed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposedTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "message",
            type: "bytes",
          },
          {
            internalType: "bytes32[32]",
            name: "path",
            type: "bytes32[32]",
          },
          {
            internalType: "uint256",
            name: "index",
            type: "uint256",
          },
        ],
        internalType: "struct SpokeConnector.Proof[]",
        name: "_proofs",
        type: "tuple[]",
      },
      {
        internalType: "bytes32[32]",
        name: "_aggregatorPath",
        type: "bytes32[32]",
      },
      {
        internalType: "uint256",
        name: "_aggregatorIndex",
        type: "uint256",
      },
    ],
    name: "proveAndProcess",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "provenRoots",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
    ],
    name: "removeSender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounced",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "send",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "sendMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_current",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_pending",
        type: "bytes32",
      },
    ],
    name: "setAggregateRoots",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_delayBlocks",
        type: "uint256",
      },
    ],
    name: "setDelayBlocks",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
    ],
    name: "setMirrorConnector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_mirrorGas",
        type: "uint256",
      },
    ],
    name: "setMirrorGas",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_watcherManager",
        type: "address",
      },
    ],
    name: "setWatcherManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "paused",
        type: "bool",
      },
    ],
    name: "setWatcherPaused",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_expected",
        type: "address",
      },
    ],
    name: "verifySender",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "whitelistedSenders",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6101606040523480156200001257600080fd5b5060405162003e0c38038062003e0c833981016040819052620000359162000414565b8a8a8a8a8a8a8a8a8a8a8a808b8b8b8b8a8a6200005233620002cb565b8563ffffffff166000036200009d5760405162461bcd60e51b815260206004820152600c60248201526b32b6b83a3c903237b6b0b4b760a11b60448201526064015b60405180910390fd5b6001600160a01b038316620000e95760405162461bcd60e51b815260206004820152601160248201527032b6b83a3c903937b7ba26b0b730b3b2b960791b604482015260640162000094565b63ffffffff8087166080526001600160a01b0380861660a05284811660c05290861660e052821615620001215762000121826200032a565b80156200013357620001338162000393565b604080516001600160a01b0386811682528581166020830152841681830152905163ffffffff87811692908916917f4f9c27c2fe3f84576ea469d367d044da53c45e951617e8389f2b5ed8db9d25f09181900360600190a35050600580546001600160a01b0319166001600160a01b039690961695909517909455505060016006555050620cf850841015620001fb5760405162461bcd60e51b815260206004820152600c60248201526b2170726f636573732067617360a01b604482015260640162000094565b613a988310156200023e5760405162461bcd60e51b815260206004820152600c60248201526b21726573657276652067617360a01b604482015260640162000094565b6101208490526101408390526001600160a01b038716156200026157866200028e565b6040516200026f90620003d4565b604051809103906000f0801580156200028c573d6000803e3d6000fd5b505b6001600160a01b0316610100816001600160a01b0316815250508160078190555050505050505050505050505050505050505050505050620004d3565b600080546001600160a01b038381166001600160a01b0319808416821785556002859055600180549091169055604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b60045460408051918252602082018390527f34b09b90f4cfa8747776f5cffd7d53ce7863a9b1f1fc8121903d22543a256511910160405180910390a1600455565b610cf2806200311a83390190565b805163ffffffff81168114620003f757600080fd5b919050565b80516001600160a01b0381168114620003f757600080fd5b60008060008060008060008060008060006101608c8e0312156200043757600080fd5b620004428c620003e2565b9a506200045260208d01620003e2565b99506200046260408d01620003fc565b98506200047260608d01620003fc565b97506200048260808d01620003fc565b96506200049260a08d01620003fc565b955060c08c0151945060e08c015193506101008c015192506101208c01519150620004c16101408d01620003fc565b90509295989b509295989b9093969950565b60805160a05160c05160e051610100516101205161014051612b8a62000590600039600081816102d401526119b301526000818161060f015281816119d40152611a5b0152600081816104b3015281816107c701528181610cb101526113970152600061027e0152600081816103e60152818161094a015281816115b401526115f50152600081816105e801526106fa0152600081816103ac0152818161046a015281816113480152818161161c01526118b50152612b8a6000f3fe608060405234801561001057600080fd5b50600436106102745760003560e01c8063a01892a511610151578063c5b350df116100c3578063d2a3cc7111610087578063d2a3cc71146105d0578063d69f9d61146105e3578063d88beda21461060a578063db1b765914610631578063f38a267b14610644578063fa31de011461066757600080fd5b8063c5b350df14610589578063cc39428314610591578063cf796c75146105a4578063d1851c92146105ad578063d232c220146105be57600080fd5b8063b2f8764311610115578063b2f876431461050f578063b39af46614610522578063b46300ec14610535578063b697f5311461053d578063b95a200114610550578063c1ca16221461057657600080fd5b8063a01892a5146104ae578063ad9c0c2e146104d5578063b0c273cc146104de578063b187bd26146104f1578063b1f8100d146104fc57600080fd5b80635f61e3ec116101ea578063715018a6116101ae578063715018a61461044d57806382646a58146104555780638d3638f4146104685780638da5cb5b1461048e5780639aa44d001461049f5780639fa92f9d146104a857600080fd5b80635f61e3ec146103e157806364fd5f841461042057806365eaf11b146104295780636a42b8f8146104315780636eb67a511461043a57600080fd5b80633cf52ffb1161023c5780633cf52ffb146103675780633fc40eaa1461036f5780634ff746f6146103785780635190bc531461038b57806352a9674b146103a75780635bd11efc146103ce57600080fd5b806314168416146102795780631eeaabea146102ba57806325e3beda146102cf578063272efc69146103045780632bbd59ca14610337575b600080fd5b6102a07f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff90911681526020015b60405180910390f35b6102cd6102c8366004612468565b61067a565b005b6102f67f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020016102b1565b610327610312366004612481565b600c6020526000908152604090205460ff1681565b60405190151581526020016102b1565b61035a610345366004612468565b600e6020526000908152604090205460ff1681565b6040516102b191906124c0565b6002546102f6565b6102f660095481565b6102cd61038636600461258b565b6106ef565b610327610399366004612481565b6001600160a01b0316301490565b6102a07f000000000000000000000000000000000000000000000000000000000000000081565b6102cd6103dc366004612481565b61078c565b6104087f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016102b1565b6102f6600a5481565b6102f66107c3565b62093a806102f6565b6102cd610448366004612468565b61084c565b6102cd610880565b6102cd61046336600461258b565b61093f565b7f00000000000000000000000000000000000000000000000000000000000000006102a0565b6000546001600160a01b0316610408565b6102f660085481565b30610408565b6104087f000000000000000000000000000000000000000000000000000000000000000081565b6102f660075481565b6102cd6104ec3660046125ce565b6109e0565b600f5460ff16610327565b6102cd61050a366004612481565b610ade565b6102cd61051d366004612481565b610b83565b6102cd6105303660046125eb565b610bff565b6102cd610cad565b6102cd61054b366004612481565b610d5d565b6102a061055e366004612626565b600d6020526000908152604090205463ffffffff1681565b6102cd610584366004612641565b610ddc565b6102cd611177565b600354610408906001600160a01b031681565b6102f660045481565b6001546001600160a01b0316610408565b6000546001600160a01b031615610327565b6102cd6105de366004612481565b6111d2565b6104087f000000000000000000000000000000000000000000000000000000000000000081565b6102f67f000000000000000000000000000000000000000000000000000000000000000081565b61032761063f366004612481565b611294565b610327610652366004612468565b600b6020526000908152604090205460ff1681565b6102f66106753660046126d9565b6112a9565b6000546001600160a01b031633146106a5576040516311a8a1bb60e31b815260040160405180910390fd5b60075481036106ea5760405162461bcd60e51b815260206004820152600c60248201526b2164656c6179426c6f636b7360a01b60448201526064015b60405180910390fd5b600755565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146107505760405162461bcd60e51b81526004016106e19060208082526004908201526310a0a6a160e11b604082015260600190565b7fb3abc57bfeebd2cac918901db582f71972a8e628bccf19f5ae3e3482b98a5ced813360405161078192919061278c565b60405180910390a150565b6000546001600160a01b031633146107b7576040516311a8a1bb60e31b815260040160405180910390fd5b6107c081611466565b50565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ebf0c7176040518163ffffffff1660e01b8152600401602060405180830381865afa158015610823573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061084791906127b6565b905090565b6000546001600160a01b03163314610877576040516311a8a1bb60e31b815260040160405180910390fd5b6107c0816114cf565b6000546001600160a01b031633146108ab576040516311a8a1bb60e31b815260040160405180910390fd5b6002546000036108ce57604051630e4b303f60e21b815260040160405180910390fd5b62093a80600254426108e091906127e5565b116108fe576040516386d4b3f160e01b815260040160405180910390fd5b6001546001600160a01b031615610928576040516323295ef960e01b815260040160405180910390fd5b60015461093d906001600160a01b0316611510565b565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146109a65760405162461bcd60e51b815260206004820152600c60248201526b10b937b7ba26b0b730b3b2b960a11b60448201526064016106e1565b6109af8161156f565b7fa69577a1e55dd0712044e7078b408c39fadff8b3e1b334b202ff17e70eda9fdc813360405161078192919061278c565b6005546040516384785ecd60e01b81523360048201526001600160a01b03909116906384785ecd90602401602060405180830381865afa158015610a28573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a4c91906127fc565b610a835760405162461bcd60e51b815260206004820152600860248201526710bbb0ba31b432b960c11b60448201526064016106e1565b600f5481151560ff909116151503610acb5760405162461bcd60e51b815260206004820152600b60248201526a105b1c9958591e481cd95d60aa1b60448201526064016106e1565b600f805460ff1916911515919091179055565b6000546001600160a01b03163314610b09576040516311a8a1bb60e31b815260040160405180910390fd5b6001546001600160a01b038281169116148015610b2e57506001600160a01b03811615155b15610b4c576040516311bc066560e11b815260040160405180910390fd5b6000546001600160a01b03808316911603610b7a57604051634a2fb73f60e11b815260040160405180910390fd5b6107c0816116a3565b6000546001600160a01b03163314610bae576040516311a8a1bb60e31b815260040160405180910390fd5b6001600160a01b0381166000818152600c6020908152604091829020805460ff1916905590519182527f384859c5ef5fafac31e8bc92ce7fb48b1f2c74c4dd5e212eb84ec202fa5d9fad9101610781565b6000546001600160a01b03163314610c2a576040516311a8a1bb60e31b815260040160405180910390fd5b600f5460ff16610c665760405162461bcd60e51b8152602060048201526007602482015266085c185d5cd95960ca1b60448201526064016106e1565b6008829055600981905560408051838152602081018390527fbe4fbf2f787f5368b702855f62c5a32d491f12b2caf62d0481ebf44e0354ce76910160405180910390a15050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ebf0c7176040518163ffffffff1660e01b8152600401602060405180830381865afa158015610d0d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d3191906127b6565b604051602001610d4391815260200190565b60405160208183030381529060405290506109af8161156f565b6000546001600160a01b03163314610d88576040516311a8a1bb60e31b815260040160405180910390fd5b6001600160a01b0381166000818152600c6020908152604091829020805460ff1916600117905590519182527fd65eca5d561d3a4568c87b9b13ced4ab52a69edadfdfdb22d76bc595f36d7d879101610781565b600f5460ff1615610e1b5760405162461bcd60e51b8152602060048201526009602482015268085d5b9c185d5cd95960ba1b60448201526064016106e1565b82610e525760405162461bcd60e51b81526020600482015260076024820152662170726f6f667360c81b60448201526064016106e1565b600084846000818110610e6757610e67612819565b9050602002810190610e79919061282f565b610e839080612850565b604051610e9192919061289e565b604051809103902090506000610ef88287876000818110610eb457610eb4612819565b9050602002810190610ec6919061282f565b60200188886000818110610edc57610edc612819565b9050602002810190610eee919061282f565b61042001356116f1565b6000818152600b602052604090205490915060ff16610fbe576000600a544311610f2457600854610f28565b6009545b90506000610f608387602080602002604051908101604052809291908260208002808284376000920191909152508991506117969050565b9050818114610fa25760405162461bcd60e51b815260206004820152600e60248201526d085859d9dc9959d85d19549bdbdd60921b60448201526064016106e1565b50506000818152600b60205260409020805460ff191660011790555b6000828152600e60205260409020805460ff191660019081179091555b63ffffffff81168611156110e25786868263ffffffff1681811061100157611001612819565b9050602002810190611013919061282f565b61101d9080612850565b60405161102b92919061289e565b6040518091039020925060006110808489898563ffffffff1681811061105357611053612819565b9050602002810190611065919061282f565b6020018a8a8663ffffffff16818110610edc57610edc612819565b90508281146110bf5760405162461bcd60e51b815260206004820152600b60248201526a085cda185c9959149bdbdd60aa1b60448201526064016106e1565b506000838152600e60205260409020805460ff1916600190811790915501610fdb565b5060005b63ffffffff811686111561116e5761116587878363ffffffff1681811061110f5761110f612819565b9050602002810190611121919061282f565b61112b9080612850565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061184792505050565b506001016110e6565b50505050505050565b6001546001600160a01b031633146111a2576040516311a7f27160e11b815260040160405180910390fd5b62093a80600254426111b491906127e5565b116109285760405163d39c12bb60e01b815260040160405180910390fd5b6000546001600160a01b031633146111fd576040516311a8a1bb60e31b815260040160405180910390fd5b6005546001600160a01b039081169082160361125b5760405162461bcd60e51b815260206004820152601760248201527f616c72656164792077617463686572206d616e6167657200000000000000000060448201526064016106e1565b6040516001600160a01b03821681527fc16d059e43d7f8e29ccb4e001a2f249d3c59e274925d6a6bc3912943441d9f6c90602001610781565b60006001600160a01b03821633145b92915050565b336000908152600c602052604081205460ff166112f75760405162461bcd60e51b815260206004820152600c60248201526b085dda1a5d195b1a5cdd195960a21b60448201526064016106e1565b63ffffffff8085166000908152600d60205260409020541661131a8160016128ae565b63ffffffff8681166000908152600d60205260408120805463ffffffff1916939092169290921790556113717f00000000000000000000000000000000000000000000000000000000000000003384898989611b8e565b80516020820120604051632d287e4360e01b8152600481018290529192509060009081907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632d287e439060240160408051808303816000875af11580156113e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061140b91906128d6565b90925090507f40f08ee347fc927ae45902edc87debb024aab1a311943731968607f603f2152f8361143d6001846127e5565b848760405161144f94939291906128fa565b60405180910390a1509093505050505b9392505050565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b60045460408051918252602082018390527f34b09b90f4cfa8747776f5cffd7d53ce7863a9b1f1fc8121903d22543a256511910160405180910390a1600455565b600080546001600160a01b038381166001600160a01b0319808416821785556002859055600180549091169055604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516020146115aa5760405162461bcd60e51b8152602060048201526007602482015266042d8cadccee8d60cb1b60448201526064016106e1565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001633036115eb576107c06115e68261291f565b611bc6565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016638e7d93fa7f00000000000000000000000000000000000000000000000000000000000000006116448461291f565b6040516001600160e01b031960e085901b16815263ffffffff9290921660048301526024820152604401600060405180830381600087803b15801561168857600080fd5b505af115801561169c573d6000803e3d6000fd5b5050505050565b42600255600180546001600160a01b0319166001600160a01b0383169081179091556040517f6ab4d119f23076e8ad491bc65ce85f017fb0591dce08755ba8591059cc51737a90600090a250565b6000806000858152600e602052604090205460ff166002811115611717576117176124aa565b1461175a5760405162461bcd60e51b8152602060048201526013602482015272214d6573736167655374617475732e4e6f6e6560681b60448201526064016106e1565b61178e8484602080602002604051908101604052809291908260208002808284376000920191909152508691506117969050565b949350505050565b8260005b602081101561183f57600183821c1660008583602081106117bd576117bd612819565b60200201519050816001036117fd57604080516020810183905290810185905260600160405160208183030381529060405280519060200120935061182a565b60408051602081018690529081018290526060016040516020818303038152906040528051906020012093505b5050808061183790612943565b91505061179a565b509392505050565b600060026006540361189b5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016106e1565b600260065560006118ac8382611c5a565b905063ffffffff7f0000000000000000000000000000000000000000000000000000000000000000166118e462ffffff198316611c7e565b63ffffffff16146119265760405162461bcd60e51b815260206004820152600c60248201526b10b232b9ba34b730ba34b7b760a11b60448201526064016106e1565b600061193762ffffff198316611c93565b905060016000828152600e602052604090205460ff16600281111561195e5761195e6124aa565b146119955760405162461bcd60e51b815260206004820152600760248201526610b83937bb32b760c91b60448201526064016106e1565b6000818152600e60205260409020805460ff191660021790556119f87f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000061295c565b5a1015611a305760405162461bcd60e51b81526004016106e1906020808252600490820152632167617360e01b604082015260600190565b6000611a4162ffffff198416611cdc565b6040805161010080825261012082019092529192506000917f0000000000000000000000000000000000000000000000000000000000000000908390836020820181803683370190505090506000611a9e62ffffff198916611ced565b611aad62ffffff198a16611d01565b611abc62ffffff198b16611d16565b611ad9611ace62ffffff198d16611d2b565b62ffffff1916611d59565b604051602401611aec9493929190612974565b60408051601f198184030181529190526020810180516001600160e01b031663ab2dc3f560e01b17815281519192506000918291828a88f198503d945083851115611b35578394505b848252846000602084013e7fd42de95a9b26f1be134c8ecce389dc4fcfa18753d01661b7b361233569e8fe48878a84604051611b73939291906129a3565b60405180910390a15050600160065550949695505050505050565b6060868686868686604051602001611bab969594939291906129c4565b60405160208183030381529060405290509695505050505050565b600754600a54611bd6919061295c565b4311611c135760405162461bcd60e51b815260206004820152600c60248201526b2164656c6179426c6f636b7360a01b60448201526064016106e1565b6009805460088190559082905543600a5560408051918252602082018390527fbe4fbf2f787f5368b702855f62c5a32d491f12b2caf62d0481ebf44e0354ce769101610781565b815160009060208401611c7564ffffffffff85168284611da2565b95945050505050565b60006112a362ffffff19831660286004611de9565b600080611ca98360781c6001600160601b031690565b6001600160601b031690506000611cc98460181c6001600160601b031690565b6001600160601b03169091209392505050565b60006112a3611cea83611e19565b90565b60006112a362ffffff198316826004611de9565b60006112a362ffffff19831660246004611de9565b60006112a362ffffff19831660046020611e2a565b60006112a3604c611d4981601886901c6001600160601b03166127e5565b62ffffff19851691906000611f86565b6060600080611d718460181c6001600160601b031690565b6001600160601b031690506040519150819250611d918483602001612000565b508181016020016040529052919050565b600080611daf838561295c565b9050604051811115611dbf575060005b80600003611dd45762ffffff1991505061145f565b5050606092831b9190911790911b1760181b90565b6000611df6826020612a1e565b611e01906008612a41565b60ff16611e0f858585611e2a565b901c949350505050565b60006112a362ffffff198316602c60205b60008160ff16600003611e3f5750600061145f565b611e528460181c6001600160601b031690565b6001600160601b0316611e6860ff84168561295c565b1115611ecc57611eb3611e848560781c6001600160601b031690565b6001600160601b0316611ea08660181c6001600160601b031690565b6001600160601b0316858560ff16612157565b60405162461bcd60e51b81526004016106e19190612a6a565b60208260ff161115611f465760405162461bcd60e51b815260206004820152603a60248201527f54797065644d656d566965772f696e646578202d20417474656d70746564207460448201527f6f20696e646578206d6f7265207468616e20333220627974657300000000000060648201526084016106e1565b600882026000611f5f8660781c6001600160601b031690565b6001600160601b031690506000600160ff1b60001984011d91909501511695945050505050565b600080611f9c8660781c6001600160601b031690565b6001600160601b03169050611fb0866121c5565b84611fbb878461295c565b611fc5919061295c565b1115611fd85762ffffff1991505061178e565b611fe2858261295c565b9050611ff68364ffffffffff168286611da2565b9695505050505050565b600062ffffff19808416036120685760405162461bcd60e51b815260206004820152602860248201527f54797065644d656d566965772f636f7079546f202d204e756c6c20706f696e7460448201526732b9103232b932b360c11b60648201526084016106e1565b612071836121fe565b6120d15760405162461bcd60e51b815260206004820152602b60248201527f54797065644d656d566965772f636f7079546f202d20496e76616c696420706f60448201526a34b73a32b9103232b932b360a91b60648201526084016106e1565b60006120e68460181c6001600160601b031690565b6001600160601b0316905060006121068560781c6001600160601b031690565b6001600160601b0316905060006040519050848111156121265760206060fd5b8285848460045afa50611ff661213c8760d81c90565b64ffffffffff60601b606091821b168717901b841760181b90565b606060006121648661223b565b91505060006121728661223b565b91505060006121808661223b565b915050600061218e8661223b565b915050838383836040516020016121a89493929190612a7d565b604051602081830303815290604052945050505050949350505050565b60006121da8260181c6001600160601b031690565b6121ed8360781c6001600160601b031690565b016001600160601b03169050919050565b600061220a8260d81c90565b64ffffffffff1664ffffffffff0361222457506000919050565b600061222f836121c5565b60405110199392505050565b600080601f5b600f8160ff16111561229057600061225a826008612a41565b60ff1685901c905061226b816122e9565b61ffff16841793508160ff1660101461228657601084901b93505b5060001901612241565b50600f5b60ff8160ff1610156122e35760006122ad826008612a41565b60ff1685901c90506122be816122e9565b61ffff16831792508160ff166000146122d957601083901b92505b5060001901612294565b50915091565b60006122fb60048360ff16901c61231b565b60ff1661ffff919091161760081b6123128261231b565b60ff1617919050565b600060f08083179060ff821690036123365750603092915050565b8060ff1660f10361234a5750603192915050565b8060ff1660f20361235e5750603292915050565b8060ff1660f3036123725750603392915050565b8060ff1660f4036123865750603492915050565b8060ff1660f50361239a5750603592915050565b8060ff1660f6036123ae5750603692915050565b8060ff1660f7036123c25750603792915050565b8060ff1660f8036123d65750603892915050565b8060ff1660f9036123ea5750603992915050565b8060ff1660fa036123fe5750606192915050565b8060ff1660fb036124125750606292915050565b8060ff1660fc036124265750606392915050565b8060ff1660fd0361243a5750606492915050565b8060ff1660fe0361244e5750606592915050565b8060ff1660ff036124625750606692915050565b50919050565b60006020828403121561247a57600080fd5b5035919050565b60006020828403121561249357600080fd5b81356001600160a01b038116811461145f57600080fd5b634e487b7160e01b600052602160045260246000fd5b60208101600383106124e257634e487b7160e01b600052602160045260246000fd5b91905290565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261250f57600080fd5b813567ffffffffffffffff8082111561252a5761252a6124e8565b604051601f8301601f19908116603f01168101908282118183101715612552576125526124e8565b8160405283815286602085880101111561256b57600080fd5b836020870160208301376000602085830101528094505050505092915050565b60006020828403121561259d57600080fd5b813567ffffffffffffffff8111156125b457600080fd5b61178e848285016124fe565b80151581146107c057600080fd5b6000602082840312156125e057600080fd5b813561145f816125c0565b600080604083850312156125fe57600080fd5b50508035926020909101359150565b803563ffffffff8116811461262157600080fd5b919050565b60006020828403121561263857600080fd5b61145f8261260d565b600080600080610440858703121561265857600080fd5b843567ffffffffffffffff8082111561267057600080fd5b818701915087601f83011261268457600080fd5b81358181111561269357600080fd5b8860208260051b85010111156126a857600080fd5b6020830196508095505050506104208501868111156126c657600080fd5b9396929550505060209290920191903590565b6000806000606084860312156126ee57600080fd5b6126f78461260d565b925060208401359150604084013567ffffffffffffffff81111561271a57600080fd5b612726868287016124fe565b9150509250925092565b60005b8381101561274b578181015183820152602001612733565b8381111561275a576000848401525b50505050565b60008151808452612778816020860160208601612730565b601f01601f19169290920160200192915050565b60408152600061279f6040830185612760565b905060018060a01b03831660208301529392505050565b6000602082840312156127c857600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b6000828210156127f7576127f76127cf565b500390565b60006020828403121561280e57600080fd5b815161145f816125c0565b634e487b7160e01b600052603260045260246000fd5b6000823561043e1983360301811261284657600080fd5b9190910192915050565b6000808335601e1984360301811261286757600080fd5b83018035915067ffffffffffffffff82111561288257600080fd5b60200191503681900382131561289757600080fd5b9250929050565b8183823760009101908152919050565b600063ffffffff8083168185168083038211156128cd576128cd6127cf565b01949350505050565b600080604083850312156128e957600080fd5b505080516020909101519092909150565b848152836020820152826040820152608060608201526000611ff66080830184612760565b805160208083015191908110156124625760001960209190910360031b1b16919050565b600060018201612955576129556127cf565b5060010190565b6000821982111561296f5761296f6127cf565b500190565b600063ffffffff808716835280861660208401525083604083015260806060830152611ff66080830184612760565b8381528215156020820152606060408201526000611c756060830184612760565b600063ffffffff60e01b808960e01b168352876004840152808760e01b166024840152808660e01b1660288401525083602c8301528251612a0c81604c850160208701612730565b91909101604c01979650505050505050565b600060ff821660ff841680821015612a3857612a386127cf565b90039392505050565b600060ff821660ff84168160ff0481118215151615612a6257612a626127cf565b029392505050565b60208152600061145f6020830184612760565b7f54797065644d656d566965772f696e646578202d204f76657272616e20746865815274040ecd2caee5c40a6d8d2c6ca40d2e640c2e84060f605b1b60208201526001600160d01b031960d086811b821660358401526e040eed2e8d040d8cadccee8d04060f608b1b603b840181905286821b8316604a8501527f2e20417474656d7074656420746f20696e646578206174206f666673657420306050850152600f60fb1b607085015285821b83166071850152607784015283901b166086820152601760f91b608c8201526000608d8201611ff656fea2646970667358221220fe818b4b4642196d2cf7490a2d13a389dc19538c6801026059e6e859d344fe1e64736f6c634300080f0033608060405234801561001057600080fd5b50602180546001600160a01b03191633179055610cc0806100326000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c806331d0913c1161005b57806331d0913c146100d65780634b72d0d414610101578063ebf0c71714610116578063fd54b2281461011e57600080fd5b806306661abd146100825780631b373a98146100995780632d287e43146100ae575b600080fd5b6020545b6040519081526020015b60405180910390f35b6100ac6100a7366004610a6f565b610128565b005b6100c16100bc366004610a9f565b610192565b60408051928352602083019190915201610090565b6021546100e9906001600160a01b031681565b6040516001600160a01b039091168152602001610090565b610109610262565b6040516100909190610ab8565b61008661029e565b6020546100869081565b6021546001600160a01b031633146101705760405162461bcd60e51b815260206004820152600660248201526510b7bbb732b960d11b60448201526064015b60405180910390fd5b602180546001600160a01b0319166001600160a01b0392909216919091179055565b60215460009081906001600160a01b031633146101da5760405162461bcd60e51b815260206004820152600660248201526510b7bbb732b960d11b6044820152606401610167565b60408051610440810180835260009283918391820190839060209082845b8154815260200190600101908083116101f8575050509183525050602091820154910152905061022881856102f5565b905061023381610431565b6020808301518351929550935082916000916102509183916109dd565b50602091820151910155509092909150565b61026a610a1b565b604080516104008101918290529060009060209082845b815481526020019060010190808311610281575050505050905090565b6040805161044081018083526000928392918391839190820190839060209082845b8154815260200190600101908083116102c057505050918352505060209182015491015290506102ef81610431565b91505090565b6102fd610a3a565b600161030b60206002610be8565b6103159190610bf4565b83602001511061035a5760405162461bcd60e51b815260206004820152601060248201526f1b595c9adb19481d1c995948199d5b1b60821b6044820152606401610167565b60018360200181815161036d9190610c0b565b905250602083015160005b602081101561041d57816001166001036103b1578451849082602081106103a1576103a1610c23565b60200201525083915061042b9050565b845181602081106103c4576103c4610c23565b6020020151846040516020016103e4929190918252602082015260400190565b6040516020818303038152906040528051906020012093506002826104099190610c39565b91508061041581610c5b565b915050610378565b50610426610c74565b839150505b92915050565b600061042b8261043f610444565b610905565b61044c610a1b565b600081527fad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb560208201527fb4c11951957c6f8f642c4af61cd6b24640fec6dc7fc607ee8206a99e92410d3060408201527f21ddb9a356815c3fac1026b6dec5df3124afbadb485c9ba5a3e3398a04b7ba8560608201527fe58769b32a1beaf1ea27375a44095a0d1fb664ce2dd358e7fcbfb78c26a1934460808201527f0eb01ebfc9ed27500cd4dfc979272d1f0913cc9f66540d7e8005811109e1cf2d60a08201527f887c22bd8750d34016ac3c66b5ff102dacdd73f6b014e710b51e8022af9a196860c08201527fffd70157e48063fc33c97a050f7f640233bf646cc98d9524c6b92bcf3ab56f8360e08201527f9867cc5f7f196b93bae1e27e6320742445d290f2263827498b54fec539f756af6101008201527fcefad4e508c098b9a7e1d8feb19955fb02ba9675585078710969d3440f5054e06101208201527ff9dc3e7fe016e050eff260334f18a5d4fe391d82092319f5964f2e2eb7c1c3a56101408201527ff8b13a49e282f609c317a833fb8d976d11517c571d1221a265d25af778ecf8926101608201527f3490c6ceeb450aecdc82e28293031d10c7d73bf85e57bf041a97360aa2c5d99c6101808201527fc1df82d9c4b87413eae2ef048f94b4d3554cea73d92b0f7af96e0271c691e2bb6101a08201527f5c67add7c6caf302256adedf7ab114da0acfe870d449a3a489f781d659e8becc6101c08201527fda7bce9f4e8618b6bd2f4132ce798cdc7a60e7e1460a7299e3c6342a579626d26101e08201527f2733e50f526ec2fa19a22b31e8ed50f23cd1fdf94c9154ed3a7609a2f1ff981f6102008201527fe1d3b5c807b281e4683cc6d6315cf95b9ade8641defcb32372f1c126e398ef7a6102208201527f5a2dce0a8a7f68bb74560f8f71837c2c2ebbcbf7fffb42ae1896f13f7c7479a06102408201527fb46a28b6f55540f89444f63de0378e3d121be09e06cc9ded1c20e65876d36aa06102608201527fc65e9645644786b620e2dd2ad648ddfcbf4a7e5b1a3a4ecfe7f64667a3f0b7e26102808201527ff4418588ed35a2458cffeb39b93d26f18d2ab13bdce6aee58e7b99359ec2dfd96102a08201527f5a9c16dc00d6ef18b7933a6f8dc65ccb55667138776f7dea101070dc8796e3776102c08201527f4df84f40ae0c8229d0d6069e5c8f39a7c299677a09d367fc7b05e3bc380ee6526102e08201527fcdc72595f74c7b1043d0e1ffbab734648c838dfb0527d971b602bc216c9619ef6103008201527f0abf5ac974a1ed57f4050aa510dd9c74f508277b39d7973bb2dfccc5eeb0618d6103208201527fb8cd74046ff337f0a7bf2c8e03e10f642c1886798d71806ab1e888d9e5ee87d06103408201527f838c5655cb21c6cb83313b5a631175dff4963772cce9108188b34ac87c81c41e6103608201527f662ee4dd2dd7b2bc707961b1e646c4047669dcb6584f0d8d770daf5d7e7deb2e6103808201527f388ab20e2573d171a88108e79d820e98f26c0b84aa8b2f4aa4968dbb818ea3226103a08201527f93237c50ba75ee485f4c22adf2f741400bdf8d6a9cc7df7ecae576221665d7356103c08201527f8448818bb4ae4562849e949e17ac16e0be16688e156b5cf15e098c627c0056a96103e082015290565b6020820151600090815b60208110156109d5578451600183831c1690600090836020811061093557610935610c23565b60200201519050816001036109755760408051602081018390529081018690526060016040516020818303038152906040528051906020012094506109c0565b8486846020811061098857610988610c23565b60200201516040516020016109a7929190918252602082015260400190565b6040516020818303038152906040528051906020012094505b505080806109cd90610c5b565b91505061090f565b505092915050565b8260208101928215610a0b579160200282015b82811115610a0b5782518255916020019190600101906109f0565b50610a17929150610a5a565b5090565b6040518061040001604052806020906020820280368337509192915050565b6040518060400160405280610a4d610a1b565b8152602001600081525090565b5b80821115610a175760008155600101610a5b565b600060208284031215610a8157600080fd5b81356001600160a01b0381168114610a9857600080fd5b9392505050565b600060208284031215610ab157600080fd5b5035919050565b6104008101818360005b6020808210610ad15750610ae5565b825184529283019290910190600101610ac2565b50505092915050565b634e487b7160e01b600052601160045260246000fd5b600181815b80851115610b3f578160001904821115610b2557610b25610aee565b80851615610b3257918102915b93841c9390800290610b09565b509250929050565b600082610b565750600161042b565b81610b635750600061042b565b8160018114610b795760028114610b8357610b9f565b600191505061042b565b60ff841115610b9457610b94610aee565b50506001821b61042b565b5060208310610133831016604e8410600b8410161715610bc2575081810a61042b565b610bcc8383610b04565b8060001904821115610be057610be0610aee565b029392505050565b6000610a988383610b47565b600082821015610c0657610c06610aee565b500390565b60008219821115610c1e57610c1e610aee565b500190565b634e487b7160e01b600052603260045260246000fd5b600082610c5657634e487b7160e01b600052601260045260246000fd5b500490565b600060018201610c6d57610c6d610aee565b5060010190565b634e487b7160e01b600052600160045260246000fdfea2646970667358221220473e41972ea39b695c6e7f870f4fe157078088b090f4c9e75e8aa37c7070423464736f6c634300080f0033";

type MainnetSpokeConnectorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MainnetSpokeConnectorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MainnetSpokeConnector__factory extends ContractFactory {
  constructor(...args: MainnetSpokeConnectorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _merkle: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _mirrorGas: PromiseOrValue<BigNumberish>,
    _processGas: PromiseOrValue<BigNumberish>,
    _reserveGas: PromiseOrValue<BigNumberish>,
    _delayBlocks: PromiseOrValue<BigNumberish>,
    _watcherManager: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MainnetSpokeConnector> {
    return super.deploy(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _merkle,
      _mirrorConnector,
      _mirrorGas,
      _processGas,
      _reserveGas,
      _delayBlocks,
      _watcherManager,
      overrides || {}
    ) as Promise<MainnetSpokeConnector>;
  }
  override getDeployTransaction(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _merkle: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _mirrorGas: PromiseOrValue<BigNumberish>,
    _processGas: PromiseOrValue<BigNumberish>,
    _reserveGas: PromiseOrValue<BigNumberish>,
    _delayBlocks: PromiseOrValue<BigNumberish>,
    _watcherManager: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _merkle,
      _mirrorConnector,
      _mirrorGas,
      _processGas,
      _reserveGas,
      _delayBlocks,
      _watcherManager,
      overrides || {}
    );
  }
  override attach(address: string): MainnetSpokeConnector {
    return super.attach(address) as MainnetSpokeConnector;
  }
  override connect(signer: Signer): MainnetSpokeConnector__factory {
    return super.connect(signer) as MainnetSpokeConnector__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MainnetSpokeConnectorInterface {
    return new utils.Interface(_abi) as MainnetSpokeConnectorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MainnetSpokeConnector {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MainnetSpokeConnector;
  }
}
