/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  PolygonZkHubConnector,
  PolygonZkHubConnectorInterface,
} from "../../../../../contracts/messaging/connectors/polygonzk/PolygonZkHubConnector";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "_mirrorDomain",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_amb",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rootManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_mirrorNetworkId",
        type: "uint32",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Connector__processMessage_notUsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyOwner_notOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyProposed_notProposedOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__ownershipDelayElapsed_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_noOwnershipChange",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_noProposal",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageProcessed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "encodedData",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previous",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "current",
        type: "address",
      },
    ],
    name: "MirrorConnectorUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "mirrorDomain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "amb",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "rootManager",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "mirrorConnector",
        type: "address",
      },
    ],
    name: "NewConnector",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "proposedOwner",
        type: "address",
      },
    ],
    name: "OwnershipProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "AMB",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIRROR_DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_MANAGER",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptProposedOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "delay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mirrorConnector",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "originAddress",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "originNetwork",
        type: "uint32",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "onMessageReceived",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "processMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newlyProposed",
        type: "address",
      },
    ],
    name: "proposeNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proposed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposedTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounced",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "_encodedData",
        type: "bytes",
      },
    ],
    name: "sendMessage",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
    ],
    name: "setMirrorConnector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_expected",
        type: "address",
      },
    ],
    name: "verifySender",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x610120346200028157601f62000f2c38819003918201601f1916830191906001600160401b0383118484101762000286578160c09285926040958652833981010312620002815762000051826200029c565b9162000060602082016200029c565b906200006e838201620002ae565b916200007d60608301620002ae565b906200009a60a06200009260808601620002ae565b94016200029c565b956000549086519460018060a01b0390338285167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a36001600160a01b031993841633176000908155600255600180548516905563ffffffff838116979096908815620002505750828116938415620002185792606096949281927f4f9c27c2fe3f84576ea469d367d044da53c45e951617e8389f2b5ed8db9d25f09997956080528b60a05260c0528560e05216809381620001d8575b50508951981688526020880152878701521693a361010091825251610c689182620002c483396080518261053d015260a05182818161013d015281816105970152818161069a0152610b77015260c05182818161047601528181610650015261089a015260e0518281816108ed0152610a610152518181816106da01526108520152f35b6003547fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc8d80518684168152856020820152a11617600355823862000154565b8a5162461bcd60e51b815260206004820152601160248201527032b6b83a3c903937b7ba26b0b730b3b2b960791b6044820152606490fd5b62461bcd60e51b815260206004820152600c60248201526b32b6b83a3c903237b6b0b4b760a11b6044820152606490fd5b600080fd5b634e487b7160e01b600052604160045260246000fd5b519063ffffffff821682036200028157565b51906001600160a01b0382168203620002815756fe6080604081815260049182361015610022575b505050361561002057600080fd5b005b600092833560e01c9182631416841614610a45575081631806b5f2146108035781633cf52ffb146107e457816348e6fa23146105ff5781634ff746f61461056157816352a9674b146105205781635bd11efc146104a55781635f61e3ec146104615781636a42b8f814610443578163715018a6146103755781638da5cb5b1461034d578163b1f8100d1461028f578163c5b350df146101e457508063cc394283146101bc578063d1851c9214610194578063d232c2201461016c578063d69f9d61146101295763db1b7659146100f85780610012565b346101255760203660031901126101255760209061011c610117610a85565b610b6d565b90519015158152f35b5080fd5b5034610125578160031936011261012557517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b5034610125578160031936011261012557905490516001600160a01b03909116158152602090f35b503461012557816003193601126101255760015490516001600160a01b039091168152602090f35b503461012557816003193601126101255760035490516001600160a01b039091168152602090f35b9190503461028b578260031936011261028b576001546001600160a01b03929091838316919033830361027e5762093a8061022160025442610c0f565b1115610271575050806000549384167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a36001600160a01b03199283161760009081556002551660015580f35b516324e0285f60e21b8152fd5b516311a7f27160e11b8152fd5b8280fd5b90503461028b57602036600319011261028b576102aa610a85565b83546001600160a01b039391929190841633810361033f57846001549416809585161480610334575b610326578414610319575050426002556001600160a01b03191681176001557f6ab4d119f23076e8ad491bc65ce85f017fb0591dce08755ba8591059cc51737a8280a280f35b51634a2fb73f60e11b8152fd5b50516311bc066560e11b8152fd5b5060025415156102d3565b50516311a8a1bb60e31b8152fd5b505034610125578160031936011261012557905490516001600160a01b039091168152602090f35b9190503461028b578260031936011261028b5782546001600160a01b039290831633036104355760025462093a806103ad8242610c0f565b11156104265715610418576001549183831661040b575050600080549283167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a36001600160a01b031991821660009081556002551660015580f35b516323295ef960e01b8152fd5b9051630e4b303f60e21b8152fd5b5090516324e0285f60e21b8152fd5b90516311a8a1bb60e31b8152fd5b5050346101255781600319360112610125576020905162093a808152f35b505034610125578160031936011261012557517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b90503461028b57602036600319011261028b576104c0610a85565b835490926001600160a01b039290918316330361043557507fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc906003549281519481851686521693846020820152a16001600160a01b0319161760035580f35b5050346101255781600319360112610125576020905163ffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b8284346105fc5760203660031901126105fc5782359067ffffffffffffffff82116105fc57506105949036908401610aca565b507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031633036105d257516316c2fdb560e21b8152fd5b5162461bcd60e51b815260208183015260248101919091526310a0a6a160e11b6044820152606490fd5b80fd5b90508160031936011261028b5767ffffffffffffffff9080358281116107e05761062c9036908301610aca565b916024359081116107e0576106449036908301610aca565b906001600160a01b03907f0000000000000000000000000000000000000000000000000000000000000000821633036107ae5790859181600354169161068d6020875114610bd4565b610698855115610bd4565b7f00000000000000000000000000000000000000000000000000000000000000001690813b156107a05783918751938492630481fe6f60e31b845263ffffffff7f0000000000000000000000000000000000000000000000000000000000000000169084015260248301526001604483015260806064830152818381610721608482018b610b2d565b03925af180156107a457610788575b507fdcaa37a042a0087de79018c629bbd29cee82ca80bd9be394e1696bf9e935507761076e848661077c868251948594606086526060860190610b2d565b908482036020860152610b2d565b9033908301520390a180f35b61079490939293610aa0565b6107a057908338610730565b8380fd5b85513d84823e3d90fd5b606490602086519162461bcd60e51b8352820152600c60248201526b10b937b7ba26b0b730b3b2b960a11b6044820152fd5b8480fd5b5050346101255781600319360112610125576020906002549051908152f35b83915060603660031901126101255761081a610a85565b926024359163ffffffff908184168094036107e05760443567ffffffffffffffff8111610a415761084e9036908301610aca565b93827f00000000000000000000000000000000000000000000000000000000000000001603610a0c57602095868551036109df5761088b90610b6d565b156109ad5783518685015192907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690888110610999575b50803b1561099557869291836044928751968795869463473ec9fd60e11b86527f0000000000000000000000000000000000000000000000000000000000000000169085015260248401525af1801561098b5761095a575b507fb3abc57bfeebd2cac918901db582f71972a8e628bccf19f5ae3e3482b98a5ced929361077c8251938385948552840190610b2d565b926109857fb3abc57bfeebd2cac918901db582f71972a8e628bccf19f5ae3e3482b98a5ced94610aa0565b92610923565b82513d86823e3d90fd5b8680fd5b60001990890360031b1b90931692886108cb565b825162461bcd60e51b8152908101869052600c60248201526b10b61921b7b73732b1ba37b960a11b6044820152606490fd5b835162461bcd60e51b81528083018890526007602482015266042d8cadccee8d60cb1b6044820152606490fd5b606490602084519162461bcd60e51b8352820152600f60248201526e216d6972726f72206e6574776f726b60881b6044820152fd5b8580fd5b84903461012557816003193601126101255760209063ffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b600435906001600160a01b0382168203610a9b57565b600080fd5b67ffffffffffffffff8111610ab457604052565b634e487b7160e01b600052604160045260246000fd5b81601f82011215610a9b5780359067ffffffffffffffff92838311610ab45760405193601f8401601f19908116603f0116850190811185821017610ab45760405282845260208383010111610a9b57816000926020809301838601378301015290565b919082519283825260005b848110610b59575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201610b38565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081163303610ba957806003541691161490565b606460405162461bcd60e51b815260206004820152600460248201526310b0b6b160e11b6044820152fd5b15610bdb57565b60405162461bcd60e51b815260206004820152600c60248201526b042c8c2e8c240d8cadccee8d60a31b6044820152606490fd5b91908203918211610c1c57565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220c45b4335c3c9dbcb13b8af4beabf70686858265c73a7e51e3689373d7965c33b64736f6c63430008110033";

type PolygonZkHubConnectorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PolygonZkHubConnectorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PolygonZkHubConnector__factory extends ContractFactory {
  constructor(...args: PolygonZkHubConnectorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _mirrorNetworkId: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PolygonZkHubConnector> {
    return super.deploy(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _mirrorNetworkId,
      overrides || {}
    ) as Promise<PolygonZkHubConnector>;
  }
  override getDeployTransaction(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _mirrorNetworkId: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _mirrorNetworkId,
      overrides || {}
    );
  }
  override attach(address: string): PolygonZkHubConnector {
    return super.attach(address) as PolygonZkHubConnector;
  }
  override connect(signer: Signer): PolygonZkHubConnector__factory {
    return super.connect(signer) as PolygonZkHubConnector__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PolygonZkHubConnectorInterface {
    return new utils.Interface(_abi) as PolygonZkHubConnectorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PolygonZkHubConnector {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as PolygonZkHubConnector;
  }
}
