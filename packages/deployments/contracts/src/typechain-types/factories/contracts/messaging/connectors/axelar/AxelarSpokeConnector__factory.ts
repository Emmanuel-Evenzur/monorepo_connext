/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BytesLike,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  AxelarSpokeConnector,
  AxelarSpokeConnectorInterface,
} from "../../../../../contracts/messaging/connectors/axelar/AxelarSpokeConnector";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "_mirrorDomain",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_amb",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rootManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_processGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_reserveGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_delayBlocks",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_merkle",
        type: "address",
      },
      {
        internalType: "address",
        name: "_watcherManager",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_axelarParams",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Connector__processMessage_notUsed",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidAddressString",
    type: "error",
  },
  {
    inputs: [],
    name: "NotApprovedByGateway",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyOwner_notOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyProposed_notProposedOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__ownershipDelayElapsed_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_noOwnershipChange",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_noProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "RateLimited__rateLimited_messageSendRateExceeded",
    type: "error",
  },
  {
    inputs: [],
    name: "TypedMemView__index_indexMoreThan32Bytes",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "loc",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "len",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "slice",
        type: "uint256",
      },
    ],
    name: "TypedMemView__index_overrun",
    type: "error",
  },
  {
    inputs: [],
    name: "TypedMemView__unsafeCopyTo_identityOOG",
    type: "error",
  },
  {
    inputs: [],
    name: "TypedMemView__unsafeCopyTo_invalidPointer",
    type: "error",
  },
  {
    inputs: [],
    name: "TypedMemView__unsafeCopyTo_nullPointer",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
    ],
    name: "AggregateRootReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
    ],
    name: "AggregateRootRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
    ],
    name: "AggregateRootVerified",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "updated",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "DelayBlocksUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
    ],
    name: "Dispatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "FundsWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageProcessed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "aggregateRoot",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "aggregateIndex",
        type: "uint256",
      },
    ],
    name: "MessageProven",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "encodedData",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previous",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "current",
        type: "address",
      },
    ],
    name: "MirrorConnectorUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "mirrorDomain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "amb",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "rootManager",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "mirrorConnector",
        type: "address",
      },
    ],
    name: "NewConnector",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "proposedOwner",
        type: "address",
      },
    ],
    name: "OwnershipProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "returnData",
        type: "bytes",
      },
    ],
    name: "Process",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "updater",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newRateLimit",
        type: "uint256",
      },
    ],
    name: "SendRateLimitUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "SenderAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "SenderRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "watcherManager",
        type: "address",
      },
    ],
    name: "WatcherManagerChanged",
    type: "event",
  },
  {
    inputs: [],
    name: "AMB",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MERKLE",
    outputs: [
      {
        internalType: "contract MerkleTreeManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIRROR_CHAIN_ID",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIRROR_DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PROCESS_GAS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "RESERVE_GAS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_MANAGER",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptProposedOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
    ],
    name: "addSender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowlistedSenders",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "delay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "delayBlocks",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_destinationDomain",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "_recipientAddress",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_messageBody",
        type: "bytes",
      },
    ],
    name: "dispatch",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "commandId",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "sourceChain",
        type: "string",
      },
      {
        internalType: "string",
        name: "sourceAddress",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "payload",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "commandId",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "sourceChain",
        type: "string",
      },
      {
        internalType: "string",
        name: "sourceAddress",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "payload",
        type: "bytes",
      },
      {
        internalType: "string",
        name: "tokenSymbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "executeWithToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "gasService",
    outputs: [
      {
        internalType: "contract IAxelarGasService",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "gateway",
    outputs: [
      {
        internalType: "contract IAxelarGateway",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "home",
    outputs: [
      {
        internalType: "contract IOutbox",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_potentialReplica",
        type: "address",
      },
    ],
    name: "isReplica",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastSentBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "localDomain",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "messages",
    outputs: [
      {
        internalType: "enum SpokeConnector.MessageStatus",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mirrorConnector",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "outboundRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "pendingAggregateRoots",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "processMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newlyProposed",
        type: "address",
      },
    ],
    name: "proposeNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proposed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposedTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "message",
            type: "bytes",
          },
          {
            internalType: "bytes32[32]",
            name: "path",
            type: "bytes32[32]",
          },
          {
            internalType: "uint256",
            name: "index",
            type: "uint256",
          },
        ],
        internalType: "struct SpokeConnector.Proof[]",
        name: "_proofs",
        type: "tuple[]",
      },
      {
        internalType: "bytes32",
        name: "_aggregateRoot",
        type: "bytes32",
      },
      {
        internalType: "bytes32[32]",
        name: "_aggregatePath",
        type: "bytes32[32]",
      },
      {
        internalType: "uint256",
        name: "_aggregateIndex",
        type: "uint256",
      },
    ],
    name: "proveAndProcess",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "provenAggregateRoots",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "provenMessageRoots",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rateLimitBlocks",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_fraudulentRoot",
        type: "bytes32",
      },
    ],
    name: "removePendingAggregateRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
    ],
    name: "removeSender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounced",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_encodedData",
        type: "bytes",
      },
    ],
    name: "send",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "sentMessageRoots",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_delayBlocks",
        type: "uint256",
      },
    ],
    name: "setDelayBlocks",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
    ],
    name: "setMirrorConnector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_rateLimit",
        type: "uint256",
      },
    ],
    name: "setRateLimitBlocks",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_watcherManager",
        type: "address",
      },
    ],
    name: "setWatcherManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_expected",
        type: "address",
      },
    ],
    name: "verifySender",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "watcherManager",
    outputs: [
      {
        internalType: "contract WatcherManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
    ],
    name: "withdrawFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6101a06040523480156200001257600080fd5b5060405162004a7238038062004a72833981016040819052620000359162000554565b8881818d8d828d8d8d8d8d8d8d808a8a8a8a8a62000053336200036c565b8463ffffffff166000036200009e5760405162461bcd60e51b815260206004820152600c60248201526b32b6b83a3c903237b6b0b4b760a11b60448201526064015b60405180910390fd5b6001600160a01b038216620000ea5760405162461bcd60e51b815260206004820152601160248201527032b6b83a3c903937b7ba26b0b730b3b2b960791b604482015260640162000095565b63ffffffff8086166080526001600160a01b0380851660a05283811660c05290851660e05281161562000122576200012281620003d1565b604080516001600160a01b0385811682528481166020830152831681830152905163ffffffff86811692908816917f4f9c27c2fe3f84576ea469d367d044da53c45e951617e8389f2b5ed8db9d25f09181900360600190a350506003805460ff60a01b191690555050600480546001600160a01b0319166001600160a01b039390931692909217909155506001600755620cf84f8511620001f55760405162461bcd60e51b815260206004820152600c60248201526b2170726f636573732067617360a01b604482015260640162000095565b613a978411620002375760405162461bcd60e51b815260206004820152600c60248201526b21726573657276652067617360a01b604482015260640162000095565b6101208590526101408490526001600160a01b0382166200028a5760405162461bcd60e51b815260206004820152600c60248201526b217a65726f206d65726b6c6560a01b604482015260640162000095565b506001600160a01b039081166101005260089190915588169650620002c9955050505050505760405163e6c4247b60e01b815260040160405180910390fd5b6001600160a01b03166101605280516000908190620002f290840160209081019085016200063d565b9150915080516000036200033a5760405162461bcd60e51b815260206004820152600e60248201526d085b5a5c9c9bdc90da185a5b925960921b604482015260640162000095565b6001600160a01b03821661018052601062000356828262000737565b5050505050505050505050505050505062000803565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b039092166001600160a01b0319928316178155600255600180549091169055565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b805163ffffffff811681146200044f57600080fd5b919050565b6001600160a01b03811681146200046a57600080fd5b50565b80516200044f8162000454565b634e487b7160e01b600052604160045260246000fd5b60006001600160401b0380841115620004ad57620004ad6200047a565b604051601f8501601f19908116603f01168101908282118183101715620004d857620004d86200047a565b81604052809350858152868686011115620004f257600080fd5b600092505b8583101562000517578285015160208483010152602083019250620004f7565b6000602087830101525050509392505050565b600082601f8301126200053c57600080fd5b6200054d8383516020850162000490565b9392505050565b60008060008060008060008060008060006101608c8e0312156200057757600080fd5b620005828c6200043a565b9a506200059260208d016200043a565b995060408c0151620005a48162000454565b60608d0151909950620005b78162000454565b9750620005c760808d016200046d565b965060a08c0151955060c08c0151945060e08c01519350620005ed6101008d016200046d565b9250620005fe6101208d016200046d565b6101408d01519092506001600160401b038111156200061c57600080fd5b6200062a8e828f016200052a565b9150509295989b509295989b9093969950565b600080604083850312156200065157600080fd5b82516200065e8162000454565b60208401519092506001600160401b038111156200067b57600080fd5b8301601f810185136200068d57600080fd5b6200069e8582516020840162000490565b9150509250929050565b600181811c90821680620006bd57607f821691505b602082108103620006de57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200073257600081815260208120601f850160051c810160208610156200070d5750805b601f850160051c820191505b818110156200072e5782815560010162000719565b5050505b505050565b81516001600160401b038111156200075357620007536200047a565b6200076b81620007648454620006a8565b84620006e4565b602080601f831160018114620007a357600084156200078a5750858301515b600019600386901b1c1916600185901b1785556200072e565b600085815260208120601f198616915b82811015620007d457888601518255948401946001909101908401620007b3565b5085821015620007f35787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60805160a05160c05160e051610100516101205161014051610160516101805161419c620008d6600039600081816106d401526125c401526000818161032101528181610ae501528181610e52015261265e0152600081816103fd0152612034015260008181610a240152818161205501526120e201526000818161082901528181610c84015281816112ac0152611a19015260006103720152600061063b0152600081816109da0152610f1401526000818161058201528181610765015281816119bb0152611f34015261419c6000f3fe6080604052600436106103035760003560e01c8063715018a611610190578063b95a2001116100dc578063d2a3cc7111610095578063d88beda21161006f578063d88beda214610a12578063db1b765914610a46578063e0fed01014610a66578063fa31de0114610a8657600080fd5b8063d2a3cc71146109a8578063d69f9d61146109c8578063d7d317b3146109fc57600080fd5b8063b95a2001146108e1578063c5b350df14610914578063c8a4d69014610929578063cc3942831461094b578063d1851c921461096b578063d232c2201461098957600080fd5b80639fa92f9d11610149578063ad9c0c2e11610123578063ad9c0c2e1461086b578063b1f8100d14610881578063b2f87643146108a1578063b697f531146108c157600080fd5b80639fa92f9d14610804578063a01892a514610817578063a792c29b1461084b57600080fd5b8063715018a61461072c5780638456cb59146107415780638d3638f4146107565780638da5cb5b1461078957806398c9f2b9146107a75780639d3117c7146107d757600080fd5b80635190bc531161024f5780635f61e3ec1161020857806368742da6116101e257806368742da6146106a25780636a22d8cc146106c25780636a42b8f8146106f65780636b04a9331461070c57600080fd5b80635f61e3ec146106295780636159ada11461065d57806365eaf11b1461068d57600080fd5b80635190bc531461054757806352a9674b14610570578063572386ca146105a4578063579c1618146105d45780635bd11efc146105ea5780635c975abb1461060a57600080fd5b80632bbd59ca116102bc5780633f4ba83a116102965780633f4ba83a146104d257806349160658146104e75780634ff746f614610507578063508a109b1461052757600080fd5b80632bbd59ca14610440578063301f07c31461047d5780633cf52ffb146104bd57600080fd5b8063116191b61461030f57806314168416146103605780631a98b2e0146103a95780631eeaabea146103cb57806325e3beda146103eb5780632bb1ae7c1461042d57600080fd5b3661030a57005b600080fd5b34801561031b57600080fd5b506103437f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561036c57600080fd5b506103947f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff9091168152602001610357565b3480156103b557600080fd5b506103c96103c4366004613743565b610ab4565b005b3480156103d757600080fd5b506103c96103e636600461381d565b610b97565b3480156103f757600080fd5b5061041f7f000000000000000000000000000000000000000000000000000000000000000081565b604051908152602001610357565b6103c961043b3660046138d9565b610c41565b34801561044c57600080fd5b5061047061045b36600461381d565b600f6020526000908152604090205460ff1681565b6040516103579190613924565b34801561048957600080fd5b506104ad61049836600461381d565b600a6020526000908152604090205460ff1681565b6040519015158152602001610357565b3480156104c957600080fd5b5060025461041f565b3480156104de57600080fd5b506103c9610de4565b3480156104f357600080fd5b506103c961050236600461394c565b610e21565b34801561051357600080fd5b506103c96105223660046138d9565b610f09565b34801561053357600080fd5b506103c96105423660046139f0565b610faf565b34801561055357600080fd5b506104ad610562366004613a8c565b6001600160a01b0316301490565b34801561057c57600080fd5b506103947f000000000000000000000000000000000000000000000000000000000000000081565b3480156105b057600080fd5b506104ad6105bf36600461381d565b600c6020526000908152604090205460ff1681565b3480156105e057600080fd5b5061041f60055481565b3480156105f657600080fd5b506103c9610605366004613a8c565b611271565b34801561061657600080fd5b50600354600160a01b900460ff166104ad565b34801561063557600080fd5b506103437f000000000000000000000000000000000000000000000000000000000000000081565b34801561066957600080fd5b506104ad610678366004613a8c565b600d6020526000908152604090205460ff1681565b34801561069957600080fd5b5061041f6112a8565b3480156106ae57600080fd5b506103c96106bd366004613a8c565b611331565b3480156106ce57600080fd5b506103437f000000000000000000000000000000000000000000000000000000000000000081565b34801561070257600080fd5b5062093a8061041f565b34801561071857600080fd5b506103c961072736600461381d565b6113ae565b34801561073857600080fd5b506103c9611479565b34801561074d57600080fd5b506103c96114a4565b34801561076257600080fd5b507f0000000000000000000000000000000000000000000000000000000000000000610394565b34801561079557600080fd5b506000546001600160a01b0316610343565b3480156107b357600080fd5b506104ad6107c236600461381d565b600b6020526000908152604090205460ff1681565b3480156107e357600080fd5b5061041f6107f236600461381d565b60096020526000908152604090205481565b34801561081057600080fd5b5030610343565b34801561082357600080fd5b506103437f000000000000000000000000000000000000000000000000000000000000000081565b34801561085757600080fd5b50600454610343906001600160a01b031681565b34801561087757600080fd5b5061041f60085481565b34801561088d57600080fd5b506103c961089c366004613a8c565b611558565b3480156108ad57600080fd5b506103c96108bc366004613a8c565b6115f6565b3480156108cd57600080fd5b506103c96108dc366004613a8c565b611672565b3480156108ed57600080fd5b506103946108fc366004613ace565b600e6020526000908152604090205463ffffffff1681565b34801561092057600080fd5b506103c96116f1565b34801561093557600080fd5b5061093e611761565b6040516103579190613b39565b34801561095757600080fd5b50600354610343906001600160a01b031681565b34801561097757600080fd5b506001546001600160a01b0316610343565b34801561099557600080fd5b506000546001600160a01b0316156104ad565b3480156109b457600080fd5b506103c96109c3366004613a8c565b6117ef565b3480156109d457600080fd5b506103437f000000000000000000000000000000000000000000000000000000000000000081565b348015610a0857600080fd5b5061041f60065481565b348015610a1e57600080fd5b5061041f7f000000000000000000000000000000000000000000000000000000000000000081565b348015610a5257600080fd5b506104ad610a61366004613a8c565b6118c6565b348015610a7257600080fd5b506103c9610a8136600461381d565b6118e6565b348015610a9257600080fd5b50610aa6610aa1366004613b4c565b61191a565b604051610357929190613ba3565b60008585604051610ac6929190613bbc565b604051908190038120631876eed960e01b825291506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690631876eed990610b2a908e908e908e908e908e9089908d908d908d90600401613bf5565b6020604051808303816000875af1158015610b49573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b6d9190613c54565b610b8a57604051631403112d60e21b815260040160405180910390fd5b5050505050505050505050565b6000546001600160a01b03163314610bc2576040516311a8a1bb60e31b815260040160405180910390fd5b6008548103610c075760405162461bcd60e51b815260206004820152600c60248201526b2164656c6179426c6f636b7360a01b60448201526064015b60405180910390fd5b60405133815281907f8bd16320f3b60336ed5fd2a770eb7453e7e71cfef4462addffd7ae9dfe201c8e9060200160405180910390a2600855565b610c49611ae9565b43600554600654610c5a9190613c8c565b1115610c79576040516346cf2af160e11b815260040160405180910390fd5b4360068190555060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ebf0c7176040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ce0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d049190613c9f565b6000818152600c602052604090205490915060ff1615610d5a5760405162461bcd60e51b81526020600482015260116024820152701c9bdbdd08185b1c9958591e481cd95b9d607a1b6044820152606401610bfe565b600081604051602001610d6f91815260200190565b6040516020818303038152906040529050610d8a8184611b36565b6000828152600c602052604090819020805460ff19166001179055517fdcaa37a042a0087de79018c629bbd29cee82ca80bd9be394e1696bf9e935507790610dd790839086903390613cb8565b60405180910390a1505050565b6000546001600160a01b03163314610e0f576040516311a8a1bb60e31b815260040160405180910390fd5b610e17611b51565b610e1f611ba1565b565b60008282604051610e33929190613bbc565b604051908190038120635f6970c360e01b825291506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690635f6970c390610e91908b908b908b908b908b908990600401613cf6565b6020604051808303816000875af1158015610eb0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ed49190613c54565b610ef157604051631403112d60e21b815260040160405180910390fd5b610eff878787878787611bf6565b5050505050505050565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610f6a5760405162461bcd60e51b8152600401610bfe9060208082526004908201526310a0a6a160e11b604082015260600190565b610f7381611d0a565b7fb3abc57bfeebd2cac918901db582f71972a8e628bccf19f5ae3e3482b98a5ced8133604051610fa4929190613d37565b60405180910390a150565b610fb7611ae9565b610fbf611d23565b83610ff65760405162461bcd60e51b81526020600482015260076024820152662170726f6f667360c81b6044820152606401610bfe565b60008585600081811061100b5761100b613d61565b905060200281019061101d9190613d77565b6110279080613d98565b604051611035929190613bbc565b60405180910390209050600061109c828888600081811061105857611058613d61565b905060200281019061106a9190613d77565b6020018989600081811061108057611080613d61565b90506020028101906110929190613d77565b6104200135611d7c565b90506110aa81868686611e23565b6000828152600f60205260409020805460ff1916600190811790915586905b818163ffffffff1610156111d05788888263ffffffff168181106110ef576110ef613d61565b90506020028101906111019190613d77565b61110b9080613d98565b604051611119929190613bbc565b60405180910390209350600061116e858b8b8563ffffffff1681811061114157611141613d61565b90506020028101906111539190613d77565b6020018c8c8663ffffffff1681811061108057611080613d61565b90508381146111ad5760405162461bcd60e51b815260206004820152600b60248201526a085cda185c9959149bdbdd60aa1b6044820152606401610bfe565b506000848152600f60205260409020805460ff19166001908117909155016110c9565b5060005b818163ffffffff16101561125c5761125389898363ffffffff168181106111fd576111fd613d61565b905060200281019061120f9190613d77565b6112199080613d98565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611f1e92505050565b506001016111d4565b5050505061126a6001600755565b5050505050565b6000546001600160a01b0316331461129c576040516311a8a1bb60e31b815260040160405180910390fd5b6112a5816121fb565b50565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ebf0c7176040518163ffffffff1660e01b8152600401602060405180830381865afa158015611308573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061132c9190613c9f565b905090565b6000546001600160a01b0316331461135c576040516311a8a1bb60e31b815260040160405180910390fd5b476113678282612264565b816001600160a01b03167feaff4b37086828766ad3268786972c0cd24259d4c87a80f9d3963a3c3d999b0d826040516113a291815260200190565b60405180910390a25050565b6000546001600160a01b031633146113d9576040516311a8a1bb60e31b815260040160405180910390fd5b6113e1611b51565b60008181526009602052604081205490036114365760405162461bcd60e51b8152602060048201526015602482015274616767726567617465526f6f74202165786973747360581b6044820152606401610bfe565b60008181526009602052604080822091909155517ff51534ecf10a58db36ce4f5180f59deddf3b3eb7c5e7454e602c2f80a40cc73990610fa49083815260200190565b6000546001600160a01b03163314610e1f576040516311a8a1bb60e31b815260040160405180910390fd5b600480546040516384785ecd60e01b815233928101929092526001600160a01b0316906384785ecd90602401602060405180830381865afa1580156114ed573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115119190613c54565b6115485760405162461bcd60e51b815260206004820152600860248201526710bbb0ba31b432b960c11b6044820152606401610bfe565b611550611ae9565b610e1f612382565b6000546001600160a01b03163314611583576040516311a8a1bb60e31b815260040160405180910390fd5b6001546001600160a01b0382811691161480156115a1575060025415155b156115bf576040516311bc066560e11b815260040160405180910390fd5b6000546001600160a01b038083169116036115ed57604051634a2fb73f60e11b815260040160405180910390fd5b6112a5816123c5565b6000546001600160a01b03163314611621576040516311a8a1bb60e31b815260040160405180910390fd5b6001600160a01b0381166000818152600d6020908152604091829020805460ff1916905590519182527f384859c5ef5fafac31e8bc92ce7fb48b1f2c74c4dd5e212eb84ec202fa5d9fad9101610fa4565b6000546001600160a01b0316331461169d576040516311a8a1bb60e31b815260040160405180910390fd5b6001600160a01b0381166000818152600d6020908152604091829020805460ff1916600117905590519182527fd65eca5d561d3a4568c87b9b13ced4ab52a69edadfdfdb22d76bc595f36d7d879101610fa4565b6001546001600160a01b0316331461171c576040516311a7f27160e11b815260040160405180910390fd5b62093a806002544261172e9190613ddf565b1161174c576040516324e0285f60e21b815260040160405180910390fd5b600154610e1f906001600160a01b0316612413565b6010805461176e90613df2565b80601f016020809104026020016040519081016040528092919081815260200182805461179a90613df2565b80156117e75780601f106117bc576101008083540402835291602001916117e7565b820191906000526020600020905b8154815290600101906020018083116117ca57829003601f168201915b505050505081565b6000546001600160a01b0316331461181a576040516311a8a1bb60e31b815260040160405180910390fd5b6004546001600160a01b03908116908216036118785760405162461bcd60e51b815260206004820152601760248201527f616c72656164792077617463686572206d616e616765720000000000000000006044820152606401610bfe565b600480546001600160a01b0319166001600160a01b0383169081179091556040519081527fc16d059e43d7f8e29ccb4e001a2f249d3c59e274925d6a6bc3912943441d9f6c90602001610fa4565b60006118e0826003546001600160a01b0391821691161490565b92915050565b6000546001600160a01b03163314611911576040516311a8a1bb60e31b815260040160405180910390fd5b6112a581612478565b336000908152600d602052604081205460609060ff1661196b5760405162461bcd60e51b815260206004820152600c60248201526b08585b1b1bdddb1a5cdd195960a21b6044820152606401610bfe565b63ffffffff8086166000908152600e602052604081208054919291909116908261199483613e2c565b91906101000a81548163ffffffff021916908363ffffffff160217905550905060006119f37f00000000000000000000000000000000000000000000000000000000000000006119ea336001600160a01b031690565b848a8a8a6124f6565b80516020820120604051632d287e4360e01b8152600481018290529192509060009081907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632d287e439060240160408051808303816000875af1158015611a69573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a8d9190613e4f565b90925090507f40f08ee347fc927ae45902edc87debb024aab1a311943731968607f603f2152f83611abf600184613ddf565b8487604051611ad19493929190613e73565b60405180910390a15090989197509095505050505050565b600354600160a01b900460ff1615610e1f5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610bfe565b600354611b4d906001600160a01b0316838361252e565b5050565b600354600160a01b900460ff16610e1f5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610bfe565b611ba9611b51565b6003805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6010604051602001611c089190613ea2565b604051602081830303815290604052805190602001208686604051602001611c31929190613bbc565b6040516020818303038152906040528051906020012014611c845760405162461bcd60e51b815260206004820152600d60248201526c10b9b7bab931b29031b430b4b760991b6044820152606401610bfe565b611d02611cc685858080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506126c992505050565b83838080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061284892505050565b505050505050565b6040516316c2fdb560e21b815260040160405180910390fd5b600260075403611d755760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610bfe565b6002600755565b6000806000858152600f602052604090205460ff166002811115611da257611da261390e565b14611de55760405162461bcd60e51b8152602060048201526013602482015272214d6573736167655374617475732e4e6f6e6560681b6044820152606401610bfe565b611e198484602080602002604051908101604052809291908260208002808284376000920191909152508691506129219050565b90505b9392505050565b6000848152600b602052604090205460ff16611f1857611e4283612c6f565b6000611e788584602080602002604051908101604052809291908260208002808284376000920191909152508691506129219050565b9050838114611ebf5760405162461bcd60e51b81526020600482015260136024820152721a5b9d985b1a59081a5b989bdd5b99149bdbdd606a1b6044820152606401610bfe565b6000858152600b602052604090819020805460ff1916600117905551849086907f7ec1ea51fe3db53e55ed9d922854bc2156f467ff2f87d74e2086dae2c84a88a890611f0e9086815260200190565b60405180910390a3505b50505050565b600080611f2b8382612dcf565b905063ffffffff7f000000000000000000000000000000000000000000000000000000000000000016611f6362ffffff198316612df3565b63ffffffff1614611fa55760405162461bcd60e51b815260206004820152600c60248201526b10b232b9ba34b730ba34b7b760a11b6044820152606401610bfe565b6000611fb662ffffff198316612e08565b905060016000828152600f602052604090205460ff166002811115611fdd57611fdd61390e565b146120145760405162461bcd60e51b815260206004820152600760248201526610b83937bb32b760c91b6044820152606401610bfe565b6000818152600f60205260409020805460ff1916600217905560016120797f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000613c8c565b6120839190613ddf565b5a116120ba5760405162461bcd60e51b8152600401610bfe906020808252600490820152632167617360e01b604082015260600190565b60006120cb62ffffff198416612e51565b6040805161010080825261012082019092529192507f00000000000000000000000000000000000000000000000000000000000000009160009082602082018180368337019050509050600061212662ffffff198816612e62565b61213562ffffff198916612e76565b61214462ffffff198a16612e8b565b61216161215662ffffff198c16612ea0565b62ffffff1916612ece565b6040516024016121749493929190613f18565b60408051601f198184030181529190526020810180516001600160e01b031663ab2dc3f560e01b17905290506121ae858560008685612f17565b60405191995092507fd42de95a9b26f1be134c8ecce389dc4fcfa18753d01661b7b361233569e8fe48906121e79088908b908690613f47565b60405180910390a150505050505050919050565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b804710156122b45760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e63650000006044820152606401610bfe565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114612301576040519150601f19603f3d011682016040523d82523d6000602084013e612306565b606091505b505090508061237d5760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d617920686176652072657665727465640000000000006064820152608401610bfe565b505050565b61238a611ae9565b6003805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258611bd93390565b42600255600180546001600160a01b0319166001600160a01b0383169081179091556040517f6ab4d119f23076e8ad491bc65ce85f017fb0591dce08755ba8591059cc51737a90600090a250565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b039092166001600160a01b0319928316178155600255600180549091169055565b60055481036124bb5760405162461bcd60e51b815260206004820152600f60248201526e085b995dc81c985d19481b1a5b5a5d608a1b6044820152606401610bfe565b600581905560408051338152602081018390527f8e7fa5e406cb856aab05575e45ea011c6748376cc1b5229e3d67b92986406a159101610fa4565b606086868686868660405160200161251396959493929190613f68565b60405160208183030381529060405290509695505050505050565b815160201461256e5760405162461bcd60e51b815260206004820152600c60248201526b042c8c2e8c240d8cadccee8d60a31b6044820152606401610bfe565b8051156125ac5760405162461bcd60e51b815260206004820152600c60248201526b042c8c2e8c240d8cadccee8d60a31b6044820152606401610bfe565b60006125c0846001600160a01b0316612fa2565b90507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316630c93e3bb343060108588336040518763ffffffff1660e01b815260040161261895949392919061403f565b6000604051808303818588803b15801561263157600080fd5b505af1158015612645573d6000803e3d6000fd5b5050604051631c92115f60e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169350631c92115f925061269b91506010908590889060040161409d565b600060405180830381600087803b1580156126b557600080fd5b505af1158015610eff573d6000803e3d6000fd5b6000808290506000808251602a1415806127095750826000815181106126f1576126f1613d61565b6020910101516001600160f81b031916600360fc1b14155b8061273a57508260018151811061272257612722613d61565b6020910101516001600160f81b031916600f60fb1b14155b1561275857604051636fa478cf60e11b815260040160405180910390fd5b60025b602a81101561283e5783818151811061277657612776613d61565b016020015160f81c915060618210801590612795575060668260ff1611155b156127ac576127a56057836140d6565b9150612815565b60418260ff16101580156127c4575060468260ff1611155b156127d4576127a56037836140d6565b60308260ff16101580156127ec575060398260ff1611155b156127fc576127a56030836140d6565b604051636fa478cf60e11b815260040160405180910390fd5b6002612822826029613ddf565b60ff8416911b1b9290921791612837816140ef565b905061275b565b5090949350505050565b6003546001600160a01b038381169116146128985760405162461bcd60e51b815260206004820152601060248201526f10b6b4b93937b921b7b73732b1ba37b960811b6044820152606401610bfe565b80516020146128d35760405162461bcd60e51b8152602060048201526007602482015266042d8cadccee8d60cb1b6044820152606401610bfe565b6128e46128df82614108565b6131ed565b7fb3abc57bfeebd2cac918901db582f71972a8e628bccf19f5ae3e3482b98a5ced8133604051612915929190613d37565b60405180910390a15050565b6020600582811b8216948552835194820394909452604060008181206002851615871b808503919091528386015190528181206004851615871b808503919091528286015190528181206008851615871b80850391909152606086015190528181206010851615871b8085039190915260808087015190915282822084861615881b8086039190915260a0870151905282822083861615881b8086039190915260c0870151905282822090851615871b8085039190915260e0860151905281812061010080861615881b80860392909252860151905281812061020080861615881b80860392909252610120870151909152828220610400861615881b808603919091526101408701519052828220610800861615881b808603919091526101608701519052828220611000861615881b808603919091526101808701519052828220612000861615881b808603919091526101a08701519052828220614000861615881b808603919091526101c08701519052828220618000861615881b808603919091526101e0870151905282822062010000861615881b8086039190915290860151905281812062020000851615871b80850391909152610220860151905281812062040000851615871b80850391909152610240860151905281812062080000851615871b80850391909152610260860151905281812062100000851615871b80850391909152610280860151905281812062200000851615871b808503919091526102a0860151905281812062400000851615871b808503919091526102c0860151905281812062800000851615871b808503919091526102e086015190528181206301000000851615871b8085039190915261030086015190528181206302000000851615871b8085039190915261032086015190528181206304000000851615871b8085039190915261034086015190528181206308000000851615871b8085039190915261036086015190528181206310000000851615871b8085039190915261038086015190528181206320000000851615871b808503919091526103a086015190528181206340000000851615871b808503919091526103c0860151905281812063800000009094161590951b91829003929092526103e090920151909152902090565b80612cb25760405162461bcd60e51b8152602060048201526013602482015272616767726567617465526f6f7420656d70747960681b6044820152606401610bfe565b6000818152600a602052604090205460ff1615612ccc5750565b60008181526009602052604081205490819003612d225760405162461bcd60e51b81526020600482015260146024820152731859d9dc9959d85d19549bdbdd0808595e1a5cdd60621b6044820152606401610bfe565b600854612d2f8243613ddf565b1015612d7d5760405162461bcd60e51b815260206004820152601760248201527f616767726567617465526f6f74202176657269666965640000000000000000006044820152606401610bfe565b6000828152600a6020526040808220805460ff191660011790555183917f36b314aba9f663b4d3ef3288ae489341cc5e6a2725a05fa2b72df7a27e03f42a91a250600090815260096020526040812055565b815160009060208401612dea64ffffffffff85168284613316565b95945050505050565b60006118e062ffffff19831660286004613353565b600080612e1e8360781c6001600160601b031690565b6001600160601b031690506000612e3e8460181c6001600160601b031690565b6001600160601b03169091209392505050565b60006118e0612e5f83613383565b90565b60006118e062ffffff198316826004613353565b60006118e062ffffff19831660246004613353565b60006118e062ffffff19831660046020613394565b60006118e0604c612ebe81601886901c6001600160601b0316613ddf565b62ffffff1985169190600061349f565b6060600080612ee68460181c6001600160601b031690565b6001600160601b031690506040519150819250612f06848360200161351b565b508181016020016040529052919050565b6000606060008060008661ffff1667ffffffffffffffff811115612f3d57612f3d613836565b6040519080825280601f01601f191660200182016040528015612f67576020820181803683370190505b5090506000808751602089018b8e8ef191503d925086831115612f88578692505b828152826000602083013e90999098509650505050505050565b604051606082811b6bffffffffffffffffffffffff191660208301529060009060340160408051601f198184030181528282528051838301909252601083526f181899199a1a9b1b9c1cb0b131b232b360811b6020840152805190935090919060009061301090600261412c565b61301b906002613c8c565b67ffffffffffffffff81111561303357613033613836565b6040519080825280601f01601f19166020018201604052801561305d576020820181803683370190505b509050600360fc1b8160008151811061307857613078613d61565b60200101906001600160f81b031916908160001a905350600f60fb1b816001815181106130a7576130a7613d61565b60200101906001600160f81b031916908160001a90535060005b838110156131e3578260048683815181106130de576130de613d61565b016020015182516001600160f81b031990911690911c60f81c90811061310657613106613d61565b01602001516001600160f81b0319168261312183600261412c565b61312c906002613c8c565b8151811061313c5761313c613d61565b60200101906001600160f81b031916908160001a9053508285828151811061316657613166613d61565b602091010151815160f89190911c600f1690811061318657613186613d61565b01602001516001600160f81b031916826131a183600261412c565b6131ac906003613c8c565b815181106131bc576131bc613d61565b60200101906001600160f81b031916908160001a9053506131dc816140ef565b90506130c1565b5095945050505050565b8061322b5760405162461bcd60e51b815260206004820152600e60248201526d6e657720726f6f7420656d70747960901b6044820152606401610bfe565b6000818152600960205260409020541561327e5760405162461bcd60e51b8152602060048201526014602482015273726f6f7420616c72656164792070656e64696e6760601b6044820152606401610bfe565b6000818152600a602052604090205460ff16156132d35760405162461bcd60e51b81526020600482015260136024820152723937b7ba1030b63932b0b23c90383937bb32b760691b6044820152606401610bfe565b60008181526009602052604090819020439055517f84ef18531155afdb0e64ff905d67044ae3aac63a6fba4661cfd9c4c14f289bc890610fa49083815260200190565b6000806133238385613c8c565b9050604051811115613333575060005b806000036133485762ffffff19915050611e1c565b612dea85858561360e565b60006133608260206140d6565b61336b906008614143565b60ff16613379858585613394565b901c949350505050565b60006118e062ffffff198316602c60205b60008160ff166000036133a957506000611e1c565b6133bc8460181c6001600160601b031690565b6001600160601b03166133d260ff841685613c8c565b111561343a576133eb8460781c6001600160601b031690565b6133fe8560181c6001600160601b031690565b6040516378218d2960e01b81526001600160601b039283166004820152911660248201526044810184905260ff83166064820152608401610bfe565b60208260ff16111561345f5760405163045df3f960e01b815260040160405180910390fd5b6008820260006134788660781c6001600160601b031690565b6001600160601b031690506000600160ff1b60001984011d91909501511695945050505050565b6000806134b58660781c6001600160601b031690565b6001600160601b031690506134c986613685565b846134d48784613c8c565b6134de9190613c8c565b11156134f15762ffffff19915050613513565b6134fb8582613c8c565b905061350f8364ffffffffff168286613316565b9150505b949350505050565b600062ffffff19808416036135435760405163148d513360e21b815260040160405180910390fd5b61354c836136be565b1561356a57604051632ee0949160e11b815260040160405180910390fd5b600061357f8460181c6001600160601b031690565b6001600160601b03169050600061359f8560781c6001600160601b031690565b6001600160601b031690506000806040519150858211156135c05760206060fd5b8386858560045afa9050806135e857604051632af1bd9b60e21b815260040160405180910390fd5b6136036135f58860d81c90565b64ffffffffff16878661360e565b979650505050505050565b60006060601883856001600160601b03821682148015613636575086816001600160601b0316145b61366f5760405162461bcd60e51b815260206004820152600a602482015269085d1c9d5b98d85d195960b21b6044820152606401610bfe565b96831b90961790911b90941790931b9392505050565b600061369a8260181c6001600160601b031690565b6136ad8360781c6001600160601b031690565b016001600160601b03169050919050565b60006136ca8260d81c90565b64ffffffffff1664ffffffffff036136e457506001919050565b60006136ef83613685565b604051109392505050565b60008083601f84011261370c57600080fd5b50813567ffffffffffffffff81111561372457600080fd5b60208301915083602082850101111561373c57600080fd5b9250929050565b60008060008060008060008060008060c08b8d03121561376257600080fd5b8a35995060208b013567ffffffffffffffff8082111561378157600080fd5b61378d8e838f016136fa565b909b50995060408d01359150808211156137a657600080fd5b6137b28e838f016136fa565b909950975060608d01359150808211156137cb57600080fd5b6137d78e838f016136fa565b909750955060808d01359150808211156137f057600080fd5b506137fd8d828e016136fa565b9150809450508092505060a08b013590509295989b9194979a5092959850565b60006020828403121561382f57600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261385d57600080fd5b813567ffffffffffffffff8082111561387857613878613836565b604051601f8301601f19908116603f011681019082821181831017156138a0576138a0613836565b816040528381528660208588010111156138b957600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000602082840312156138eb57600080fd5b813567ffffffffffffffff81111561390257600080fd5b6135138482850161384c565b634e487b7160e01b600052602160045260246000fd5b602081016003831061394657634e487b7160e01b600052602160045260246000fd5b91905290565b60008060008060008060006080888a03121561396757600080fd5b87359650602088013567ffffffffffffffff8082111561398657600080fd5b6139928b838c016136fa565b909850965060408a01359150808211156139ab57600080fd5b6139b78b838c016136fa565b909650945060608a01359150808211156139d057600080fd5b506139dd8a828b016136fa565b989b979a50959850939692959293505050565b60008060008060006104608688031215613a0957600080fd5b853567ffffffffffffffff80821115613a2157600080fd5b818801915088601f830112613a3557600080fd5b813581811115613a4457600080fd5b8960208260051b8501011115613a5957600080fd5b602092830197509550508601359250610440860187811115613a7a57600080fd5b94979396509194604001933592915050565b600060208284031215613a9e57600080fd5b81356001600160a01b0381168114611e1c57600080fd5b803563ffffffff81168114613ac957600080fd5b919050565b600060208284031215613ae057600080fd5b611e1c82613ab5565b60005b83811015613b04578181015183820152602001613aec565b50506000910152565b60008151808452613b25816020860160208601613ae9565b601f01601f19169290920160200192915050565b602081526000611e1c6020830184613b0d565b600080600060608486031215613b6157600080fd5b613b6a84613ab5565b925060208401359150604084013567ffffffffffffffff811115613b8d57600080fd5b613b998682870161384c565b9150509250925092565b828152604060208201526000611e196040830184613b0d565b8183823760009101908152919050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b89815260c060208201526000613c0f60c083018a8c613bcc565b8281036040840152613c2281898b613bcc565b90508660608401528281036080840152613c3d818688613bcc565b9150508260a08301529a9950505050505050505050565b600060208284031215613c6657600080fd5b81518015158114611e1c57600080fd5b634e487b7160e01b600052601160045260246000fd5b808201808211156118e0576118e0613c76565b600060208284031215613cb157600080fd5b5051919050565b606081526000613ccb6060830186613b0d565b8281036020840152613cdd8186613b0d565b91505060018060a01b0383166040830152949350505050565b868152608060208201526000613d10608083018789613bcc565b8281036040840152613d23818688613bcc565b915050826060830152979650505050505050565b604081526000613d4a6040830185613b0d565b905060018060a01b03831660208301529392505050565b634e487b7160e01b600052603260045260246000fd5b6000823561043e19833603018112613d8e57600080fd5b9190910192915050565b6000808335601e19843603018112613daf57600080fd5b83018035915067ffffffffffffffff821115613dca57600080fd5b60200191503681900382131561373c57600080fd5b818103818111156118e0576118e0613c76565b600181811c90821680613e0657607f821691505b602082108103613e2657634e487b7160e01b600052602260045260246000fd5b50919050565b600063ffffffff808316818103613e4557613e45613c76565b6001019392505050565b60008060408385031215613e6257600080fd5b505080516020909101519092909150565b848152836020820152826040820152608060608201526000613e986080830184613b0d565b9695505050505050565b6000808354613eb081613df2565b60018281168015613ec85760018114613edd57613f0c565b60ff1984168752821515830287019450613f0c565b8760005260208060002060005b85811015613f035781548a820152908401908201613eea565b50505082870194505b50929695505050505050565b600063ffffffff808716835280861660208401525083604083015260806060830152613e986080830184613b0d565b8381528215156020820152606060408201526000612dea6060830184613b0d565b600063ffffffff60e01b808960e01b168352876004840152808760e01b166024840152808660e01b1660288401525083602c8301528251613fb081604c850160208701613ae9565b91909101604c01979650505050505050565b60008154613fcf81613df2565b808552602060018381168015613fec576001811461400657614034565b60ff1985168884015283151560051b880183019550614034565b866000528260002060005b8581101561402c5781548a8201860152908301908401614011565b890184019650505b505050505092915050565b600060018060a01b03808816835260a0602084015261406160a0840188613fc2565b83810360408501526140738188613b0d565b905083810360608501526140878187613b0d565b9250508084166080840152509695505050505050565b6060815260006140b06060830186613fc2565b82810360208401526140c28186613b0d565b9050828103604084015261350f8185613b0d565b60ff82811682821603908111156118e0576118e0613c76565b60006001820161410157614101613c76565b5060010190565b80516020808301519190811015613e265760001960209190910360031b1b16919050565b80820281158282048414176118e0576118e0613c76565b60ff818116838216029081169081811461415f5761415f613c76565b509291505056fea26469706673582212205c470cdd092e7c4938e4228d499a9cab8f870cf524192575fa71041cc660ea7a64736f6c63430008110033";

type AxelarSpokeConnectorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AxelarSpokeConnectorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AxelarSpokeConnector__factory extends ContractFactory {
  constructor(...args: AxelarSpokeConnectorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _processGas: PromiseOrValue<BigNumberish>,
    _reserveGas: PromiseOrValue<BigNumberish>,
    _delayBlocks: PromiseOrValue<BigNumberish>,
    _merkle: PromiseOrValue<string>,
    _watcherManager: PromiseOrValue<string>,
    _axelarParams: PromiseOrValue<BytesLike>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AxelarSpokeConnector> {
    return super.deploy(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _processGas,
      _reserveGas,
      _delayBlocks,
      _merkle,
      _watcherManager,
      _axelarParams,
      overrides || {}
    ) as Promise<AxelarSpokeConnector>;
  }
  override getDeployTransaction(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _processGas: PromiseOrValue<BigNumberish>,
    _reserveGas: PromiseOrValue<BigNumberish>,
    _delayBlocks: PromiseOrValue<BigNumberish>,
    _merkle: PromiseOrValue<string>,
    _watcherManager: PromiseOrValue<string>,
    _axelarParams: PromiseOrValue<BytesLike>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _processGas,
      _reserveGas,
      _delayBlocks,
      _merkle,
      _watcherManager,
      _axelarParams,
      overrides || {}
    );
  }
  override attach(address: string): AxelarSpokeConnector {
    return super.attach(address) as AxelarSpokeConnector;
  }
  override connect(signer: Signer): AxelarSpokeConnector__factory {
    return super.connect(signer) as AxelarSpokeConnector__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AxelarSpokeConnectorInterface {
    return new utils.Interface(_abi) as AxelarSpokeConnectorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AxelarSpokeConnector {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as AxelarSpokeConnector;
  }
}
