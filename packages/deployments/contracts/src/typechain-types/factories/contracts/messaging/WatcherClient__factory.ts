/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  WatcherClient,
  WatcherClientInterface,
} from "../../../contracts/messaging/WatcherClient";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_watcherManager",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyOwner_notOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyProposed_notProposedOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__ownershipDelayElapsed_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_noOwnershipChange",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_noProposal",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "proposedOwner",
        type: "address",
      },
    ],
    name: "OwnershipProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "watcherManager",
        type: "address",
      },
    ],
    name: "WatcherManagerChanged",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptProposedOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "delay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newlyProposed",
        type: "address",
      },
    ],
    name: "proposeNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proposed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposedTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounced",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_watcherManager",
        type: "address",
      },
    ],
    name: "setWatcherManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "watcherManager",
    outputs: [
      {
        internalType: "contract WatcherManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60803461008257601f61075838819003918201601f19168301916001600160401b038311848410176100875780849260209460405283398101031261008257516001600160a01b038116810361008257600380546001600160a81b03191660089290921b610100600160a81b03169190911790556040516106ba908161009e8239f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe608060408181526004908136101561001657600080fd5b600092833560e01c9081633cf52ffb146105db575080633f4ba83a146105635780635c975abb1461053f5780636a42b8f814610521578063715018a6146104ee5780638456cb59146103bb5780638da5cb5b14610393578063a792c29b14610366578063b1f8100d146102a5578063c5b350df146101f0578063d1851c92146101c7578063d232c2201461019a5763d2a3cc71146100b357600080fd5b34610196576020366003190112610196576001600160a01b038235818116938482036101925782865416330361018457600354928360081c1685146101415750610100600160a81b031990911660089190911b610100600160a81b031617600355519081527fc16d059e43d7f8e29ccb4e001a2f249d3c59e274925d6a6bc3912943441d9f6c90602090a180f35b606490602085519162461bcd60e51b8352820152601760248201527f616c72656164792077617463686572206d616e616765720000000000000000006044820152fd5b83516311a8a1bb60e31b8152fd5b8580fd5b8280fd5b8382346101c357816003193601126101c357905490516001600160a01b03909116158152602090f35b5080fd5b8382346101c357816003193601126101c35760015490516001600160a01b039091168152602090f35b50346101965782600319360112610196576001546001600160a01b0392909183831691903383036102985760025442034281116102855762093a8010156102785750508084549384167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08680a36001600160a01b031992831617835560028390551660015580f35b516324e0285f60e21b8152fd5b634e487b7160e01b875260118352602487fd5b516311a7f27160e11b8152fd5b5034610196576020366003190112610196576001600160a01b03823581811693919290849003610362578285541633810361035457846001549485161480610349575b61033b57841461032e575050426002556001600160a01b03191681176001557f6ab4d119f23076e8ad491bc65ce85f017fb0591dce08755ba8591059cc51737a8280a280f35b51634a2fb73f60e11b8152fd5b50516311bc066560e11b8152fd5b5060025415156102e8565b50516311a8a1bb60e31b8152fd5b8480fd5b8382346101c357816003193601126101c357600354905160089190911c6001600160a01b03168152602090f35b8382346101c357816003193601126101c357905490516001600160a01b039091168152602090f35b509190346101c357816003193601126101c35760035483516384785ecd60e01b8152338382015290936020929091838160248160088a901c6001600160a01b03165afa9081156104e4578591610484575b5015610458575060017f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2589394610440610640565b610448610640565b60ff19161760035551338152a180f35b82606492519162461bcd60e51b8352820152600860248201526710bbb0ba31b432b960c11b6044820152fd5b9050833d85116104dd575b601f8101601f1916820167ffffffffffffffff8111838210176104ca578591839186528101031261036257518015158103610362573861040c565b634e487b7160e01b875260418452602487fd5b503d61048f565b83513d87823e3d90fd5b503461019657826003193601126101965782546001600160a01b03163303610514578280f35b516311a8a1bb60e31b8152fd5b8382346101c357816003193601126101c3576020905162093a808152f35b8382346101c357816003193601126101c35760209060ff6003541690519015158152f35b50903461019657826003193601126101965782546001600160a01b031633036105cd575060207f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa916105b36105f7565b6105bb6105f7565b60ff196003541660035551338152a180f35b90516311a8a1bb60e31b8152fd5b8490346101c357816003193601126101c3576020906002548152f35b60ff600354161561060457565b60405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606490fd5b60ff6003541661064c57565b60405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606490fdfea26469706673582212203f9f46c91ce157151110995e192bbfaf226ebb31975286a37da2a1599308f19364736f6c63430008110033";

type WatcherClientConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WatcherClientConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class WatcherClient__factory extends ContractFactory {
  constructor(...args: WatcherClientConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _watcherManager: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<WatcherClient> {
    return super.deploy(
      _watcherManager,
      overrides || {}
    ) as Promise<WatcherClient>;
  }
  override getDeployTransaction(
    _watcherManager: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_watcherManager, overrides || {});
  }
  override attach(address: string): WatcherClient {
    return super.attach(address) as WatcherClient;
  }
  override connect(signer: Signer): WatcherClient__factory {
    return super.connect(signer) as WatcherClient__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WatcherClientInterface {
    return new utils.Interface(_abi) as WatcherClientInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): WatcherClient {
    return new Contract(address, _abi, signerOrProvider) as WatcherClient;
  }
}
