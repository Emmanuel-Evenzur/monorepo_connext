/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  RootManager,
  RootManagerInterface,
} from "../../../contracts/messaging/RootManager";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_delayBlocks",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_merkle",
        type: "address",
      },
      {
        internalType: "address",
        name: "_watcherManager",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyOwner_notOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyProposed_notProposedOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__ownershipDelayElapsed_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_noOwnershipChange",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_noProposal",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "connector",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint32[]",
        name: "domains",
        type: "uint32[]",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "connectors",
        type: "address[]",
      },
    ],
    name: "ConnectorAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "connector",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint32[]",
        name: "domains",
        type: "uint32[]",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "connectors",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "ConnectorRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "previous",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "updated",
        type: "uint256",
      },
    ],
    name: "DelayBlocksUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "connector",
        type: "address",
      },
    ],
    name: "DomainAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
    ],
    name: "DomainRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "proposedOwner",
        type: "address",
      },
    ],
    name: "OwnershipProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "connector",
        type: "address",
      },
    ],
    name: "PropagateFailed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "fraudulentRoot",
        type: "bytes32",
      },
    ],
    name: "RootDiscarded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "aggregateRoot",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "domainsHash",
        type: "bytes32",
      },
    ],
    name: "RootPropagated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "receivedRoot",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "queueIndex",
        type: "uint256",
      },
    ],
    name: "RootReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "aggregateRoot",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32[]",
        name: "aggregatedMessageRoots",
        type: "bytes32[]",
      },
    ],
    name: "RootsAggregated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "watcherManager",
        type: "address",
      },
    ],
    name: "WatcherManagerChanged",
    type: "event",
  },
  {
    inputs: [],
    name: "DEQUEUE_MAX",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_DOMAINS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MERKLE",
    outputs: [
      {
        internalType: "contract MerkleTreeManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptProposedOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_connector",
        type: "address",
      },
    ],
    name: "addConnector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "_inbound",
        type: "bytes32",
      },
    ],
    name: "aggregate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "connectors",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "connectorsHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "delay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "delayBlocks",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "dequeue",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
    ],
    name: "discardRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "domains",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "domainsHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
    ],
    name: "getConnectorForDomain",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
    ],
    name: "getDomainIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPendingInboundRootsCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
    ],
    name: "isDomainSupported",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "lastPropagatedRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingInboundRoots",
    outputs: [
      {
        internalType: "uint128",
        name: "first",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "last",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_connectors",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_fees",
        type: "uint256[]",
      },
      {
        internalType: "bytes[]",
        name: "_encodedData",
        type: "bytes[]",
      },
    ],
    name: "propagate",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newlyProposed",
        type: "address",
      },
    ],
    name: "proposeNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proposed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposedTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
    ],
    name: "removeConnector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounced",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_delayBlocks",
        type: "uint256",
      },
    ],
    name: "setDelayBlocks",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_watcherManager",
        type: "address",
      },
    ],
    name: "setWatcherManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_connectors",
        type: "address[]",
      },
    ],
    name: "validateConnectors",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32[]",
        name: "_domains",
        type: "uint32[]",
      },
      {
        internalType: "address[]",
        name: "_connectors",
        type: "address[]",
      },
    ],
    name: "validateDomains",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "watcherManager",
    outputs: [
      {
        internalType: "contract WatcherManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b5060405162002bf138038062002bf1833981016040819052620000349162000163565b600380546001600160a81b0319166101006001600160a01b038416021790556200005e33620000db565b6001600160a01b038216620000a85760405162461bcd60e51b815260206004820152600c60248201526b217a65726f206d65726b6c6560a01b604482015260640160405180910390fd5b6001600160a01b0382166080526009839055620000d2600a62000140602090811b620014f417901c565b505050620001a4565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b039092166001600160a01b0319928316178155600255600180549091169055565b60019055565b80516001600160a01b03811681146200015e57600080fd5b919050565b6000806000606084860312156200017957600080fd5b835192506200018b6020850162000146565b91506200019b6040850162000146565b90509250925092565b608051612a23620001ce6000396000818161051601528181610f250152610fb20152612a236000f3fe60806040526004361061020f5760003560e01c80638da5cb5b11610118578063b904670f116100a0578063d232c2201161006f578063d232c22014610629578063d2a3cc7114610648578063db0f016914610668578063e6f1208d14610688578063f715589a146106a857600080fd5b8063b904670f146105c0578063c5b350df146105e0578063c8ef89de146105f5578063d1851c921461060b57600080fd5b8063a01892a5116100e7578063a01892a514610504578063a792c29b14610538578063aa0d60a31461055d578063ad9c0c2e1461058a578063b1f8100d146105a057600080fd5b80638da5cb5b146104875780638e7d93fa146104a5578063909907cb146104c5578063957908d1146104da57600080fd5b8063498c2c2e1161019b578063715018a61161016a578063715018a6146103dc5780637bc24d99146103f15780637d434e91146104075780637d534308146104275780638456cb591461047257600080fd5b8063498c2c2e146103635780635c975abb1461037957806366cf8fab146103915780636a42b8f8146103c657600080fd5b806327186c6a116101e257806327186c6a146102d85780633c4baaf8146102f85780633cf52ffb146103265780633f4ba83a1461033b578063412e12db1461035057600080fd5b80630f8ef4ee1461021457806313ede1a1146102365780631eeaabea1461027357806324ec5d0514610293575b600080fd5b34801561022057600080fd5b5061023461022f3660046120f6565b6106d5565b005b34801561024257600080fd5b506102566102513660046120f6565b61074a565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561027f57600080fd5b5061023461028e3660046120f6565b610774565b34801561029f57600080fd5b506102c86102ae366004612128565b63ffffffff16600090815260086020526040902054151590565b604051901515815260200161026a565b3480156102e457600080fd5b506102346102f336600461218f565b610826565b34801561030457600080fd5b50610318610313366004612128565b610891565b60405190815260200161026a565b34801561033257600080fd5b50600254610318565b34801561034757600080fd5b506102346108f5565b61023461035e366004612218565b610932565b34801561036f57600080fd5b5061031860075481565b34801561038557600080fd5b5060035460ff166102c8565b34801561039d57600080fd5b506103b16103ac3660046120f6565b610cd9565b60405163ffffffff909116815260200161026a565b3480156103d257600080fd5b5062093a80610318565b3480156103e857600080fd5b50610234610d13565b3480156103fd57600080fd5b5061031860055481565b34801561041357600080fd5b50610256610422366004612128565b610d3e565b34801561043357600080fd5b50600a54610452906001600160801b0380821691600160801b90041682565b604080516001600160801b0393841681529290911660208301520161026a565b34801561047e57600080fd5b50610234610d76565b34801561049357600080fd5b506000546001600160a01b0316610256565b3480156104b157600080fd5b506102346104c036600461238b565b610e2d565b3480156104d157600080fd5b50610318610ee8565b3480156104e657600080fd5b506104ef610ef9565b6040805192835260208301919091520161026a565b34801561051057600080fd5b506102567f000000000000000000000000000000000000000000000000000000000000000081565b34801561054457600080fd5b506003546102569061010090046001600160a01b031681565b34801561056957600080fd5b50610572606481565b6040516001600160801b03909116815260200161026a565b34801561059657600080fd5b5061031860095481565b3480156105ac57600080fd5b506102346105bb3660046123cc565b611087565b3480156105cc57600080fd5b506102346105db3660046123e7565b611128565b3480156105ec57600080fd5b506102346111a0565b34801561060157600080fd5b506103186101f481565b34801561061757600080fd5b506001546001600160a01b0316610256565b34801561063557600080fd5b506000546001600160a01b0316156102c8565b34801561065457600080fd5b506102346106633660046123cc565b611210565b34801561067457600080fd5b5061023461068336600461241a565b6112f4565b34801561069457600080fd5b506102346106a3366004612128565b611407565b3480156106b457600080fd5b506103186106c3366004612128565b600e6020526000908152604090205481565b6000546001600160a01b03163314610700576040516311a8a1bb60e31b815260040160405180910390fd5b6107086114fa565b610713600a82611543565b6040518181527fd2a17a10ab346c94fae909b2fbfa0fedaf30d08983e74dcc0a92be2c40c437f9906020015b60405180910390a150565b6006818154811061075a57600080fd5b6000918252602090912001546001600160a01b0316905081565b6000546001600160a01b0316331461079f576040516311a8a1bb60e31b815260040160405180910390fd5b60095481036107e45760405162461bcd60e51b815260206004820152600c60248201526b2164656c6179426c6f636b7360a01b60448201526064015b60405180910390fd5b6009546040805183815260208101929092527fef322fd61cb3d8514326f0b28140a92a29cd10996ad80d0671e43d2483464c1d910160405180910390a1600955565b600754828260405160200161083c929190612486565b604051602081830303815290604052805190602001201461088d5760405162461bcd60e51b815260206004820152600b60248201526a21636f6e6e6563746f727360a81b60448201526064016107db565b5050565b63ffffffff81166000908152600860205260408120548082036108e35760405162461bcd60e51b815260206004820152600a602482015269085cdd5c1c1bdc9d195960b21b60448201526064016107db565b6108ee6001826124e8565b9392505050565b6000546001600160a01b03163314610920576040516311a8a1bb60e31b815260040160405180910390fd5b6109286114fa565b6109306115b4565b565b61093a611606565b6109448585610826565b8382811480156109545750808251145b6109925760405162461bcd60e51b815260206004820152600f60248201526e696e76616c6964206c656e6774687360881b60448201526064016107db565b60008061099d610ef9565b90925090503460005b848163ffffffff161015610c8a57600e600060048363ffffffff16815481106109d1576109d16124fb565b90600052602060002090600891828204019190066004029054906101000a900463ffffffff1663ffffffff1663ffffffff168152602001908152602001600020548403610ad1577f51f2ef0ced5ef0ec14268d79d48589f9ccff35b2b0baf5059a90166caffea7a760048263ffffffff1681548110610a5257610a526124fb565b90600052602060002090600891828204019190066004029054906101000a900463ffffffff168b8b8463ffffffff16818110610a9057610a906124fb565b9050602002016020810190610aa591906123cc565b6040805163ffffffff90931683526001600160a01b0390911660208301520160405180910390a1610c82565b83600e600060048463ffffffff1681548110610aef57610aef6124fb565b90600052602060002090600891828204019190066004029054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020019081526020016000208190555089898263ffffffff16818110610b4b57610b4b6124fb565b9050602002016020810190610b6091906123cc565b6001600160a01b03166348e6fa2389898463ffffffff16818110610b8657610b866124fb565b9050602002013586604051602001610ba091815260200190565b604051602081830303815290604052898563ffffffff1681518110610bc757610bc76124fb565b60200260200101516040518463ffffffff1660e01b8152600401610bec929190612557565b6000604051808303818588803b158015610c0557600080fd5b505af193505050508015610c17575060015b610c55577f51f2ef0ced5ef0ec14268d79d48589f9ccff35b2b0baf5059a90166caffea7a760048263ffffffff1681548110610a5257610a526124fb565b87878263ffffffff16818110610c6d57610c6d6124fb565b9050602002013582610c7f91906124e8565b91505b6001016109a6565b50600554604080518581526020810185905280820192909252517f3fcedb4669de80ca7de6e18b7b25cc8e4f6861796f1db0f2409fcdf0d6901f569181900360600190a1505050505050505050565b60048181548110610ce957600080fd5b9060005260206000209060089182820401919006600402915054906101000a900463ffffffff1681565b6000546001600160a01b03163314610930576040516311a8a1bb60e31b815260040160405180910390fd5b60006006610d4b83610891565b81548110610d5b57610d5b6124fb565b6000918252602090912001546001600160a01b031692915050565b6003546040516384785ecd60e01b81523360048201526101009091046001600160a01b0316906384785ecd90602401602060405180830381865afa158015610dc2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610de69190612585565b610e1d5760405162461bcd60e51b815260206004820152600860248201526710bbb0ba31b432b960c11b60448201526064016107db565b610e25611606565b61093061164c565b610e35611606565b8133610e4082610d3e565b6001600160a01b031614610e835760405162461bcd60e51b815260206004820152600a60248201526910b1b7b73732b1ba37b960b11b60448201526064016107db565b6000610e90600a84611689565b6040805163ffffffff87168152602081018690526001600160801b0383168183015290519192507f1daad24ee1bf0bcc72ab681d29df86ec2794361b223da31f148b9f826cd135a8919081900360600190a150505050565b6000610ef4600a6116fb565b905090565b600080610f04611606565b600954600090610f1890600a906064611725565b90508051600003610fad577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663c9b0a6de6040518163ffffffff1660e01b81526004016040805180830381865afa158015610f80573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fa491906125a7565b92509250509091565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166334a55ee6846040518263ffffffff1660e01b8152600401610ffc9190612606565b60408051808303816000875af115801561101a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061103e91906125a7565b915091507f41b13c36968d02a1fd71e0f5db55ba2fb043c215a4d1e17633293ff273a77cd482828560405161107593929190612619565b60405180910390a19093509150509091565b6000546001600160a01b031633146110b2576040516311a8a1bb60e31b815260040160405180910390fd5b6001546001600160a01b0382811691161480156110d0575060025415155b156110ee576040516311bc066560e11b815260040160405180910390fd5b6000546001600160a01b0380831691160361111c57604051634a2fb73f60e11b815260040160405180910390fd5b61112581611aa7565b50565b6000546001600160a01b03163314611153576040516311a8a1bb60e31b815260040160405180910390fd5b61115d8282611af5565b7f95ef69787290b89c35a092c89db1b283b43724d01263e683cfb560c758cdbe7082826004600660405161119494939291906127fe565b60405180910390a15050565b6001546001600160a01b031633146111cb576040516311a7f27160e11b815260040160405180910390fd5b62093a80600254426111dd91906124e8565b116111fb576040516324e0285f60e21b815260040160405180910390fd5b600154610930906001600160a01b0316611cda565b6000546001600160a01b0316331461123b576040516311a8a1bb60e31b815260040160405180910390fd5b6003546001600160a01b0361010090910481169082160361129e5760405162461bcd60e51b815260206004820152601760248201527f616c72656164792077617463686572206d616e6167657200000000000000000060448201526064016107db565b60038054610100600160a81b0319166101006001600160a01b038416908102919091179091556040519081527fc16d059e43d7f8e29ccb4e001a2f249d3c59e274925d6a6bc3912943441d9f6c9060200161073f565b8281146113365760405162461bcd60e51b815260206004820152601060248201526f042dac2e8c6d0d2dcce40d8cadccee8d60831b60448201526064016107db565b600554848460405160200161134c92919061284b565b604051602081830303815290604052805190602001201461139a5760405162461bcd60e51b815260206004820152600860248201526721646f6d61696e7360c01b60448201526064016107db565b60075482826040516020016113b0929190612486565b60405160208183030381529060405280519060200120146114015760405162461bcd60e51b815260206004820152600b60248201526a21636f6e6e6563746f727360a81b60448201526064016107db565b50505050565b6003546040516384785ecd60e01b81523360048201526101009091046001600160a01b0316906384785ecd90602401602060405180830381865afa158015611453573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114779190612585565b6114ae5760405162461bcd60e51b815260206004820152600860248201526710bbb0ba31b432b960c11b60448201526064016107db565b60006114b982611d3f565b90507f6a1097f391a37dc63e0860e64ec34442971eeed2fda4d1a90141fa9ce25eb7eb82826004600633604051611194959493929190612889565b60019055565b60035460ff166109305760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016107db565b600081815260038301602052604090205460ff16156115965760405162461bcd60e51b815260206004820152600f60248201526e185b1c9958591e481c995b5bdd9959608a1b60448201526064016107db565b6000908152600390910160205260409020805460ff19166001179055565b6115bc6114fa565b6003805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b60035460ff16156109305760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016107db565b611654611606565b6003805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586115e93390565b8154600090439084906010906116ae90600160801b90046001600160801b03166128df565b82546001600160801b038083166101009490940a84810291021990911617909255600090815260018601602090815260408083209690965560029096019095529290932092909255919050565b80546000906001600160801b03600160801b82048116911661171d8282611f94565b949350505050565b82546060906001600160801b0380821691600160801b9004168181101561175e57505060408051600081526020810190915290506108ee565b816001600160801b03166000036117a75760405162461bcd60e51b815260206004820152600d60248201526c1c5d595d5948085a5b9a5d09d9609a1b60448201526064016107db565b6000846001600160801b0316116117f25760405162461bcd60e51b815260206004820152600f60248201526e042c2c6c6cae0e8c2c4d8ca40dac2f608b1b60448201526064016107db565b600060016118008685612905565b61180a919061292c565b9050806001600160801b0316826001600160801b0316111561182a578091505b50600061183786436124e8565b905060005b826001600160801b0316846001600160801b03161161188e576001600160801b038316600090815260028901602052604090205482811161188157600191505061188e565b506000199092019161183c565b806118ae57505060408051600081526020810190915292506108ee915050565b6000846118bc856001612905565b6118c6919061292c565b6001600160801b031667ffffffffffffffff8111156118e7576118e76121d1565b604051908082528060200260200182016040528015611910578160200160208202803683370190505b5090506000805b856001600160801b0316876001600160801b0316116119cc576001600160801b038716600090815260018c01602090815260408083205480845260038f019092529091205460ff1661198d5780848481518110611976576119766124fb565b602002602001018181525050826001019250611994565b8160010191505b506001600160801b038716600090815260018c81016020908152604080842084905560028f0190915282209190915590960195611917565b8a546fffffffffffffffffffffffffffffffff19166001600160801b038816178b556000819003611a0657829750505050505050506108ee565b60008267ffffffffffffffff811115611a2157611a216121d1565b604051908082528060200260200182016040528015611a4a578160200160208202803683370190505b50905060005b83811015611a9757848181518110611a6a57611a6a6124fb565b6020026020010151828281518110611a8457611a846124fb565b6020908102919091010152600101611a50565b5097506108ee9650505050505050565b42600255600180546001600160a01b0319166001600160a01b0383169081179091556040517f6ab4d119f23076e8ad491bc65ce85f017fb0591dce08755ba8591059cc51737a90600090a250565b63ffffffff821660009081526008602052604090205415611b415760405162461bcd60e51b815260206004820152600660248201526565786973747360d01b60448201526064016107db565b6001600160a01b038116611b845760405162461bcd60e51b815260206004820152600a60248201526910b1b7b73732b1ba37b960b11b60448201526064016107db565b6004546101f411611bd75760405162461bcd60e51b815260206004820152601960248201527f446f6d61696e496e64657865722061742063617061636974790000000000000060448201526064016107db565b600480546001818101835560088083047f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b01805463ffffffff808916600790961687026101000a8681029102199091161790556006805492830190557ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f90910180546001600160a01b0386166001600160a01b03199091161790559154600091825260209290925260409020819055611c8e611fbe565b6040805163ffffffff851681526001600160a01b03841660208201527f4fc27362d8ab3086efd93b7880e99ac02e906d0ba9b71ca90239ade53090f703910160405180910390a1505050565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b039092166001600160a01b0319928316178155600255600180549091169055565b600080611d4b83610891565b9050600060068281548110611d6257611d626124fb565b6000918252602090912001546001600160a01b0316905080611dba5760405162461bcd60e51b8152602060048201526011602482015270636f6e6e6563746f72202165786973747360781b60448201526064016107db565b600454600090611dcc906001906124e8565b905080831015611ec35760048181548110611de957611de96124fb565b90600052602060002090600891828204019190066004029054906101000a900463ffffffff1660048481548110611e2257611e226124fb565b90600052602060002090600891828204019190066004026101000a81548163ffffffff021916908363ffffffff16021790555060068181548110611e6857611e686124fb565b600091825260209091200154600680546001600160a01b039092169185908110611e9457611e946124fb565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b031602179055505b6004805480611ed457611ed461294c565b600082815260209020600860001990920191820401805463ffffffff600460078516026101000a021916905590556006805480611f1357611f1361294c565b60008281526020808220830160001990810180546001600160a01b031916905590920190925563ffffffff87168252600890526040812055611f53611fbe565b60405163ffffffff861681527f7e560b48a4bba1688eb45afd6712a11fa42b9abbb48a8e14e2f15e467ab420e49060200160405180910390a1509392505050565b600081611fa2846001612905565b611fac919061292c565b6001600160801b031690505b92915050565b6000600480548060200260200160405190810160405280929190818152602001828054801561203857602002820191906000526020600020906000905b82829054906101000a900463ffffffff1663ffffffff1681526020019060040190602082600301049283019260010382029150808411611ffb5790505b505050505090506000600680548060200260200160405190810160405280929190818152602001828054801561209757602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311612079575b50505050509050816040516020016120af9190612962565b60408051601f198184030181529082905280516020918201206005556120d7918391016129ac565b60408051601f1981840301815291905280516020909101206007555050565b60006020828403121561210857600080fd5b5035919050565b803563ffffffff8116811461212357600080fd5b919050565b60006020828403121561213a57600080fd5b6108ee8261210f565b60008083601f84011261215557600080fd5b50813567ffffffffffffffff81111561216d57600080fd5b6020830191508360208260051b850101111561218857600080fd5b9250929050565b600080602083850312156121a257600080fd5b823567ffffffffffffffff8111156121b957600080fd5b6121c585828601612143565b90969095509350505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715612210576122106121d1565b604052919050565b60008060008060006060868803121561223057600080fd5b67ffffffffffffffff808735111561224757600080fd5b6122548888358901612143565b909650945060208701358181111561226b57600080fd5b61227789828a01612143565b90955093505060408701358181111561228f57600080fd5b8701601f810189136122a057600080fd5b8035828111156122b2576122b26121d1565b6122c160208260051b016121e7565b8082825260208201915060208360051b85010192508b8311156122e357600080fd5b602084015b838110156123785785813511156122fe57600080fd5b803585018d603f82011261231157600080fd5b602081013587811115612326576123266121d1565b612339601f8201601f19166020016121e7565b8181528f604083850101111561234e57600080fd5b816040840160208301376000602083830101528086525050506020830192506020810190506122e8565b5080955050505050509295509295909350565b6000806040838503121561239e57600080fd5b6123a78361210f565b946020939093013593505050565b80356001600160a01b038116811461212357600080fd5b6000602082840312156123de57600080fd5b6108ee826123b5565b600080604083850312156123fa57600080fd5b6124038361210f565b9150612411602084016123b5565b90509250929050565b6000806000806040858703121561243057600080fd5b843567ffffffffffffffff8082111561244857600080fd5b61245488838901612143565b9096509450602087013591508082111561246d57600080fd5b5061247a87828801612143565b95989497509550505050565b60208082528181018390526000908460408401835b868110156124c7576001600160a01b036124b4846123b5565b168252918301919083019060010161249b565b509695505050505050565b634e487b7160e01b600052601160045260246000fd5b81810381811115611fb857611fb86124d2565b634e487b7160e01b600052603260045260246000fd5b6000815180845260005b818110156125375760208185018101518683018201520161251b565b506000602082860101526020601f19601f83011685010191505092915050565b60408152600061256a6040830185612511565b828103602084015261257c8185612511565b95945050505050565b60006020828403121561259757600080fd5b815180151581146108ee57600080fd5b600080604083850312156125ba57600080fd5b505080516020909101519092909150565b600081518084526020808501945080840160005b838110156125fb578151875295820195908201906001016125df565b509495945050505050565b6020815260006108ee60208301846125cb565b83815282602082015260606040820152600061257c60608301846125cb565b805480835260008281526020808220940193909190825b826007820110156126c757815463ffffffff8082168852602082811c821690890152604082811c821690890152606082811c821690890152608082811c82169089015260a082811c82169089015260c082811c9091169088015260e090811c908701526101009095019460019091019060080161264f565b905490828110156126e55763ffffffff821686526020909501946001015b8281101561270557602082901c63ffffffff168652602095909501946001015b828110156127245763ffffffff604083901c1686526020909501946001015b828110156127435763ffffffff606083901c1686526020909501946001015b828110156127625763ffffffff608083901c1686526020909501946001015b828110156127815763ffffffff60a083901c1686526020909501946001015b828110156127a05763ffffffff60c083901c1686526020909501946001015b828110156127b65760e082901c86526020860195505b5093949350505050565b6000815480845260208085019450836000528060002060005b838110156125fb5781546001600160a01b0316875295820195600191820191016127d9565b63ffffffff851681526001600160a01b038416602082015260806040820181905260009061282e90830185612638565b828103606084015261284081856127c0565b979650505050505050565b60208082528181018390526000908460408401835b868110156124c75763ffffffff6128768461210f565b1682529183019190830190600101612860565b63ffffffff86168152600060018060a01b03808716602084015260a060408401526128b760a0840187612638565b83810360608501526128c981876127c0565b9250508084166080840152509695505050505050565b60006001600160801b038083168181036128fb576128fb6124d2565b6001019392505050565b6001600160801b03818116838216019080821115612925576129256124d2565b5092915050565b6001600160801b03828116828216039080821115612925576129256124d2565b634e487b7160e01b600052603160045260246000fd5b6020808252825182820181905260009190848201906040850190845b818110156129a057835163ffffffff168352928401929184019160010161297e565b50909695505050505050565b6020808252825182820181905260009190848201906040850190845b818110156129a05783516001600160a01b0316835292840192918401916001016129c856fea2646970667358221220fc64f09b1857c9fbbf0a9a7f74dfbace1e5b2cf3ae87b67150b10093e7ba5a4a64736f6c63430008110033";

type RootManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RootManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RootManager__factory extends ContractFactory {
  constructor(...args: RootManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _delayBlocks: PromiseOrValue<BigNumberish>,
    _merkle: PromiseOrValue<string>,
    _watcherManager: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<RootManager> {
    return super.deploy(
      _delayBlocks,
      _merkle,
      _watcherManager,
      overrides || {}
    ) as Promise<RootManager>;
  }
  override getDeployTransaction(
    _delayBlocks: PromiseOrValue<BigNumberish>,
    _merkle: PromiseOrValue<string>,
    _watcherManager: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _delayBlocks,
      _merkle,
      _watcherManager,
      overrides || {}
    );
  }
  override attach(address: string): RootManager {
    return super.attach(address) as RootManager;
  }
  override connect(signer: Signer): RootManager__factory {
    return super.connect(signer) as RootManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RootManagerInterface {
    return new utils.Interface(_abi) as RootManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RootManager {
    return new Contract(address, _abi, signerOrProvider) as RootManager;
  }
}
