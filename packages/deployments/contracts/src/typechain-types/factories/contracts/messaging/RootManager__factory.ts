/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  RootManager,
  RootManagerInterface,
} from "../../../contracts/messaging/RootManager";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_delayBlocks",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_merkle",
        type: "address",
      },
      {
        internalType: "address",
        name: "_watcherManager",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyOwner_notOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyProposed_notProposedOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__ownershipDelayElapsed_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_noOwnershipChange",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_noProposal",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "connector",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint32[]",
        name: "domains",
        type: "uint32[]",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "connectors",
        type: "address[]",
      },
    ],
    name: "ConnectorAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "connector",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint32[]",
        name: "domains",
        type: "uint32[]",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "connectors",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "ConnectorRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "previous",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "updated",
        type: "uint256",
      },
    ],
    name: "DelayBlocksUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "connector",
        type: "address",
      },
    ],
    name: "DomainAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
    ],
    name: "DomainRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "proposedOwner",
        type: "address",
      },
    ],
    name: "OwnershipProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "connector",
        type: "address",
      },
    ],
    name: "PropagateFailed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "fraudulentRoot",
        type: "bytes32",
      },
    ],
    name: "RootDiscarded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "aggregateRoot",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "domainsHash",
        type: "bytes32",
      },
    ],
    name: "RootPropagated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "receivedRoot",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "queueIndex",
        type: "uint256",
      },
    ],
    name: "RootReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "aggregateRoot",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32[]",
        name: "aggregatedMessageRoots",
        type: "bytes32[]",
      },
    ],
    name: "RootsAggregated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "watcherManager",
        type: "address",
      },
    ],
    name: "WatcherManagerChanged",
    type: "event",
  },
  {
    inputs: [],
    name: "DEQUEUE_MAX",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_DOMAINS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MERKLE",
    outputs: [
      {
        internalType: "contract MerkleTreeManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptProposedOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_connector",
        type: "address",
      },
    ],
    name: "addConnector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "_inbound",
        type: "bytes32",
      },
    ],
    name: "aggregate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "connectors",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "connectorsHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "delay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "delayBlocks",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "dequeue",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
    ],
    name: "discardRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "domains",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "domainsHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
    ],
    name: "getConnectorForDomain",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
    ],
    name: "getDomainIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPendingInboundRootsCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
    ],
    name: "isDomainSupported",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastPropagatedRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingInboundRoots",
    outputs: [
      {
        internalType: "uint128",
        name: "first",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "last",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_connectors",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_fees",
        type: "uint256[]",
      },
      {
        internalType: "bytes[]",
        name: "_encodedData",
        type: "bytes[]",
      },
    ],
    name: "propagate",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newlyProposed",
        type: "address",
      },
    ],
    name: "proposeNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proposed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposedTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
    ],
    name: "removeConnector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounced",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_delayBlocks",
        type: "uint256",
      },
    ],
    name: "setDelayBlocks",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_watcherManager",
        type: "address",
      },
    ],
    name: "setWatcherManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_connectors",
        type: "address[]",
      },
    ],
    name: "validateConnectors",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32[]",
        name: "_domains",
        type: "uint32[]",
      },
      {
        internalType: "address[]",
        name: "_connectors",
        type: "address[]",
      },
    ],
    name: "validateDomains",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "watcherManager",
    outputs: [
      {
        internalType: "contract WatcherManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a0346200014f57601f620024a038819003918201601f19168301916001600160401b0383118484101762000154578084926060946040528339810103126200014f5780519062000061604062000059602084016200016a565b92016200016a565b600380546001600160a81b03191660089290921b610100600160a81b031691909117905560008054604051926001600160a01b03929091903390848316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a36001600160a01b031990811633176000908155600255600180549091169055169081156200011e57506080526009556001600a556040516123209081620001808239608051818181610b1601528181611af00152611bf60152f35b62461bcd60e51b815260206004820152600c60248201526b217a65726f206d65726b6c6560a01b6044820152606490fd5b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b03821682036200014f5756fe608080604052600436101561001357600080fd5b60003560e01c9081630165bc811461158d575080630f8ef4ee146114cc57806313ede1a1146114835780631eeaabea146113e957806324ec5d05146113a857806327186c6a1461136f5780633c4baaf8146113445780633cf52ffb146113265780633f4ba83a146112bd578063412e12db14610ec0578063498c2c2e14610ea25780635c975abb14610e7f57806366cf8fab14610e415780636a42b8f814610e23578063715018a614610dfe5780637bc24d9914610de05780637d434e9114610dab5780637d53430814610d7c5780638456cb5914610cc15780638da5cb5b14610c985780638e7d93fa14610bb3578063909907cb14610b74578063957908d114610b45578063a01892a514610b00578063a792c29b14610ad3578063aa0d60a314610ab7578063ad9c0c2e14610a99578063b1f8100d146109e6578063b904670f146107ef578063c5b350df14610747578063c8ef89de1461072a578063d1851c9214610701578063d232c220146106d7578063d2a3cc71146105f0578063db0f01691461048d5763e6f1208d146101ab57600080fd5b3461048857602080600319360112610488576101c56115e3565b906003805490604051936384785ecd60e01b85523360048601526024948481878160018060a01b03809860081c165afa801561047c5761020d9160009161044f575b506118e5565b61021681611c54565b9183610221846115a8565b905490831b1c169384156104175760045460001994908581019081116104025780821061035e575b505060045480156103495784019361026085611679565b9590805463ffffffff8098871b1b191690556004556006548015610334577f6a1097f391a37dc63e0860e64ec34442971eeed2fda4d1a90141fa9ce25eb7eb985001916102ac836115a8565b81939154921b1b1916905560065516918260005260088152600060408120556102d3611d88565b7f7e560b48a4bba1688eb45afd6712a11fa42b9abbb48a8e14e2f15e467ab420e481604051858152a160405192835282015260a060408201528061032961031c60a083016116cf565b8281036060840152611879565b3360808301520390a1005b88634e487b7160e01b60005260316004526000fd5b87634e487b7160e01b60005260316004526000fd5b6103e3836103af63ffffffff61037385611679565b905490891b1c16936103aa8561038888611679565b90919082549060031b9163ffffffff9283811b93849216901b16911916179055565b6115a8565b905490871b1c166103bf846115a8565b90919082549060031b9160018060a01b039283811b93849216901b16911916179055565b6001820180921161040257600052600887526040600020553880610249565b88634e487b7160e01b60005260116004526000fd5b60405162461bcd60e51b81526004810187905260118189015270636f6e6e6563746f72202165786973747360781b6044820152606490fd5b61046f9150863d8811610475575b6104678183611641565b8101906118cd565b38610207565b503d61045d565b6040513d6000823e3d90fd5b600080fd5b34610488576040366003190112610488576001600160401b03600435818111610488576104be9036906004016115f6565b9091602435908111610488576104d89036906004016115f6565b90918181036105b85760405190816020958682019280604084018986525260608301919060005b81811061058c57505050039161051d601f1993848101835282611641565b5190206005540361055c5761054e9061055a9461054260405194859283019687611cd0565b03908101835282611641565b51902060075414611d23565b005b60405162461bcd60e51b815260048101859052600860248201526721646f6d61696e7360c01b6044820152606490fd5b91809450929092359063ffffffff821680920361048857908152859390890192908901916001016104ff565b60405162461bcd60e51b815260206004820152601060248201526f042dac2e8c6d0d2dcce40d8cadccee8d60831b6044820152606490fd5b34610488576020366003190112610488576106096116b9565b6000546001600160a01b039190821633036106c55760035491808216908360081c16811461068057610100600160a81b031990921660089190911b610100600160a81b0316176003556040519081527fc16d059e43d7f8e29ccb4e001a2f249d3c59e274925d6a6bc3912943441d9f6c90602090a1005b60405162461bcd60e51b815260206004820152601760248201527f616c72656164792077617463686572206d616e616765720000000000000000006044820152606490fd5b6040516311a8a1bb60e31b8152600490fd5b34610488576000366003190112610488576000546040516001600160a01b03909116158152602090f35b34610488576000366003190112610488576001546040516001600160a01b039091168152602090f35b346104885760003660031901126104885760206040516101f48152f35b34610488576000366003190112610488576001546001600160a01b03908181163381036107dd5762093a8061077e600254426119dd565b11156107cb57806000549384167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a36001600160a01b031992831617600090815560025516600155005b6040516324e0285f60e21b8152600490fd5b6040516311a7f27160e11b8152600490fd5b34610488576040366003190112610488576108086115e3565b602435906001600160a01b0380831690818403610488576000541633036106c5576108468263ffffffff166000526008602052604060002054151590565b6109b157610855811515611a2e565b6004546101f481101561096c5768010000000000000000908181101561095657836103888260016108899401600455611679565b6006549081101561095657836108eb7f95ef69787290b89c35a092c89db1b283b43724d01263e683cfb560c758cdbe70956103bf8460017f4fc27362d8ab3086efd93b7880e99ac02e906d0ba9b71ca90239ade53090f70396016006556115a8565b6004549363ffffffff81169485600052600860205260406000205561090e611d88565b6040805163ffffffff9290921682526001600160a01b03929092166020820152a16040519182526020820152608060408201528061095161031c608083016116cf565b0390a1005b634e487b7160e01b600052604160045260246000fd5b60405162461bcd60e51b815260206004820152601960248201527f446f6d61696e496e6465786572206174206361706163697479000000000000006044820152606490fd5b60405162461bcd60e51b815260206004820152600d60248201526c646f6d61696e2065786973747360981b6044820152606490fd5b34610488576020366003190112610488576109ff6116b9565b6000546001600160a01b03919082163381036106c557826001549216809383161480610a8e575b610a7c578214610a6a57426002556001600160a01b03191681176001557f6ab4d119f23076e8ad491bc65ce85f017fb0591dce08755ba8591059cc51737a600080a2005b604051634a2fb73f60e11b8152600490fd5b6040516311bc066560e11b8152600490fd5b506002541515610a26565b34610488576000366003190112610488576020600954604051908152f35b3461048857600036600319011261048857602060405160648152f35b346104885760003660031901126104885760035460405160089190911c6001600160a01b03168152602090f35b34610488576000366003190112610488576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b3461048857600036600319011261048857610b5e6119ea565b6040610b68611ab1565b82519182526020820152f35b34610488576000366003190112610488576020600a54610baa6001600160801b0391610ba58382169160801c612095565b6120ad565b16604051908152f35b3461048857604036600319011261048857610bcc6115e3565b602435610bd76119ea565b610bf3610be383611caf565b6001600160a01b03163314611a2e565b600a54918260801c916001600160801b0390818414610c82577f1daad24ee1bf0bcc72ab681d29df86ec2794361b223da31f148b9f826cd135a89460016060950192808416936001600160801b03199060801b16911617600a5581600052600b60205280604060002055600c6020524360406000205563ffffffff6040519316835260208301526040820152a1005b634e487b7160e01b600052601160045260246000fd5b34610488576000366003190112610488576000546040516001600160a01b039091168152602090f35b34610488576000366003190112610488576003546040516384785ecd60e01b815233600482015290602082602481600885901c6001600160a01b03165afa91821561047c57600192610d1a91600091610d5e57506118e5565b610d226119ea565b610d2a6119ea565b60ff1916176003557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586020604051338152a1005b610d76915060203d8111610475576104678183611641565b84610207565b34610488576000366003190112610488576040600a548151906001600160801b038116825260801c6020820152f35b34610488576020366003190112610488576020610dce610dc96115e3565b611caf565b6040516001600160a01b039091168152f35b34610488576000366003190112610488576020600554604051908152f35b34610488576000366003190112610488576000546001600160a01b031633036106c557005b3461048857600036600319011261048857602060405162093a808152f35b34610488576020366003190112610488576004356004548110156104885763ffffffff610e6f602092611679565b9190546040519260031b1c168152f35b3461048857600036600319011261048857602060ff600354166040519015158152f35b34610488576000366003190112610488576020600754604051908152f35b6060366003190112610488576004356001600160401b03811161048857610eeb9036906004016115f6565b6024356001600160401b03811161048857610f0a9036906004016115f6565b9290916001600160401b03604435116104885736602360443501121561048857610f3960443560040135611662565b610f466040519182611641565b604435600401358152602081013660246044356004013560051b60443501011161048857602460443501905b60246044356004013560051b6044350101821061121e575050610f936119ea565b610f9d8284611d5d565b81851480611214575b156111dd57610fb36119ea565b610fbb611ab1565b949095600e5487146111a75786600e55349260005b8563ffffffff8216101561116b576001600160a01b03610fff610ffa63ffffffff8416898b611965565b611975565b1661101163ffffffff83168587611965565b35604051918b6020840152602083528260408101106001600160401b03604085011117610956576040830160405261104f63ffffffff851686611989565b5190803b156104885761108760009361109995604051968795869485936348e6fa2360e01b855260406004860152604485019061199d565b8381036003190160248501529061199d565b03925af19081611154575b5061112e576001817f51f2ef0ced5ef0ec14268d79d48589f9ccff35b2b0baf5059a90166caffea7a7888a6111236110f3610ffa6110e663ffffffff99611679565b949054958a891691611965565b6040805163ffffffff60039590951b9590951c89169390931684526001600160a01b031660208401528291820190565b0390a15b0116610fd0565b93600161114e63ffffffff926111478489168789611965565b35906119dd565b95611127565b6001600160401b038111610956576040528a6110a4565b7f3fcedb4669de80ca7de6e18b7b25cc8e4f6861796f1db0f2409fcdf0d6901f5660608a8a6005549060405192835260208301526040820152a1005b60405162461bcd60e51b815260206004820152600e60248201526d1c99591d5b99185b9d081c9bdbdd60921b6044820152606490fd5b60405162461bcd60e51b815260206004820152600f60248201526e696e76616c6964206c656e6774687360881b6044820152606490fd5b5081815114610fa6565b81356001600160401b038111610488573660438260443501011215610488576001600160401b03602482604435010135116109565760405191611273604435830160240135601f01601f191660200184611641565b602460448035840191820135808652369201011161048857602092600084602485818397604435010135604482813501018487013760443501013583010152815201910190610f72565b34610488576000366003190112610488576000546001600160a01b031633036106c5576112e861191c565b6112f061191c565b60ff19600354166003557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6020604051338152a1005b34610488576000366003190112610488576020600254604051908152f35b346104885760203660031901126104885760206113676113626115e3565b611c54565b604051908152f35b34610488576020366003190112610488576004356001600160401b038111610488576113a261055a9136906004016115f6565b90611d5d565b346104885760203660031901126104885760206113df6113c66115e3565b63ffffffff166000526008602052604060002054151590565b6040519015158152f35b3461048857602036600319011261048857600054600435906001600160a01b031633036106c55760095480821461144f5760407fef322fd61cb3d8514326f0b28140a92a29cd10996ad80d0671e43d2483464c1d918151908482526020820152a1600955005b60405162461bcd60e51b815260206004820152600c60248201526b2164656c6179426c6f636b7360a01b6044820152606490fd5b34610488576020366003190112610488576004356006548110156104885760066000526000805160206122cb83398151915201546040516001600160a01b039091168152602090f35b3461048857602036600319011261048857600054600435906001600160a01b031633036106c5576114fb61191c565b80600052600d60205260ff60406000205416611556576020817fd2a17a10ab346c94fae909b2fbfa0fedaf30d08983e74dcc0a92be2c40c437f992600052600d82526040600020600160ff19825416179055604051908152a1005b60405162461bcd60e51b815260206004820152600f60248201526e185b1c9958591e481c995b5bdd9959608a1b6044820152606490fd5b3461048857600036600319011261048857602090600e548152f35b6006548110156115cd5760066000526000805160206122cb8339815191520190600090565b634e487b7160e01b600052603260045260246000fd5b6004359063ffffffff8216820361048857565b9181601f84011215610488578235916001600160401b038311610488576020808501948460051b01011161048857565b602081019081106001600160401b0382111761095657604052565b90601f801991011681019081106001600160401b0382111761095657604052565b6001600160401b0381116109565760051b60200190565b906004548210156115cd576004600052601c8260031c7f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b019260021b1690565b600435906001600160a01b038216820361048857565b60045480825260208092019060046000527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b906000915b816007840110611810575491848282106117fa575b8282106117e2575b8282106117c9575b8282106117b0575b828210611797575b82821061177e575b828210611765575b5010611758575b50905090565b60e01c8152018038611752565b6001919463ffffffff8560c01c1681520193018461174b565b6001919463ffffffff8560a01c16815201930184611743565b6001919463ffffffff8560801c1681520193018461173b565b6001919463ffffffff8560601c16815201930184611733565b6001919463ffffffff8560401c1681520193018461172b565b6001919463ffffffff85831c16815201930184611723565b6001919463ffffffff851681520193018461171b565b926001610100600892865463ffffffff808216835280828b1c168a84015260408183821c169084015260608183821c169084015260808183821c169084015260a08183821c169084015260c09082821c169083015260e090811c90820152019401920191611706565b6006549081815260208091019160066000526000805160206122cb833981519152916000905b8282106118ad575050505090565b83546001600160a01b03168552938401936001938401939091019061189f565b90816020910312610488575180151581036104885790565b156118ec57565b60405162461bcd60e51b815260206004820152600860248201526710bbb0ba31b432b960c11b6044820152606490fd5b60ff600354161561192957565b60405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606490fd5b91908110156115cd5760051b0190565b356001600160a01b03811681036104885790565b80518210156115cd5760209160051b010190565b919082519283825260005b8481106119c9575050826000602080949584010152601f8019910116010190565b6020818301810151848301820152016119a8565b91908203918211610c8257565b60ff600354166119f657565b60405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606490fd5b15611a3557565b60405162461bcd60e51b815260206004820152600a60248201526910b1b7b73732b1ba37b960b11b6044820152606490fd5b9190826040910312610488576020825192015190565b90815180825260208080930193019160005b828110611a9d575050505090565b835185529381019392810192600101611a8f565b611abc6009546120c6565b90815115611be05760408051631a52af7360e11b81526020600482015290808280611aea6024820188611a7d565b038160007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af1938415611bd5576000928395611b76575b5081611b6f6060927f41b13c36968d02a1fd71e0f5db55ba2fb043c215a4d1e17633293ff273a77cd494519384938785528960208601528401526060830190611a7d565b0390a19190565b6060919550611b6f935091611bc17f41b13c36968d02a1fd71e0f5db55ba2fb043c215a4d1e17633293ff273a77cd493823d8411611bce575b611bb98183611641565b810190611a67565b9490949692505091611b2b565b503d611baf565b50513d6000823e3d90fd5b604080516364d8536f60e11b81529250826004817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa91821561047c576000908193611c3557509190565b9050611c5091925060403d8111611bce57611bb98183611641565b9091565b63ffffffff1660005260086020526040600020548015611c7d576000198101908111610c825790565b60405162461bcd60e51b815260206004820152600a602482015269085cdd5c1c1bdc9d195960b21b6044820152606490fd5b6103aa611cbb91611c54565b905460039190911b1c6001600160a01b031690565b9091604060209282848201858352520192916000805b838210611cf557505050505090565b9091929394853560018060a01b038116809103611d1f578152830194830193929160010190611ce6565b8280fd5b15611d2a57565b60405162461bcd60e51b815260206004820152600b60248201526a21636f6e6e6563746f727360a81b6044820152606490fd5b611d7861054e611d8693604051928391602083019586611cd0565b03601f198101835282611641565b565b60408051806004549081815260208091019283928183600096600488527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b9388905b806007830110611ff357611e2b95549184828210611fdd575b828210611fc5575b8c838310611fac575b50828210611f93575b828210611f7a575b828210611f61575b828210611f48575b5010611f3a575b50905095949392950385611641565b84519283948260065495868152018095600684526000805160206122cb83398151915290845b818110611f1d5750505086611e67910387611641565b8651838101848152915181890181905290946060860191845b818110611f035750505084900393611ea0601f1995868101835282611641565b519020600555855194828693840197840191818952518092526060840195925b828110611ee35750505050611edb9203908101835282611641565b519020600755565b83516001600160a01b031687529581019587945092810192600101611ec0565b825163ffffffff1684529286019291860191600101611e80565b82546001600160a01b031684529286019260019283019201611e51565b60e01c815201849038611e1c565b6001919463ffffffff8560c01c16815201930184611e15565b6001919463ffffffff8560a01c16815201930184611e0d565b6001919463ffffffff8560801c16815201930184611e05565b6001919463ffffffff8560601c16815201930184611dfd565b9463ffffffff85600194971c168152019301848c611df4565b6001919463ffffffff85831c16815201930184611deb565b6001919463ffffffff8516815201930184611de3565b925092506001610100600892865463ffffffff808216835280828c1c168b8401528d8183821c169084015260608183821c169084015260808183821c169084015260a08183821c169084015260c09082821c169083015260e090811c908201520194019201928492938692611dca565b9061206d82611662565b61207a6040519182611641565b828152809261208b601f1991611662565b0190602036910137565b9060016001600160801b0380931601918211610c8257565b6001600160801b039182169082160391908211610c8257565b600a54916001600160801b03928381169060801c918183106122b9578115612284576064820193858511610c82576000199486168501868111610c8257868116851161227a575b5061211890436119dd565b6000935b86811680851161226e57600052600c602052816040600020541115612144578501861661211c565b9594505090915060015b15612252579061216b8361216583610ba588612095565b16612063565b9360009081925b8581169286831684116121f55790869184600052600b602090808252604092836000205480600052600d84528c60ff866000205416156000146121de5792600183600096936121c6600c96849b9a98611989565b5201995b855281528383812055528120550116612172565b50509697600092600195949286600c93019a6121ca565b949592509050166001600160801b0319600a541617600a55156000146122185750565b61222181612063565b9060005b818110612233575090925050565b8061224060019287611989565b5161224b8286611989565b5201612225565b9250505060405161226281611626565b60008152600036813790565b5095945050909161214e565b935061211861210d565b60405162461bcd60e51b815260206004820152600d60248201526c1c5d595d5948085a5b9a5d09d9609a1b6044820152606490fd5b93505050506040516122628161162656fef652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3fa2646970667358221220dfef13826bfcfd47084c4c626252a4c2c643cc77f5446e6000f1825bf743207664736f6c63430008110033";

type RootManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RootManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RootManager__factory extends ContractFactory {
  constructor(...args: RootManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _delayBlocks: PromiseOrValue<BigNumberish>,
    _merkle: PromiseOrValue<string>,
    _watcherManager: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<RootManager> {
    return super.deploy(
      _delayBlocks,
      _merkle,
      _watcherManager,
      overrides || {}
    ) as Promise<RootManager>;
  }
  override getDeployTransaction(
    _delayBlocks: PromiseOrValue<BigNumberish>,
    _merkle: PromiseOrValue<string>,
    _watcherManager: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _delayBlocks,
      _merkle,
      _watcherManager,
      overrides || {}
    );
  }
  override attach(address: string): RootManager {
    return super.attach(address) as RootManager;
  }
  override connect(signer: Signer): RootManager__factory {
    return super.connect(signer) as RootManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RootManagerInterface {
    return new utils.Interface(_abi) as RootManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RootManager {
    return new Contract(address, _abi, signerOrProvider) as RootManager;
  }
}
