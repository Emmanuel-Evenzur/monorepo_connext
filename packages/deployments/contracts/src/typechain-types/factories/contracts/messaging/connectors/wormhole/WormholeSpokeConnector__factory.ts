/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  WormholeSpokeConnector,
  WormholeSpokeConnectorInterface,
} from "../../../../../contracts/messaging/connectors/wormhole/WormholeSpokeConnector";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "_mirrorDomain",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_amb",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rootManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_processGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_reserveGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_delayBlocks",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_merkle",
        type: "address",
      },
      {
        internalType: "address",
        name: "_watcherManager",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_gasCap",
        type: "uint256",
      },
      {
        internalType: "uint16",
        name: "_mirrorChainId",
        type: "uint16",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Connector__processMessage_notUsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyOwner_notOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyProposed_notProposedOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__ownershipDelayElapsed_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_noOwnershipChange",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_noProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "RateLimited__rateLimited_messageSendRateExceeded",
    type: "error",
  },
  {
    inputs: [],
    name: "TypedMemView__index_indexMoreThan32Bytes",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "loc",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "len",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "slice",
        type: "uint256",
      },
    ],
    name: "TypedMemView__index_overrun",
    type: "error",
  },
  {
    inputs: [],
    name: "TypedMemView__unsafeCopyTo_identityOOG",
    type: "error",
  },
  {
    inputs: [],
    name: "TypedMemView__unsafeCopyTo_invalidPointer",
    type: "error",
  },
  {
    inputs: [],
    name: "TypedMemView__unsafeCopyTo_nullPointer",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
    ],
    name: "AggregateRootReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
    ],
    name: "AggregateRootRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
    ],
    name: "AggregateRootVerified",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "updated",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "DelayBlocksUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
    ],
    name: "Dispatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "FundsWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_previous",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_updated",
        type: "uint256",
      },
    ],
    name: "GasCapUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageProcessed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "aggregateRoot",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "aggregateIndex",
        type: "uint256",
      },
    ],
    name: "MessageProven",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "encodedData",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previous",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "current",
        type: "address",
      },
    ],
    name: "MirrorConnectorUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "mirrorDomain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "amb",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "rootManager",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "mirrorConnector",
        type: "address",
      },
    ],
    name: "NewConnector",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "proposedOwner",
        type: "address",
      },
    ],
    name: "OwnershipProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "returnData",
        type: "bytes",
      },
    ],
    name: "Process",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "updater",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newRateLimit",
        type: "uint256",
      },
    ],
    name: "SendRateLimitUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "SenderAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "SenderRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "watcherManager",
        type: "address",
      },
    ],
    name: "WatcherManagerChanged",
    type: "event",
  },
  {
    inputs: [],
    name: "AMB",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MERKLE",
    outputs: [
      {
        internalType: "contract MerkleTreeManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIRROR_CHAIN_ID",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIRROR_DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PROCESS_GAS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "RESERVE_GAS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_MANAGER",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptProposedOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
    ],
    name: "addSender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowlistedSenders",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "delay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "delayBlocks",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_destinationDomain",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "_recipientAddress",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_messageBody",
        type: "bytes",
      },
    ],
    name: "dispatch",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "home",
    outputs: [
      {
        internalType: "contract IOutbox",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_potentialReplica",
        type: "address",
      },
    ],
    name: "isReplica",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastSentBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "localDomain",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "messages",
    outputs: [
      {
        internalType: "enum SpokeConnector.MessageStatus",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mirrorConnector",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "outboundRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "pendingAggregateRoots",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "processMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "processedMessages",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newlyProposed",
        type: "address",
      },
    ],
    name: "proposeNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proposed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposedTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "message",
            type: "bytes",
          },
          {
            internalType: "bytes32[32]",
            name: "path",
            type: "bytes32[32]",
          },
          {
            internalType: "uint256",
            name: "index",
            type: "uint256",
          },
        ],
        internalType: "struct SpokeConnector.Proof[]",
        name: "_proofs",
        type: "tuple[]",
      },
      {
        internalType: "bytes32",
        name: "_aggregateRoot",
        type: "bytes32",
      },
      {
        internalType: "bytes32[32]",
        name: "_aggregatePath",
        type: "bytes32[32]",
      },
      {
        internalType: "uint256",
        name: "_aggregateIndex",
        type: "uint256",
      },
    ],
    name: "proveAndProcess",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "provenAggregateRoots",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "provenMessageRoots",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rateLimitBlocks",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "payload",
        type: "bytes",
      },
      {
        internalType: "bytes[]",
        name: "additionalVaas",
        type: "bytes[]",
      },
      {
        internalType: "bytes32",
        name: "sourceAddress",
        type: "bytes32",
      },
      {
        internalType: "uint16",
        name: "sourceChain",
        type: "uint16",
      },
      {
        internalType: "bytes32",
        name: "deliveryHash",
        type: "bytes32",
      },
    ],
    name: "receiveWormholeMessages",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_fraudulentRoot",
        type: "bytes32",
      },
    ],
    name: "removePendingAggregateRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
    ],
    name: "removeSender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounced",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_encodedData",
        type: "bytes",
      },
    ],
    name: "send",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "sentMessageRoots",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_delayBlocks",
        type: "uint256",
      },
    ],
    name: "setDelayBlocks",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_gasCap",
        type: "uint256",
      },
    ],
    name: "setGasCap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
    ],
    name: "setMirrorConnector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_rateLimit",
        type: "uint256",
      },
    ],
    name: "setRateLimitBlocks",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_watcherManager",
        type: "address",
      },
    ],
    name: "setWatcherManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_expected",
        type: "address",
      },
    ],
    name: "verifySender",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "watcherManager",
    outputs: [
      {
        internalType: "contract WatcherManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
    ],
    name: "withdrawFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6101806040523480156200001257600080fd5b5060405162003f9d38038062003f9d83398101604081905262000035916200040e565b8181818e8e8e8e8e8e8e8e8e8e808a8a8a8a8a6200005333620002cd565b8463ffffffff166000036200009e5760405162461bcd60e51b815260206004820152600c60248201526b32b6b83a3c903237b6b0b4b760a11b60448201526064015b60405180910390fd5b6001600160a01b038216620000ea5760405162461bcd60e51b815260206004820152601160248201527032b6b83a3c903937b7ba26b0b730b3b2b960791b604482015260640162000095565b63ffffffff8086166080526001600160a01b0380851660a05283811660c05290851660e0528116156200012257620001228162000332565b604080516001600160a01b0385811682528481166020830152831681830152905163ffffffff86811692908816917f4f9c27c2fe3f84576ea469d367d044da53c45e951617e8389f2b5ed8db9d25f09181900360600190a350506003805460ff60a01b191690555050600480546001600160a01b0319166001600160a01b039390931692909217909155506001600755620cf84f8511620001f55760405162461bcd60e51b815260206004820152600c60248201526b2170726f636573732067617360a01b604482015260640162000095565b613a978411620002375760405162461bcd60e51b815260206004820152600c60248201526b21726573657276652067617360a01b604482015260640162000095565b6101208590526101408490526001600160a01b0382166200028a5760405162461bcd60e51b815260206004820152600c60248201526b217a65726f206d65726b6c6560a01b604482015260640162000095565b506001600160a01b03166101005260085550620002b09550869450506200039b92505050565b5061ffff166101605250620004e99b505050505050505050505050565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b039092166001600160a01b0319928316178155600255600180549091169055565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b60105460408051918252602082018390527f877a02cb809da0364d23adca3cd50c451b53f279d3df632e1fc11eb66335bce5910160405180910390a1601055565b805163ffffffff81168114620003f157600080fd5b919050565b80516001600160a01b0381168114620003f157600080fd5b6000806000806000806000806000806000806101808d8f0312156200043257600080fd5b6200043d8d620003dc565b9b506200044d60208e01620003dc565b9a506200045d60408e01620003f6565b99506200046d60608e01620003f6565b98506200047d60808e01620003f6565b975060a08d0151965060c08d0151955060e08d01519450620004a36101008e01620003f6565b9350620004b46101208e01620003f6565b92506101408d015191506101608d015161ffff81168114620004d557600080fd5b809150509295989b509295989b509295989b565b60805160a05160c05160e051610100516101205161014051610160516139de620005bf600039600081816108db0152818161106d0152818161246601528181612507015261252d0152600081816103760152611dc20152600081816109e901528181611de30152611e700152600081816107c901528181610b6601528181611183015261188701526000610306015260006105a701526000818161099f01528181610d0e015281816119ad01526123240152600081816104ee01528181610705015281816118290152611cc201526139de6000f3fe6080604052600436106102e85760003560e01c80638456cb5911610190578063b95a2001116100dc578063d2a3cc7111610095578063d88beda21161006f578063d88beda2146109d7578063db1b765914610a0b578063e0fed01014610a2b578063fa31de0114610a4b57600080fd5b8063d2a3cc711461096d578063d69f9d611461098d578063d7d317b3146109c157600080fd5b8063b95a200114610881578063c5b350df146108b4578063c8a4d690146108c9578063cc39428314610910578063d1851c9214610930578063d232c2201461094e57600080fd5b80639fa92f9d11610149578063ad9c0c2e11610123578063ad9c0c2e1461080b578063b1f8100d14610821578063b2f8764314610841578063b697f5311461086157600080fd5b80639fa92f9d146107a4578063a01892a5146107b7578063a792c29b146107eb57600080fd5b80638456cb59146106b157806388ba16ab146106c65780638d3638f4146106f65780638da5cb5b1461072957806398c9f2b9146107475780639d3117c71461077757600080fd5b806352a9674b1161024f5780636159ada1116102085780636a42b8f8116101e25780636a42b8f8146106465780636b04a9331461065c578063715018a61461067c5780637850b0201461069157600080fd5b80636159ada1146105e157806365eaf11b1461061157806368742da61461062657600080fd5b806352a9674b146104dc578063572386ca14610510578063579c1618146105405780635bd11efc146105565780635c975abb146105765780635f61e3ec1461059557600080fd5b80633cf52ffb116102a15780633cf52ffb146104365780633f4ba83a1461044b5780634ff746f614610460578063508a109b146104805780635190bc53146104a0578063529dca32146104c957600080fd5b806314168416146102f45780631eeaabea1461034257806325e3beda146103645780632bb1ae7c146103a65780632bbd59ca146103b9578063301f07c3146103f657600080fd5b366102ef57005b600080fd5b34801561030057600080fd5b506103287f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff90911681526020015b60405180910390f35b34801561034e57600080fd5b5061036261035d366004613217565b610a79565b005b34801561037057600080fd5b506103987f000000000000000000000000000000000000000000000000000000000000000081565b604051908152602001610339565b6103626103b43660046132e7565b610b23565b3480156103c557600080fd5b506103e96103d4366004613217565b600f6020526000908152604090205460ff1681565b6040516103399190613332565b34801561040257600080fd5b50610426610411366004613217565b600a6020526000908152604090205460ff1681565b6040519015158152602001610339565b34801561044257600080fd5b50600254610398565b34801561045757600080fd5b50610362610cc6565b34801561046c57600080fd5b5061036261047b3660046132e7565b610d03565b34801561048c57600080fd5b5061036261049b36600461335a565b610da9565b3480156104ac57600080fd5b506104266104bb3660046133f6565b6001600160a01b0316301490565b6103626104d7366004613436565b61106b565b3480156104e857600080fd5b506103287f000000000000000000000000000000000000000000000000000000000000000081565b34801561051c57600080fd5b5061042661052b366004613217565b600c6020526000908152604090205460ff1681565b34801561054c57600080fd5b5061039860055481565b34801561056257600080fd5b506103626105713660046133f6565b611148565b34801561058257600080fd5b50600354600160a01b900460ff16610426565b3480156105a157600080fd5b506105c97f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610339565b3480156105ed57600080fd5b506104266105fc3660046133f6565b600d6020526000908152604090205460ff1681565b34801561061d57600080fd5b5061039861117f565b34801561063257600080fd5b506103626106413660046133f6565b611208565b34801561065257600080fd5b5062093a80610398565b34801561066857600080fd5b50610362610677366004613217565b611285565b34801561068857600080fd5b50610362611350565b34801561069d57600080fd5b506103626106ac366004613217565b61137b565b3480156106bd57600080fd5b506103626113af565b3480156106d257600080fd5b506104266106e1366004613217565b60116020526000908152604090205460ff1681565b34801561070257600080fd5b507f0000000000000000000000000000000000000000000000000000000000000000610328565b34801561073557600080fd5b506000546001600160a01b03166105c9565b34801561075357600080fd5b50610426610762366004613217565b600b6020526000908152604090205460ff1681565b34801561078357600080fd5b50610398610792366004613217565b60096020526000908152604090205481565b3480156107b057600080fd5b50306105c9565b3480156107c357600080fd5b506105c97f000000000000000000000000000000000000000000000000000000000000000081565b3480156107f757600080fd5b506004546105c9906001600160a01b031681565b34801561081757600080fd5b5061039860085481565b34801561082d57600080fd5b5061036261083c3660046133f6565b611463565b34801561084d57600080fd5b5061036261085c3660046133f6565b611501565b34801561086d57600080fd5b5061036261087c3660046133f6565b61157d565b34801561088d57600080fd5b5061032861089c366004613553565b600e6020526000908152604090205463ffffffff1681565b3480156108c057600080fd5b506103626115fc565b3480156108d557600080fd5b506108fd7f000000000000000000000000000000000000000000000000000000000000000081565b60405161ffff9091168152602001610339565b34801561091c57600080fd5b506003546105c9906001600160a01b031681565b34801561093c57600080fd5b506001546001600160a01b03166105c9565b34801561095a57600080fd5b506000546001600160a01b031615610426565b34801561097957600080fd5b506103626109883660046133f6565b61166c565b34801561099957600080fd5b506105c97f000000000000000000000000000000000000000000000000000000000000000081565b3480156109cd57600080fd5b5061039860065481565b3480156109e357600080fd5b506103987f000000000000000000000000000000000000000000000000000000000000000081565b348015610a1757600080fd5b50610426610a263660046133f6565b611743565b348015610a3757600080fd5b50610362610a46366004613217565b611754565b348015610a5757600080fd5b50610a6b610a6636600461356e565b611788565b604051610339929190613615565b6000546001600160a01b03163314610aa4576040516311a8a1bb60e31b815260040160405180910390fd5b6008548103610ae95760405162461bcd60e51b815260206004820152600c60248201526b2164656c6179426c6f636b7360a01b60448201526064015b60405180910390fd5b60405133815281907f8bd16320f3b60336ed5fd2a770eb7453e7e71cfef4462addffd7ae9dfe201c8e9060200160405180910390a2600855565b610b2b611957565b43600554600654610b3c9190613644565b1115610b5b576040516346cf2af160e11b815260040160405180910390fd5b4360068190555060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ebf0c7176040518163ffffffff1660e01b8152600401602060405180830381865afa158015610bc2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610be69190613657565b6000818152600c602052604090205490915060ff1615610c3c5760405162461bcd60e51b81526020600482015260116024820152701c9bdbdd08185b1c9958591e481cd95b9d607a1b6044820152606401610ae0565b600081604051602001610c5191815260200190565b6040516020818303038152906040529050610c6c81846119a4565b6000828152600c602052604090819020805460ff19166001179055517fdcaa37a042a0087de79018c629bbd29cee82ca80bd9be394e1696bf9e935507790610cb990839086903390613670565b60405180910390a1505050565b6000546001600160a01b03163314610cf1576040516311a8a1bb60e31b815260040160405180910390fd5b610cf96119f3565b610d01611a43565b565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610d645760405162461bcd60e51b8152600401610ae09060208082526004908201526310a0a6a160e11b604082015260600190565b610d6d81611a98565b7fb3abc57bfeebd2cac918901db582f71972a8e628bccf19f5ae3e3482b98a5ced8133604051610d9e9291906136ae565b60405180910390a150565b610db1611957565b610db9611ab1565b83610df05760405162461bcd60e51b81526020600482015260076024820152662170726f6f667360c81b6044820152606401610ae0565b600085856000818110610e0557610e056136d8565b9050602002810190610e1791906136ee565b610e21908061370f565b604051610e2f92919061375d565b604051809103902090506000610e968288886000818110610e5257610e526136d8565b9050602002810190610e6491906136ee565b60200189896000818110610e7a57610e7a6136d8565b9050602002810190610e8c91906136ee565b6104200135611b0a565b9050610ea481868686611bb1565b6000828152600f60205260409020805460ff1916600190811790915586905b818163ffffffff161015610fca5788888263ffffffff16818110610ee957610ee96136d8565b9050602002810190610efb91906136ee565b610f05908061370f565b604051610f1392919061375d565b604051809103902093506000610f68858b8b8563ffffffff16818110610f3b57610f3b6136d8565b9050602002810190610f4d91906136ee565b6020018c8c8663ffffffff16818110610e7a57610e7a6136d8565b9050838114610fa75760405162461bcd60e51b815260206004820152600b60248201526a085cda185c9959149bdbdd60aa1b6044820152606401610ae0565b506000848152600f60205260409020805460ff1916600190811790915501610ec3565b5060005b818163ffffffff1610156110565761104d89898363ffffffff16818110610ff757610ff76136d8565b905060200281019061100991906136ee565b611013908061370f565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611cac92505050565b50600101610fce565b505050506110646001600755565b5050505050565b7f000000000000000000000000000000000000000000000000000000000000000061ffff168261ffff16146110d25760405162461bcd60e51b815260206004820152600d60248201526c10b9b7bab931b29031b430b4b760991b6044820152606401610ae0565b60008181526011602052604090205460ff16156111255760405162461bcd60e51b8152602060048201526011602482015270185b1c9958591e481c1c9bd8d95cdcd959607a1b6044820152606401610ae0565b6000818152601160205260409020805460ff191660011790556110648386611f89565b6000546001600160a01b03163314611173576040516311a8a1bb60e31b815260040160405180910390fd5b61117c8161205a565b50565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ebf0c7176040518163ffffffff1660e01b8152600401602060405180830381865afa1580156111df573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112039190613657565b905090565b6000546001600160a01b03163314611233576040516311a8a1bb60e31b815260040160405180910390fd5b4761123e82826120c3565b816001600160a01b03167feaff4b37086828766ad3268786972c0cd24259d4c87a80f9d3963a3c3d999b0d8260405161127991815260200190565b60405180910390a25050565b6000546001600160a01b031633146112b0576040516311a8a1bb60e31b815260040160405180910390fd5b6112b86119f3565b600081815260096020526040812054900361130d5760405162461bcd60e51b8152602060048201526015602482015274616767726567617465526f6f74202165786973747360581b6044820152606401610ae0565b60008181526009602052604080822091909155517ff51534ecf10a58db36ce4f5180f59deddf3b3eb7c5e7454e602c2f80a40cc73990610d9e9083815260200190565b6000546001600160a01b03163314610d01576040516311a8a1bb60e31b815260040160405180910390fd5b6000546001600160a01b031633146113a6576040516311a8a1bb60e31b815260040160405180910390fd5b61117c816121e1565b600480546040516384785ecd60e01b815233928101929092526001600160a01b0316906384785ecd90602401602060405180830381865afa1580156113f8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061141c919061376d565b6114535760405162461bcd60e51b815260206004820152600860248201526710bbb0ba31b432b960c11b6044820152606401610ae0565b61145b611957565b610d01612222565b6000546001600160a01b0316331461148e576040516311a8a1bb60e31b815260040160405180910390fd5b6001546001600160a01b0382811691161480156114ac575060025415155b156114ca576040516311bc066560e11b815260040160405180910390fd5b6000546001600160a01b038083169116036114f857604051634a2fb73f60e11b815260040160405180910390fd5b61117c81612265565b6000546001600160a01b0316331461152c576040516311a8a1bb60e31b815260040160405180910390fd5b6001600160a01b0381166000818152600d6020908152604091829020805460ff1916905590519182527f384859c5ef5fafac31e8bc92ce7fb48b1f2c74c4dd5e212eb84ec202fa5d9fad9101610d9e565b6000546001600160a01b031633146115a8576040516311a8a1bb60e31b815260040160405180910390fd5b6001600160a01b0381166000818152600d6020908152604091829020805460ff1916600117905590519182527fd65eca5d561d3a4568c87b9b13ced4ab52a69edadfdfdb22d76bc595f36d7d879101610d9e565b6001546001600160a01b03163314611627576040516311a7f27160e11b815260040160405180910390fd5b62093a8060025442611639919061378f565b11611657576040516324e0285f60e21b815260040160405180910390fd5b600154610d01906001600160a01b03166122b3565b6000546001600160a01b03163314611697576040516311a8a1bb60e31b815260040160405180910390fd5b6004546001600160a01b03908116908216036116f55760405162461bcd60e51b815260206004820152601760248201527f616c72656164792077617463686572206d616e616765720000000000000000006044820152606401610ae0565b600480546001600160a01b0319166001600160a01b0383169081179091556040519081527fc16d059e43d7f8e29ccb4e001a2f249d3c59e274925d6a6bc3912943441d9f6c90602001610d9e565b600061174e82612318565b92915050565b6000546001600160a01b0316331461177f576040516311a8a1bb60e31b815260040160405180910390fd5b61117c81612353565b336000908152600d602052604081205460609060ff166117d95760405162461bcd60e51b815260206004820152600c60248201526b08585b1b1bdddb1a5cdd195960a21b6044820152606401610ae0565b63ffffffff8086166000908152600e6020526040812080549192919091169082611802836137a2565b91906101000a81548163ffffffff021916908363ffffffff160217905550905060006118617f0000000000000000000000000000000000000000000000000000000000000000611858336001600160a01b031690565b848a8a8a6123d1565b80516020820120604051632d287e4360e01b8152600481018290529192509060009081907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632d287e439060240160408051808303816000875af11580156118d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118fb91906137c5565b90925090507f40f08ee347fc927ae45902edc87debb024aab1a311943731968607f603f2152f8361192d60018461378f565b848760405161193f94939291906137e9565b60405180910390a15090989197509095505050505050565b600354600160a01b900460ff1615610d015760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610ae0565b6003546119ef907f0000000000000000000000000000000000000000000000000000000000000000906001600160a01b03166119e86000546001600160a01b031690565b8585612409565b5050565b600354600160a01b900460ff16610d015760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610ae0565b611a4b6119f3565b6003805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6040516316c2fdb560e21b815260040160405180910390fd5b600260075403611b035760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610ae0565b6002600755565b6000806000858152600f602052604090205460ff166002811115611b3057611b3061331c565b14611b735760405162461bcd60e51b8152602060048201526013602482015272214d6573736167655374617475732e4e6f6e6560681b6044820152606401610ae0565b611ba78484602080602002604051908101604052809291908260208002808284376000920191909152508691506125bc9050565b90505b9392505050565b6000848152600b602052604090205460ff16611ca657611bd08361290a565b6000611c068584602080602002604051908101604052809291908260208002808284376000920191909152508691506125bc9050565b9050838114611c4d5760405162461bcd60e51b81526020600482015260136024820152721a5b9d985b1a59081a5b989bdd5b99149bdbdd606a1b6044820152606401610ae0565b6000858152600b602052604090819020805460ff1916600117905551849086907f7ec1ea51fe3db53e55ed9d922854bc2156f467ff2f87d74e2086dae2c84a88a890611c9c9086815260200190565b60405180910390a3505b50505050565b600080611cb98382612a6a565b905063ffffffff7f000000000000000000000000000000000000000000000000000000000000000016611cf162ffffff198316612a8e565b63ffffffff1614611d335760405162461bcd60e51b815260206004820152600c60248201526b10b232b9ba34b730ba34b7b760a11b6044820152606401610ae0565b6000611d4462ffffff198316612aa3565b905060016000828152600f602052604090205460ff166002811115611d6b57611d6b61331c565b14611da25760405162461bcd60e51b815260206004820152600760248201526610b83937bb32b760c91b6044820152606401610ae0565b6000818152600f60205260409020805460ff191660021790556001611e077f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000613644565b611e11919061378f565b5a11611e485760405162461bcd60e51b8152600401610ae0906020808252600490820152632167617360e01b604082015260600190565b6000611e5962ffffff198416612aec565b6040805161010080825261012082019092529192507f000000000000000000000000000000000000000000000000000000000000000091600090826020820181803683370190505090506000611eb462ffffff198816612afd565b611ec362ffffff198916612b11565b611ed262ffffff198a16612b26565b611eef611ee462ffffff198c16612b3b565b62ffffff1916612b69565b604051602401611f029493929190613818565b60408051601f198184030181529190526020810180516001600160e01b031663ab2dc3f560e01b1790529050611f3c858560008685612bb2565b60405191995092507fd42de95a9b26f1be134c8ecce389dc4fcfa18753d01661b7b361233569e8fe4890611f759088908b908690613847565b60405180910390a150505050505050919050565b611f9282612318565b611fd15760405162461bcd60e51b815260206004820152601060248201526f10b6b4b93937b921b7b73732b1ba37b960811b6044820152606401610ae0565b805160201461200c5760405162461bcd60e51b8152602060048201526007602482015266042d8cadccee8d60cb1b6044820152606401610ae0565b61201d61201882613868565b612c3d565b7fb3abc57bfeebd2cac918901db582f71972a8e628bccf19f5ae3e3482b98a5ced813360405161204e9291906136ae565b60405180910390a15050565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b804710156121135760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e63650000006044820152606401610ae0565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114612160576040519150601f19603f3d011682016040523d82523d6000602084013e612165565b606091505b50509050806121dc5760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d617920686176652072657665727465640000000000006064820152608401610ae0565b505050565b60105460408051918252602082018390527f877a02cb809da0364d23adca3cd50c451b53f279d3df632e1fc11eb66335bce5910160405180910390a1601055565b61222a611957565b6003805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258611a7b3390565b42600255600180546001600160a01b0319166001600160a01b0383169081179091556040517f6ab4d119f23076e8ad491bc65ce85f017fb0591dce08755ba8591059cc51737a90600090a250565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b039092166001600160a01b0319928316178155600255600180549091169055565b60035460009061174e907f0000000000000000000000000000000000000000000000000000000000000000906001600160a01b031684612d66565b60055481036123965760405162461bcd60e51b815260206004820152600f60248201526e085b995dc81c985d19481b1a5b5a5d608a1b6044820152606401610ae0565b600581905560408051338152602081018390527f8e7fa5e406cb856aab05575e45ea011c6748376cc1b5229e3d67b92986406a159101610d9e565b60608686868686866040516020016123ee9695949392919061388f565b60405160208183030381529060405290509695505050505050565b81516020146124495760405162461bcd60e51b815260206004820152600c60248201526b042c8c2e8c240d8cadccee8d60a31b6044820152606401610ae0565b600061245482612dbf565b60405163c23ee3c360e01b815261ffff7f0000000000000000000000000000000000000000000000000000000000000000166004820152600060248201819052604482018390529192506001600160a01b0388169063c23ee3c3906064016040805180830381865afa1580156124ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124f291906137c5565b509050866001600160a01b0316634b5ca6f4827f000000000000000000000000000000000000000000000000000000000000000089886000887f00000000000000000000000000000000000000000000000000000000000000008d6040518963ffffffff1660e01b815260040161256f97969594939291906138e9565b60206040518083038185885af115801561258d573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906125b29190613942565b5050505050505050565b6020600582811b8216948552835194820394909452604060008181206002851615871b808503919091528386015190528181206004851615871b808503919091528286015190528181206008851615871b80850391909152606086015190528181206010851615871b8085039190915260808087015190915282822084861615881b8086039190915260a0870151905282822083861615881b8086039190915260c0870151905282822090851615871b8085039190915260e0860151905281812061010080861615881b80860392909252860151905281812061020080861615881b80860392909252610120870151909152828220610400861615881b808603919091526101408701519052828220610800861615881b808603919091526101608701519052828220611000861615881b808603919091526101808701519052828220612000861615881b808603919091526101a08701519052828220614000861615881b808603919091526101c08701519052828220618000861615881b808603919091526101e0870151905282822062010000861615881b8086039190915290860151905281812062020000851615871b80850391909152610220860151905281812062040000851615871b80850391909152610240860151905281812062080000851615871b80850391909152610260860151905281812062100000851615871b80850391909152610280860151905281812062200000851615871b808503919091526102a0860151905281812062400000851615871b808503919091526102c0860151905281812062800000851615871b808503919091526102e086015190528181206301000000851615871b8085039190915261030086015190528181206302000000851615871b8085039190915261032086015190528181206304000000851615871b8085039190915261034086015190528181206308000000851615871b8085039190915261036086015190528181206310000000851615871b8085039190915261038086015190528181206320000000851615871b808503919091526103a086015190528181206340000000851615871b808503919091526103c0860151905281812063800000009094161590951b91829003929092526103e090920151909152902090565b8061294d5760405162461bcd60e51b8152602060048201526013602482015272616767726567617465526f6f7420656d70747960681b6044820152606401610ae0565b6000818152600a602052604090205460ff16156129675750565b600081815260096020526040812054908190036129bd5760405162461bcd60e51b81526020600482015260146024820152731859d9dc9959d85d19549bdbdd0808595e1a5cdd60621b6044820152606401610ae0565b6008546129ca824361378f565b1015612a185760405162461bcd60e51b815260206004820152601760248201527f616767726567617465526f6f74202176657269666965640000000000000000006044820152606401610ae0565b6000828152600a6020526040808220805460ff191660011790555183917f36b314aba9f663b4d3ef3288ae489341cc5e6a2725a05fa2b72df7a27e03f42a91a250600090815260096020526040812055565b815160009060208401612a8564ffffffffff85168284612e1d565b95945050505050565b600061174e62ffffff19831660286004612e5a565b600080612ab98360781c6001600160601b031690565b6001600160601b031690506000612ad98460181c6001600160601b031690565b6001600160601b03169091209392505050565b600061174e612afa83612e8a565b90565b600061174e62ffffff198316826004612e5a565b600061174e62ffffff19831660246004612e5a565b600061174e62ffffff19831660046020612e9b565b600061174e604c612b5981601886901c6001600160601b031661378f565b62ffffff19851691906000612fa6565b6060600080612b818460181c6001600160601b031690565b6001600160601b031690506040519150819250612ba18483602001613022565b508181016020016040529052919050565b6000606060008060008661ffff1667ffffffffffffffff811115612bd857612bd8613230565b6040519080825280601f01601f191660200182016040528015612c02576020820181803683370190505b5090506000808751602089018b8e8ef191503d925086831115612c23578692505b828152826000602083013e90999098509650505050505050565b80612c7b5760405162461bcd60e51b815260206004820152600e60248201526d6e657720726f6f7420656d70747960901b6044820152606401610ae0565b60008181526009602052604090205415612cce5760405162461bcd60e51b8152602060048201526014602482015273726f6f7420616c72656164792070656e64696e6760601b6044820152606401610ae0565b6000818152600a602052604090205460ff1615612d235760405162461bcd60e51b81526020600482015260136024820152723937b7ba1030b63932b0b23c90383937bb32b760691b6044820152606401610ae0565b60008181526009602052604090819020439055517f84ef18531155afdb0e64ff905d67044ae3aac63a6fba4661cfd9c4c14f289bc890610d9e9083815260200190565b6000336001600160a01b03851614612dab5760405162461bcd60e51b815260206004820152600860248201526710b932b630bcb2b960c11b6044820152606401610ae0565b506001600160a01b03918216911614919050565b60008151602014612e015760405162461bcd60e51b815260206004820152600c60248201526b042c8c2e8c240d8cadccee8d60a31b6044820152606401610ae0565b61174e82806020019051810190612e189190613657565b613115565b600080612e2a8385613644565b9050604051811115612e3a575060005b80600003612e4f5762ffffff19915050611baa565b612a8585858561312b565b6000612e6782602061396c565b612e72906008613985565b60ff16612e80858585612e9b565b901c949350505050565b600061174e62ffffff198316602c60205b60008160ff16600003612eb057506000611baa565b612ec38460181c6001600160601b031690565b6001600160601b0316612ed960ff841685613644565b1115612f4157612ef28460781c6001600160601b031690565b612f058560181c6001600160601b031690565b6040516378218d2960e01b81526001600160601b039283166004820152911660248201526044810184905260ff83166064820152608401610ae0565b60208260ff161115612f665760405163045df3f960e01b815260040160405180910390fd5b600882026000612f7f8660781c6001600160601b031690565b6001600160601b031690506000600160ff1b60001984011d91909501511695945050505050565b600080612fbc8660781c6001600160601b031690565b6001600160601b03169050612fd0866131a2565b84612fdb8784613644565b612fe59190613644565b1115612ff85762ffffff1991505061301a565b6130028582613644565b90506130168364ffffffffff168286612e1d565b9150505b949350505050565b600062ffffff198084160361304a5760405163148d513360e21b815260040160405180910390fd5b613053836131db565b1561307157604051632ee0949160e11b815260040160405180910390fd5b60006130868460181c6001600160601b031690565b6001600160601b0316905060006130a68560781c6001600160601b031690565b6001600160601b031690506000806040519150858211156130c75760206060fd5b8386858560045afa9050806130ef57604051632af1bd9b60e21b815260040160405180910390fd5b61310a6130fc8860d81c90565b64ffffffffff16878661312b565b979650505050505050565b60006010548211156131275760105491505b5090565b60006060601883856001600160601b03821682148015613153575086816001600160601b0316145b61318c5760405162461bcd60e51b815260206004820152600a602482015269085d1c9d5b98d85d195960b21b6044820152606401610ae0565b96831b90961790911b90941790931b9392505050565b60006131b78260181c6001600160601b031690565b6131ca8360781c6001600160601b031690565b016001600160601b03169050919050565b60006131e78260d81c90565b64ffffffffff1664ffffffffff0361320157506001919050565b600061320c836131a2565b604051109392505050565b60006020828403121561322957600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561326f5761326f613230565b604052919050565b600082601f83011261328857600080fd5b813567ffffffffffffffff8111156132a2576132a2613230565b6132b5601f8201601f1916602001613246565b8181528460208386010111156132ca57600080fd5b816020850160208301376000918101602001919091529392505050565b6000602082840312156132f957600080fd5b813567ffffffffffffffff81111561331057600080fd5b61301a84828501613277565b634e487b7160e01b600052602160045260246000fd5b602081016003831061335457634e487b7160e01b600052602160045260246000fd5b91905290565b6000806000806000610460868803121561337357600080fd5b853567ffffffffffffffff8082111561338b57600080fd5b818801915088601f83011261339f57600080fd5b8135818111156133ae57600080fd5b8960208260051b85010111156133c357600080fd5b6020928301975095505086013592506104408601878111156133e457600080fd5b94979396509194604001933592915050565b60006020828403121561340857600080fd5b81356001600160a01b0381168114611baa57600080fd5b803561ffff8116811461343157600080fd5b919050565b600080600080600060a0868803121561344e57600080fd5b853567ffffffffffffffff8082111561346657600080fd5b61347289838a01613277565b965060209150818801358181111561348957600080fd5b8801601f81018a1361349a57600080fd5b8035828111156134ac576134ac613230565b8060051b6134bb858201613246565b918252828101850191858101908d8411156134d557600080fd5b86850192505b83831015613511578235868111156134f35760008081fd5b6135018f8983890101613277565b83525091860191908601906134db565b809a50505050505050506040860135925061352e6060870161341f565b949793965091946080013592915050565b803563ffffffff8116811461343157600080fd5b60006020828403121561356557600080fd5b611baa8261353f565b60008060006060848603121561358357600080fd5b61358c8461353f565b925060208401359150604084013567ffffffffffffffff8111156135af57600080fd5b6135bb86828701613277565b9150509250925092565b60005b838110156135e05781810151838201526020016135c8565b50506000910152565b600081518084526136018160208601602086016135c5565b601f01601f19169290920160200192915050565b828152604060208201526000611ba760408301846135e9565b634e487b7160e01b600052601160045260246000fd5b8082018082111561174e5761174e61362e565b60006020828403121561366957600080fd5b5051919050565b60608152600061368360608301866135e9565b828103602084015261369581866135e9565b91505060018060a01b0383166040830152949350505050565b6040815260006136c160408301856135e9565b905060018060a01b03831660208301529392505050565b634e487b7160e01b600052603260045260246000fd5b6000823561043e1983360301811261370557600080fd5b9190910192915050565b6000808335601e1984360301811261372657600080fd5b83018035915067ffffffffffffffff82111561374157600080fd5b60200191503681900382131561375657600080fd5b9250929050565b8183823760009101908152919050565b60006020828403121561377f57600080fd5b81518015158114611baa57600080fd5b8181038181111561174e5761174e61362e565b600063ffffffff8083168181036137bb576137bb61362e565b6001019392505050565b600080604083850312156137d857600080fd5b505080516020909101519092909150565b84815283602082015282604082015260806060820152600061380e60808301846135e9565b9695505050505050565b600063ffffffff80871683528086166020840152508360408301526080606083015261380e60808301846135e9565b8381528215156020820152606060408201526000612a8560608301846135e9565b80516020808301519190811015613889576000198160200360031b1b821691505b50919050565b600063ffffffff60e01b808960e01b168352876004840152808760e01b166024840152808660e01b1660288401525083602c83015282516138d781604c8501602087016135c5565b91909101604c01979650505050505050565b600061ffff808a16835260018060a01b03808a16602085015260e0604085015261391660e085018a6135e9565b925087606085015286608085015281861660a085015280851660c0850152505098975050505050505050565b60006020828403121561395457600080fd5b815167ffffffffffffffff81168114611baa57600080fd5b60ff828116828216039081111561174e5761174e61362e565b60ff81811683821602908116908181146139a1576139a161362e565b509291505056fea2646970667358221220d79b6e82895c6e3a2466aaefbdeb61ff8146607568037bef85098721cc18fadb64736f6c63430008110033";

type WormholeSpokeConnectorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WormholeSpokeConnectorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class WormholeSpokeConnector__factory extends ContractFactory {
  constructor(...args: WormholeSpokeConnectorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _processGas: PromiseOrValue<BigNumberish>,
    _reserveGas: PromiseOrValue<BigNumberish>,
    _delayBlocks: PromiseOrValue<BigNumberish>,
    _merkle: PromiseOrValue<string>,
    _watcherManager: PromiseOrValue<string>,
    _gasCap: PromiseOrValue<BigNumberish>,
    _mirrorChainId: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<WormholeSpokeConnector> {
    return super.deploy(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _processGas,
      _reserveGas,
      _delayBlocks,
      _merkle,
      _watcherManager,
      _gasCap,
      _mirrorChainId,
      overrides || {}
    ) as Promise<WormholeSpokeConnector>;
  }
  override getDeployTransaction(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _processGas: PromiseOrValue<BigNumberish>,
    _reserveGas: PromiseOrValue<BigNumberish>,
    _delayBlocks: PromiseOrValue<BigNumberish>,
    _merkle: PromiseOrValue<string>,
    _watcherManager: PromiseOrValue<string>,
    _gasCap: PromiseOrValue<BigNumberish>,
    _mirrorChainId: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _processGas,
      _reserveGas,
      _delayBlocks,
      _merkle,
      _watcherManager,
      _gasCap,
      _mirrorChainId,
      overrides || {}
    );
  }
  override attach(address: string): WormholeSpokeConnector {
    return super.attach(address) as WormholeSpokeConnector;
  }
  override connect(signer: Signer): WormholeSpokeConnector__factory {
    return super.connect(signer) as WormholeSpokeConnector__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WormholeSpokeConnectorInterface {
    return new utils.Interface(_abi) as WormholeSpokeConnectorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): WormholeSpokeConnector {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as WormholeSpokeConnector;
  }
}
