/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BytesLike,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  AxelarHubConnector,
  AxelarHubConnectorInterface,
} from "../../../../../contracts/messaging/connectors/axelar/AxelarHubConnector";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "_mirrorDomain",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_amb",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rootManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_axelarParams",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Connector__processMessage_notUsed",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidAddressString",
    type: "error",
  },
  {
    inputs: [],
    name: "NotApprovedByGateway",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyOwner_notOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyProposed_notProposedOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__ownershipDelayElapsed_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_noOwnershipChange",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_noProposal",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageProcessed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "encodedData",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previous",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "current",
        type: "address",
      },
    ],
    name: "MirrorConnectorUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "mirrorDomain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "amb",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "rootManager",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "mirrorConnector",
        type: "address",
      },
    ],
    name: "NewConnector",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "proposedOwner",
        type: "address",
      },
    ],
    name: "OwnershipProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "AMB",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIRROR_CHAIN_ID",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIRROR_DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_MANAGER",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptProposedOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "delay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "commandId",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "sourceChain",
        type: "string",
      },
      {
        internalType: "string",
        name: "sourceAddress",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "payload",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "commandId",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "sourceChain",
        type: "string",
      },
      {
        internalType: "string",
        name: "sourceAddress",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "payload",
        type: "bytes",
      },
      {
        internalType: "string",
        name: "tokenSymbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "executeWithToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "gasService",
    outputs: [
      {
        internalType: "contract IAxelarGasService",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "gateway",
    outputs: [
      {
        internalType: "contract IAxelarGateway",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mirrorConnector",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "processMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newlyProposed",
        type: "address",
      },
    ],
    name: "proposeNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proposed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposedTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounced",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "_encodedData",
        type: "bytes",
      },
    ],
    name: "sendMessage",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
    ],
    name: "setMirrorConnector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_expected",
        type: "address",
      },
    ],
    name: "verifySender",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6101406040523480156200001257600080fd5b5060405162002247380380620022478339810160408190526200003591620003f7565b838181888882888884848484846200004d3362000246565b8463ffffffff16600003620000985760405162461bcd60e51b815260206004820152600c60248201526b32b6b83a3c903237b6b0b4b760a11b60448201526064015b60405180910390fd5b6001600160a01b038216620000e45760405162461bcd60e51b815260206004820152601160248201527032b6b83a3c903937b7ba26b0b730b3b2b960791b60448201526064016200008f565b63ffffffff8086166080526001600160a01b0380851660a05283811660c05290851660e0528116156200011c576200011c81620002ab565b604080516001600160a01b0385811682528481166020830152831681830152905163ffffffff86811692908816917f4f9c27c2fe3f84576ea469d367d044da53c45e951617e8389f2b5ed8db9d25f09181900360600190a35050506001600160a01b0388169650620001a8955050505050505760405163e6c4247b60e01b815260040160405180910390fd5b6001600160a01b03166101005280516000908190620001d19084016020908101908501620004b1565b915091508051600003620002195760405162461bcd60e51b815260206004820152600e60248201526d085b5a5c9c9bdc90da185a5b925960921b60448201526064016200008f565b6001600160a01b038216610120526004620002358282620005ab565b505050505050505050505062000677565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b039092166001600160a01b0319928316178155600255600180549091169055565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b805163ffffffff811681146200032957600080fd5b919050565b6001600160a01b03811681146200034457600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b60006001600160401b03808411156200037a576200037a62000347565b604051601f8501601f19908116603f01168101908282118183101715620003a557620003a562000347565b81604052809350858152868686011115620003bf57600080fd5b600092505b85831015620003e4578285015160208483010152602083019250620003c4565b6000602087830101525050509392505050565b60008060008060008060c087890312156200041157600080fd5b6200041c8762000314565b95506200042c6020880162000314565b945060408701516200043e816200032e565b606088015190945062000451816200032e565b608088015190935062000464816200032e565b60a08801519092506001600160401b038111156200048157600080fd5b8701601f810189136200049357600080fd5b620004a4898251602084016200035d565b9150509295509295509295565b60008060408385031215620004c557600080fd5b8251620004d2816200032e565b60208401519092506001600160401b03811115620004ef57600080fd5b8301601f810185136200050157600080fd5b62000512858251602084016200035d565b9150509250929050565b600181811c908216806200053157607f821691505b6020821081036200055257634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620005a657600081815260208120601f850160051c81016020861015620005815750805b601f850160051c820191505b81811015620005a2578281556001016200058d565b5050505b505050565b81516001600160401b03811115620005c757620005c762000347565b620005df81620005d884546200051c565b8462000558565b602080601f831160018114620006175760008415620005fe5750858301515b600019600386901b1c1916600185901b178555620005a2565b600085815260208120601f198616915b82811015620006485788860151825594840194600190910190840162000627565b5085821015620006675787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60805160a05160c05160e0516101005161012051611b48620006ff6000396000818161030d0152610d53015260008181610157015281816104bd015281816106550152610ded0152600081816101a8015261108e0152600081816102d90152818161057a015261106701526000818161044a0152610717015260006102850152611b486000f3fe6080604052600436106101395760003560e01c80636a42b8f8116100ab578063c8a4d6901161006f578063c8a4d690146103ad578063cc394283146103cf578063d1851c92146103ef578063d232c2201461040d578063d69f9d6114610438578063db1b76591461046c57600080fd5b80636a42b8f81461032f578063715018a6146103455780638da5cb5b1461035a578063b1f8100d14610378578063c5b350df1461039857600080fd5b806349160658116100fd57806349160658146102335780634ff746f61461025357806352a9674b146102735780635bd11efc146102a75780635f61e3ec146102c75780636a22d8cc146102fb57600080fd5b8063116191b61461014557806314168416146101965780631a98b2e0146101df5780633cf52ffb1461020157806348e6fa231461022057600080fd5b3661014057005b600080fd5b34801561015157600080fd5b506101797f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156101a257600080fd5b506101ca7f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff909116815260200161018d565b3480156101eb57600080fd5b506101ff6101fa3660046113d7565b61048c565b005b34801561020d57600080fd5b506002545b60405190815260200161018d565b6101ff61022e366004611554565b61056f565b34801561023f57600080fd5b506101ff61024e3660046115b8565b610624565b34801561025f57600080fd5b506101ff61026e36600461165c565b61070c565b34801561027f57600080fd5b506101ca7f000000000000000000000000000000000000000000000000000000000000000081565b3480156102b357600080fd5b506101ff6102c2366004611699565b6107b2565b3480156102d357600080fd5b506101797f000000000000000000000000000000000000000000000000000000000000000081565b34801561030757600080fd5b506101797f000000000000000000000000000000000000000000000000000000000000000081565b34801561033b57600080fd5b5062093a80610212565b34801561035157600080fd5b506101ff6107e9565b34801561036657600080fd5b506000546001600160a01b0316610179565b34801561038457600080fd5b506101ff610393366004611699565b61089d565b3480156103a457600080fd5b506101ff61093b565b3480156103b957600080fd5b506103c26109ab565b60405161018d919061170f565b3480156103db57600080fd5b50600354610179906001600160a01b031681565b3480156103fb57600080fd5b506001546001600160a01b0316610179565b34801561041957600080fd5b506000546001600160a01b0316155b604051901515815260200161018d565b34801561044457600080fd5b506101797f000000000000000000000000000000000000000000000000000000000000000081565b34801561047857600080fd5b50610428610487366004611699565b610a39565b6000858560405161049e929190611722565b604051908190038120631876eed960e01b825291506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690631876eed990610502908e908e908e908e908e9089908d908d908d9060040161175b565b6020604051808303816000875af1158015610521573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061054591906117ba565b61056257604051631403112d60e21b815260040160405180910390fd5b5050505050505050505050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146105db5760405162461bcd60e51b815260206004820152600c60248201526b10b937b7ba26b0b730b3b2b960a11b60448201526064015b60405180910390fd5b6105e58282610a59565b7fdcaa37a042a0087de79018c629bbd29cee82ca80bd9be394e1696bf9e9355077828233604051610618939291906117dc565b60405180910390a15050565b60008282604051610636929190611722565b604051908190038120635f6970c360e01b825291506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690635f6970c390610694908b908b908b908b908b90899060040161181a565b6020604051808303816000875af11580156106b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106d791906117ba565b6106f457604051631403112d60e21b815260040160405180910390fd5b610702878787878787610a74565b5050505050505050565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461076d5760405162461bcd60e51b81526004016105d29060208082526004908201526310a0a6a160e11b604082015260600190565b61077681610b88565b7fb3abc57bfeebd2cac918901db582f71972a8e628bccf19f5ae3e3482b98a5ced81336040516107a792919061185b565b60405180910390a150565b6000546001600160a01b031633146107dd576040516311a8a1bb60e31b815260040160405180910390fd5b6107e681610ba1565b50565b6000546001600160a01b03163314610814576040516311a8a1bb60e31b815260040160405180910390fd5b62093a8060025442610826919061189b565b11610844576040516324e0285f60e21b815260040160405180910390fd5b60025460000361086757604051630e4b303f60e21b815260040160405180910390fd5b6001546001600160a01b031615610891576040516323295ef960e01b815260040160405180910390fd5b61089b6000610c0a565b565b6000546001600160a01b031633146108c8576040516311a8a1bb60e31b815260040160405180910390fd5b6001546001600160a01b0382811691161480156108e6575060025415155b15610904576040516311bc066560e11b815260040160405180910390fd5b6000546001600160a01b0380831691160361093257604051634a2fb73f60e11b815260040160405180910390fd5b6107e681610c6f565b6001546001600160a01b03163314610966576040516311a7f27160e11b815260040160405180910390fd5b62093a8060025442610978919061189b565b11610996576040516324e0285f60e21b815260040160405180910390fd5b60015461089b906001600160a01b0316610c0a565b600480546109b8906118ae565b80601f01602080910402602001604051908101604052809291908181526020018280546109e4906118ae565b8015610a315780601f10610a0657610100808354040283529160200191610a31565b820191906000526020600020905b815481529060010190602001808311610a1457829003601f168201915b505050505081565b6000610a53826003546001600160a01b0391821691161490565b92915050565b600354610a70906001600160a01b03168383610cbd565b5050565b6004604051602001610a8691906118e8565b604051602081830303815290604052805190602001208686604051602001610aaf929190611722565b6040516020818303038152906040528051906020012014610b025760405162461bcd60e51b815260206004820152600d60248201526c10b9b7bab931b29031b430b4b760991b60448201526064016105d2565b610b80610b4485858080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610e5792505050565b83838080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610fd692505050565b505050505050565b6040516316c2fdb560e21b815260040160405180910390fd5b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b039092166001600160a01b0319928316178155600255600180549091169055565b42600255600180546001600160a01b0319166001600160a01b0383169081179091556040517f6ab4d119f23076e8ad491bc65ce85f017fb0591dce08755ba8591059cc51737a90600090a250565b8151602014610cfd5760405162461bcd60e51b815260206004820152600c60248201526b042c8c2e8c240d8cadccee8d60a31b60448201526064016105d2565b805115610d3b5760405162461bcd60e51b815260206004820152600c60248201526b042c8c2e8c240d8cadccee8d60a31b60448201526064016105d2565b6000610d4f846001600160a01b0316611143565b90507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316630c93e3bb343060048588336040518763ffffffff1660e01b8152600401610da79594939291906119db565b6000604051808303818588803b158015610dc057600080fd5b505af1158015610dd4573d6000803e3d6000fd5b5050604051631c92115f60e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169350631c92115f9250610e299150600490859088908301611a39565b600060405180830381600087803b158015610e4357600080fd5b505af1158015610702573d6000803e3d6000fd5b6000808290506000808251602a141580610e97575082600081518110610e7f57610e7f611a7c565b6020910101516001600160f81b031916600360fc1b14155b80610ec8575082600181518110610eb057610eb0611a7c565b6020910101516001600160f81b031916600f60fb1b14155b15610ee657604051636fa478cf60e11b815260040160405180910390fd5b60025b602a811015610fcc57838181518110610f0457610f04611a7c565b016020015160f81c915060618210801590610f23575060668260ff1611155b15610f3a57610f33605783611a92565b9150610fa3565b60418260ff1610158015610f52575060468260ff1611155b15610f6257610f33603783611a92565b60308260ff1610158015610f7a575060398260ff1611155b15610f8a57610f33603083611a92565b604051636fa478cf60e11b815260040160405180910390fd5b6002610fb082602961189b565b60ff8416911b1b9290921791610fc581611aab565b9050610ee9565b5090949350505050565b6003546001600160a01b038381169116146110225760405162461bcd60e51b815260206004820152600c60248201526b10b61921b7b73732b1ba37b960a11b60448201526064016105d2565b805160201461105d5760405162461bcd60e51b8152602060048201526007602482015266042d8cadccee8d60cb1b60448201526064016105d2565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016638e7d93fa7f00000000000000000000000000000000000000000000000000000000000000006110b684611ac4565b6040516001600160e01b031960e085901b16815263ffffffff9290921660048301526024820152604401600060405180830381600087803b1580156110fa57600080fd5b505af115801561110e573d6000803e3d6000fd5b505050507fb3abc57bfeebd2cac918901db582f71972a8e628bccf19f5ae3e3482b98a5ced813360405161061892919061185b565b604051606082811b6bffffffffffffffffffffffff191660208301529060009060340160408051601f198184030181528282528051838301909252601083526f181899199a1a9b1b9c1cb0b131b232b360811b602084015280519093509091906000906111b1906002611ae8565b6111bc906002611aff565b67ffffffffffffffff8111156111d4576111d46114b1565b6040519080825280601f01601f1916602001820160405280156111fe576020820181803683370190505b509050600360fc1b8160008151811061121957611219611a7c565b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061124857611248611a7c565b60200101906001600160f81b031916908160001a90535060005b838110156113845782600486838151811061127f5761127f611a7c565b016020015182516001600160f81b031990911690911c60f81c9081106112a7576112a7611a7c565b01602001516001600160f81b031916826112c2836002611ae8565b6112cd906002611aff565b815181106112dd576112dd611a7c565b60200101906001600160f81b031916908160001a9053508285828151811061130757611307611a7c565b602091010151815160f89190911c600f1690811061132757611327611a7c565b01602001516001600160f81b03191682611342836002611ae8565b61134d906003611aff565b8151811061135d5761135d611a7c565b60200101906001600160f81b031916908160001a90535061137d81611aab565b9050611262565b5095945050505050565b60008083601f8401126113a057600080fd5b50813567ffffffffffffffff8111156113b857600080fd5b6020830191508360208285010111156113d057600080fd5b9250929050565b60008060008060008060008060008060c08b8d0312156113f657600080fd5b8a35995060208b013567ffffffffffffffff8082111561141557600080fd5b6114218e838f0161138e565b909b50995060408d013591508082111561143a57600080fd5b6114468e838f0161138e565b909950975060608d013591508082111561145f57600080fd5b61146b8e838f0161138e565b909750955060808d013591508082111561148457600080fd5b506114918d828e0161138e565b9150809450508092505060a08b013590509295989b9194979a5092959850565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126114d857600080fd5b813567ffffffffffffffff808211156114f3576114f36114b1565b604051601f8301601f19908116603f0116810190828211818310171561151b5761151b6114b1565b8160405283815286602085880101111561153457600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806040838503121561156757600080fd5b823567ffffffffffffffff8082111561157f57600080fd5b61158b868387016114c7565b935060208501359150808211156115a157600080fd5b506115ae858286016114c7565b9150509250929050565b60008060008060008060006080888a0312156115d357600080fd5b87359650602088013567ffffffffffffffff808211156115f257600080fd5b6115fe8b838c0161138e565b909850965060408a013591508082111561161757600080fd5b6116238b838c0161138e565b909650945060608a013591508082111561163c57600080fd5b506116498a828b0161138e565b989b979a50959850939692959293505050565b60006020828403121561166e57600080fd5b813567ffffffffffffffff81111561168557600080fd5b611691848285016114c7565b949350505050565b6000602082840312156116ab57600080fd5b81356001600160a01b03811681146116c257600080fd5b9392505050565b6000815180845260005b818110156116ef576020818501810151868301820152016116d3565b506000602082860101526020601f19601f83011685010191505092915050565b6020815260006116c260208301846116c9565b8183823760009101908152919050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b89815260c06020820152600061177560c083018a8c611732565b828103604084015261178881898b611732565b905086606084015282810360808401526117a3818688611732565b9150508260a08301529a9950505050505050505050565b6000602082840312156117cc57600080fd5b815180151581146116c257600080fd5b6060815260006117ef60608301866116c9565b828103602084015261180181866116c9565b91505060018060a01b0383166040830152949350505050565b868152608060208201526000611834608083018789611732565b8281036040840152611847818688611732565b915050826060830152979650505050505050565b60408152600061186e60408301856116c9565b905060018060a01b03831660208301529392505050565b634e487b7160e01b600052601160045260246000fd5b81810381811115610a5357610a53611885565b600181811c908216806118c257607f821691505b6020821081036118e257634e487b7160e01b600052602260045260246000fd5b50919050565b60008083546118f6816118ae565b6001828116801561190e576001811461192357611952565b60ff1984168752821515830287019450611952565b8760005260208060002060005b858110156119495781548a820152908401908201611930565b50505082870194505b50929695505050505050565b6000815461196b816118ae565b80855260206001838116801561198857600181146119a2576119d0565b60ff1985168884015283151560051b8801830195506119d0565b866000528260002060005b858110156119c85781548a82018601529083019084016119ad565b890184019650505b505050505092915050565b600060018060a01b03808816835260a060208401526119fd60a084018861195e565b8381036040850152611a0f81886116c9565b90508381036060850152611a2381876116c9565b9250508084166080840152509695505050505050565b606081526000611a4c606083018661195e565b8281036020840152611a5e81866116c9565b90508281036040840152611a7281856116c9565b9695505050505050565b634e487b7160e01b600052603260045260246000fd5b60ff8281168282160390811115610a5357610a53611885565b600060018201611abd57611abd611885565b5060010190565b805160208083015191908110156118e25760001960209190910360031b1b16919050565b8082028115828204841417610a5357610a53611885565b80820180821115610a5357610a5361188556fea2646970667358221220619c7b6be2773a34b5c77d7639f221031213e4613e72963fb9327d874e22be8d64736f6c63430008110033";

type AxelarHubConnectorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AxelarHubConnectorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AxelarHubConnector__factory extends ContractFactory {
  constructor(...args: AxelarHubConnectorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _axelarParams: PromiseOrValue<BytesLike>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AxelarHubConnector> {
    return super.deploy(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _axelarParams,
      overrides || {}
    ) as Promise<AxelarHubConnector>;
  }
  override getDeployTransaction(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _axelarParams: PromiseOrValue<BytesLike>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _axelarParams,
      overrides || {}
    );
  }
  override attach(address: string): AxelarHubConnector {
    return super.attach(address) as AxelarHubConnector;
  }
  override connect(signer: Signer): AxelarHubConnector__factory {
    return super.connect(signer) as AxelarHubConnector__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AxelarHubConnectorInterface {
    return new utils.Interface(_abi) as AxelarHubConnectorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AxelarHubConnector {
    return new Contract(address, _abi, signerOrProvider) as AxelarHubConnector;
  }
}
