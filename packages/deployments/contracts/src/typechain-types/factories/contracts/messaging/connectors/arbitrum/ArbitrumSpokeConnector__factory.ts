/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  ArbitrumSpokeConnector,
  ArbitrumSpokeConnectorInterface,
} from "../../../../../contracts/messaging/connectors/arbitrum/ArbitrumSpokeConnector";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "_mirrorDomain",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_amb",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rootManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_mirrorGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_processGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_reserveGas",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "NotCrossChainCall",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__acceptProposedOwner_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyOwner_notOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyProposed_notProposedOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_noOwnershipChange",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_noProposal",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "current",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "previous",
        type: "bytes32",
      },
    ],
    name: "AggregateRootUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
    ],
    name: "Dispatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageProcessed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previous",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "current",
        type: "address",
      },
    ],
    name: "MirrorConnectorUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "previous",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "current",
        type: "uint256",
      },
    ],
    name: "MirrorGasUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "mirrorDomain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "amb",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "rootManager",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "mirrorConnector",
        type: "address",
      },
    ],
    name: "NewConnector",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "proposedOwner",
        type: "address",
      },
    ],
    name: "OwnershipProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "returnData",
        type: "bytes",
      },
    ],
    name: "Process",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "SenderAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "SenderRemoved",
    type: "event",
  },
  {
    inputs: [],
    name: "AMB",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIRROR_DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PROCESS_GAS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "RESERVE_GAS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_MANAGER",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptProposedOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
    ],
    name: "addSender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "aggregateRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "count",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "delay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_destinationDomain",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "_recipientAddress",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_messageBody",
        type: "bytes",
      },
    ],
    name: "dispatch",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "home",
    outputs: [
      {
        internalType: "contract IOutbox",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_potentialReplica",
        type: "address",
      },
    ],
    name: "isReplica",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "localDomain",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "messages",
    outputs: [
      {
        internalType: "enum SpokeConnector.MessageStatus",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mirrorConnector",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mirrorGas",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "outboundRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "processMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newlyProposed",
        type: "address",
      },
    ],
    name: "proposeNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proposed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposedTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes",
      },
      {
        internalType: "bytes32[32]",
        name: "_proof",
        type: "bytes32[32]",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "proveAndProcess",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "provenRoots",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
    ],
    name: "removeSender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounced",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "send",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
    ],
    name: "setMirrorConnector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_mirrorGas",
        type: "uint256",
      },
    ],
    name: "setMirrorGas",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "tree",
    outputs: [
      {
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_expected",
        type: "address",
      },
    ],
    name: "verifySender",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "whitelistedSenders",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6101406040523480156200001257600080fd5b5060405162002ea638038062002ea6833981016040819052620000359162000375565b87878787878787878787878787876200004e336200023a565b8563ffffffff16600003620000995760405162461bcd60e51b815260206004820152600c60248201526b32b6b83a3c903237b6b0b4b760a11b60448201526064015b60405180910390fd5b6001600160a01b038316620000e55760405162461bcd60e51b815260206004820152601160248201527032b6b83a3c903937b7ba26b0b730b3b2b960791b604482015260640162000090565b63ffffffff8087166080526001600160a01b0380861660a05284811660c05290861660e0528216156200011d576200011d8262000299565b80156200012f576200012f8162000302565b604080516001600160a01b0386811682528581166020830152841681830152905163ffffffff87811692908916917f4f9c27c2fe3f84576ea469d367d044da53c45e951617e8389f2b5ed8db9d25f09181900360600190a350506001602655505050620cf8508310159050620001d75760405162461bcd60e51b815260206004820152600c60248201526b2170726f636573732067617360a01b604482015260640162000090565b613a988110156200021a5760405162461bcd60e51b815260206004820152600c60248201526b21726573657276652067617360a01b604482015260640162000090565b610100919091526101205250620004029c50505050505050505050505050565b600080546001600160a01b038381166001600160a01b0319808416821785556002859055600180549091169055604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b60045460408051918252602082018390527f34b09b90f4cfa8747776f5cffd7d53ce7863a9b1f1fc8121903d22543a256511910160405180910390a1600455565b805163ffffffff811681146200035857600080fd5b919050565b80516001600160a01b03811681146200035857600080fd5b600080600080600080600080610100898b0312156200039357600080fd5b6200039e8962000343565b9750620003ae60208a0162000343565b9650620003be60408a016200035d565b9550620003ce60608a016200035d565b9450620003de60808a016200035d565b935060a0890151925060c0890151915060e089015190509295985092959890939650565b60805160a05160c05160e0516101005161012051612a1562000491600039600081816102790152610e7c01526000818161050601528181610e9d0152610f240152600061023d015260006103760152600081816104df0152818161058f015281816111c1015261123901526000818161033c015281816103f101528181610ad80152610d7e0152612a156000f3fe608060405234801561001057600080fd5b506004361061021c5760003560e01c80639fa92f9d11610125578063d1851c92116100ad578063db1b76591161007c578063db1b765914610528578063ee250e061461053b578063f38a267b14610544578063fa31de0114610567578063fd54b2281461057a57600080fd5b8063d1851c92146104b7578063d232c220146104c8578063d69f9d61146104da578063d88beda21461050157600080fd5b8063b697f531116100f4578063b697f5311461045a578063b95a20011461046d578063c5b350df14610493578063cc3942831461049b578063cf796c75146104ae57600080fd5b80639fa92f9d14610426578063b1f8100d1461042c578063b2f876431461043f578063b46300ec1461045257600080fd5b80635bd11efc116101a85780636a42b8f8116101775780636a42b8f8146103cb5780636eb67a51146103d4578063715018a6146103e75780638d3638f4146103ef5780638da5cb5b1461041557600080fd5b80635bd11efc1461035e5780635f61e3ec146103715780636188af0e146103b057806365eaf11b146103c357600080fd5b80632bbd59ca116101ef5780632bbd59ca146102ce5780633cf52ffb146102fe5780634ff746f6146103065780635190bc531461031b57806352a9674b1461033757600080fd5b806306661abd14610221578063141684161461023857806325e3beda14610274578063272efc691461029b575b600080fd5b6025545b6040519081526020015b60405180910390f35b61025f7f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff909116815260200161022f565b6102257f000000000000000000000000000000000000000000000000000000000000000081565b6102be6102a93660046122de565b60296020526000908152604090205460ff1681565b604051901515815260200161022f565b6102f16102dc3660046122fb565b602b6020526000908152604090205460ff1681565b60405161022f919061232a565b600254610225565b6103196103143660046123f5565b610584565b005b6102be6103293660046122de565b6001600160a01b0316301490565b61025f7f000000000000000000000000000000000000000000000000000000000000000081565b61031961036c3660046122de565b610633565b6103987f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161022f565b6103196103be36600461242a565b61066a565b6102256106c0565b62093a80610225565b6103196103e23660046122fb565b6106d1565b610319610705565b7f000000000000000000000000000000000000000000000000000000000000000061025f565b6000546001600160a01b0316610398565b30610398565b61031961043a3660046122de565b6107c4565b61031961044d3660046122de565b610869565b6103196108e5565b6103196104683660046122de565b61094e565b61025f61047b3660046124a3565b602a6020526000908152604090205463ffffffff1681565b6103196109cd565b600354610398906001600160a01b031681565b61022560045481565b6001546001600160a01b0316610398565b6000546001600160a01b0316156102be565b6103987f000000000000000000000000000000000000000000000000000000000000000081565b6102257f000000000000000000000000000000000000000000000000000000000000000081565b6102be6105363660046122de565b610a28565b61022560275481565b6102be6105523660046122fb565b60286020526000908152604090205460ff1681565b6102256105753660046124be565b610a39565b6025546102259081565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146105ee5760405162461bcd60e51b81526004016105e59060208082526004908201526310a0a6a160e11b604082015260600190565b60405180910390fd5b6105f781610b7c565b7fb3abc57bfeebd2cac918901db582f71972a8e628bccf19f5ae3e3482b98a5ced813360405161062892919061256d565b60405180910390a150565b6000546001600160a01b0316331461065e576040516311a8a1bb60e31b815260040160405180910390fd5b61066781610c1c565b50565b61067c83805190602001208383610c85565b6106b15760405162461bcd60e51b81526020600482015260066024820152652170726f766560d01b60448201526064016105e5565b6106ba83610d10565b50505050565b60006106cc6005611057565b905090565b6000546001600160a01b031633146106fc576040516311a8a1bb60e31b815260040160405180910390fd5b6106678161106a565b6000546001600160a01b03163314610730576040516311a8a1bb60e31b815260040160405180910390fd5b60025460000361075357604051630e4b303f60e21b815260040160405180910390fd5b62093a806002544261076591906125ad565b11610783576040516386d4b3f160e01b815260040160405180910390fd5b6001546001600160a01b0316156107ad576040516323295ef960e01b815260040160405180910390fd5b6001546107c2906001600160a01b03166110ab565b565b6000546001600160a01b031633146107ef576040516311a8a1bb60e31b815260040160405180910390fd5b6001546001600160a01b03828116911614801561081457506001600160a01b03811615155b15610832576040516311bc066560e11b815260040160405180910390fd5b6000546001600160a01b0380831691160361086057604051634a2fb73f60e11b815260040160405180910390fd5b6106678161110a565b6000546001600160a01b03163314610894576040516311a8a1bb60e31b815260040160405180910390fd5b6001600160a01b038116600081815260296020908152604091829020805460ff1916905590519182527f384859c5ef5fafac31e8bc92ce7fb48b1f2c74c4dd5e212eb84ec202fa5d9fad9101610628565b60006108f16005611057565b60405160200161090391815260200190565b604051602081830303815290604052905061091d81611158565b7fa69577a1e55dd0712044e7078b408c39fadff8b3e1b334b202ff17e70eda9fdc813360405161062892919061256d565b6000546001600160a01b03163314610979576040516311a8a1bb60e31b815260040160405180910390fd5b6001600160a01b038116600081815260296020908152604091829020805460ff1916600117905590519182527fd65eca5d561d3a4568c87b9b13ced4ab52a69edadfdfdb22d76bc595f36d7d879101610628565b6001546001600160a01b031633146109f8576040516311a7f27160e11b815260040160405180910390fd5b62093a8060025442610a0a91906125ad565b116107ad5760405163d39c12bb60e01b815260040160405180910390fd5b6000610a3382611232565b92915050565b3360009081526029602052604081205460ff16610a875760405162461bcd60e51b815260206004820152600c60248201526b085dda1a5d195b1a5cdd195960a21b60448201526064016105e5565b63ffffffff8085166000908152602a602052604090205416610aaa8160016125c4565b63ffffffff8681166000908152602a60205260408120805463ffffffff191693909216929092179055610b017f00000000000000000000000000000000000000000000000000000000000000003384898989611278565b80516020820120909150610b166005826112b0565b7f40f08ee347fc927ae45902edc87debb024aab1a311943731968607f603f2152f816001610b4360255490565b610b4d91906125ad565b610b576005611057565b85604051610b6894939291906125ec565b60405180910390a1925050505b9392505050565b600354610b91906001600160a01b0316611232565b610bd05760405162461bcd60e51b815260206004820152601060248201526f10b6b4b93937b921b7b73732b1ba37b960811b60448201526064016105e5565b8051602014610c0b5760405162461bcd60e51b8152602060048201526007602482015266042d8cadccee8d60cb1b60448201526064016105e5565b610667610c1782612611565b6113cd565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b6000806000858152602b602052604090205460ff166002811115610cab57610cab612314565b14610cee5760405162461bcd60e51b8152602060048201526013602482015272214d6573736167655374617475732e4e6f6e6560681b60448201526064016105e5565b5050506000908152602b60205260409020805460ff1916600190811790915590565b6000600260265403610d645760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016105e5565b60026026556000610d75838261140f565b905063ffffffff7f000000000000000000000000000000000000000000000000000000000000000016610dad62ffffff198316611433565b63ffffffff1614610def5760405162461bcd60e51b815260206004820152600c60248201526b10b232b9ba34b730ba34b7b760a11b60448201526064016105e5565b6000610e0062ffffff198316611448565b905060016000828152602b602052604090205460ff166002811115610e2757610e27612314565b14610e5e5760405162461bcd60e51b815260206004820152600760248201526610b83937bb32b760c91b60448201526064016105e5565b6000818152602b60205260409020805460ff19166002179055610ec17f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000612635565b5a1015610ef95760405162461bcd60e51b81526004016105e5906020808252600490820152632167617360e01b604082015260600190565b6000610f0a62ffffff198416611491565b6040805161010080825261012082019092529192506000917f0000000000000000000000000000000000000000000000000000000000000000908390836020820181803683370190505090506000610f6762ffffff1989166114a2565b610f7662ffffff198a166114b6565b610f8562ffffff198b166114cb565b610fa2610f9762ffffff198d166114e0565b62ffffff191661150e565b604051602401610fb5949392919061264d565b60408051601f198184030181529190526020810180516001600160e01b031663ab2dc3f560e01b17815281519192506000918291828a88f198503d945083851115610ffe578394505b848252846000602084013e7fd42de95a9b26f1be134c8ecce389dc4fcfa18753d01661b7b361233569e8fe48878a8460405161103c9392919061267c565b60405180910390a15050600160265550949695505050505050565b6000610a3382611065611557565b611a18565b60045460408051918252602082018390527f34b09b90f4cfa8747776f5cffd7d53ce7863a9b1f1fc8121903d22543a256511910160405180910390a1600455565b600080546001600160a01b038381166001600160a01b0319808416821785556002859055600180549091169055604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b42600255600180546001600160a01b0319166001600160a01b0383169081179091556040517f6ab4d119f23076e8ad491bc65ce85f017fb0591dce08755ba8591059cc51737a90600090a250565b6000634ff746f660e01b82604051602401611173919061269d565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199094169390931790925260035491516349460b4d60e11b81529092506001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081169263928c169a926111fc92919091169085906004016126b0565b600060405180830381600087803b15801561121657600080fd5b505af115801561122a573d6000803e3d6000fd5b505050505050565b600061125d7f0000000000000000000000000000000000000000000000000000000000000000611aea565b6001600160a01b0316826001600160a01b0316149050919050565b6060868686868686604051602001611295969594939291906126d4565b60405160208183030381529060405290509695505050505050565b60016112be60206002612812565b6112c891906125ad565b82602001541061130d5760405162461bcd60e51b815260206004820152601060248201526f1b595c9adb19481d1c995948199d5b1b60821b60448201526064016105e5565b60018260200160008282546113229190612635565b9091555050602082015460005b60208110156113bf578160011660010361135e57828482602081106113565761135661281e565b015550505050565b8381602081106113705761137061281e565b015460408051602081019290925281018490526060016040516020818303038152906040528051906020012092506002826113ab9190612834565b9150806113b781612856565b91505061132f565b506113c861286f565b505050565b6027546040805183815260208101929092527fd93b9a9123395d96a15a0cff10295f286f99a0962c9adb978bad3ab6aaea7213910160405180910390a1602755565b81516000906020840161142a64ffffffffff85168284611b74565b95945050505050565b6000610a3362ffffff19831660286004611bbb565b60008061145e8360781c6001600160601b031690565b6001600160601b03169050600061147e8460181c6001600160601b031690565b6001600160601b03169091209392505050565b6000610a3361149f83611beb565b90565b6000610a3362ffffff198316826004611bbb565b6000610a3362ffffff19831660246004611bbb565b6000610a3362ffffff19831660046020611bfc565b6000610a33604c6114fe81601886901c6001600160601b03166125ad565b62ffffff19851691906000611d58565b60606000806115268460181c6001600160601b031690565b6001600160601b0316905060405191508192506115468483602001611dd4565b508181016020016040529052919050565b61155f6122aa565b600081527fad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb560208201527fb4c11951957c6f8f642c4af61cd6b24640fec6dc7fc607ee8206a99e92410d3060408201527f21ddb9a356815c3fac1026b6dec5df3124afbadb485c9ba5a3e3398a04b7ba8560608201527fe58769b32a1beaf1ea27375a44095a0d1fb664ce2dd358e7fcbfb78c26a1934460808201527f0eb01ebfc9ed27500cd4dfc979272d1f0913cc9f66540d7e8005811109e1cf2d60a08201527f887c22bd8750d34016ac3c66b5ff102dacdd73f6b014e710b51e8022af9a196860c08201527fffd70157e48063fc33c97a050f7f640233bf646cc98d9524c6b92bcf3ab56f8360e08201527f9867cc5f7f196b93bae1e27e6320742445d290f2263827498b54fec539f756af6101008201527fcefad4e508c098b9a7e1d8feb19955fb02ba9675585078710969d3440f5054e06101208201527ff9dc3e7fe016e050eff260334f18a5d4fe391d82092319f5964f2e2eb7c1c3a56101408201527ff8b13a49e282f609c317a833fb8d976d11517c571d1221a265d25af778ecf8926101608201527f3490c6ceeb450aecdc82e28293031d10c7d73bf85e57bf041a97360aa2c5d99c6101808201527fc1df82d9c4b87413eae2ef048f94b4d3554cea73d92b0f7af96e0271c691e2bb6101a08201527f5c67add7c6caf302256adedf7ab114da0acfe870d449a3a489f781d659e8becc6101c08201527fda7bce9f4e8618b6bd2f4132ce798cdc7a60e7e1460a7299e3c6342a579626d26101e08201527f2733e50f526ec2fa19a22b31e8ed50f23cd1fdf94c9154ed3a7609a2f1ff981f6102008201527fe1d3b5c807b281e4683cc6d6315cf95b9ade8641defcb32372f1c126e398ef7a6102208201527f5a2dce0a8a7f68bb74560f8f71837c2c2ebbcbf7fffb42ae1896f13f7c7479a06102408201527fb46a28b6f55540f89444f63de0378e3d121be09e06cc9ded1c20e65876d36aa06102608201527fc65e9645644786b620e2dd2ad648ddfcbf4a7e5b1a3a4ecfe7f64667a3f0b7e26102808201527ff4418588ed35a2458cffeb39b93d26f18d2ab13bdce6aee58e7b99359ec2dfd96102a08201527f5a9c16dc00d6ef18b7933a6f8dc65ccb55667138776f7dea101070dc8796e3776102c08201527f4df84f40ae0c8229d0d6069e5c8f39a7c299677a09d367fc7b05e3bc380ee6526102e08201527fcdc72595f74c7b1043d0e1ffbab734648c838dfb0527d971b602bc216c9619ef6103008201527f0abf5ac974a1ed57f4050aa510dd9c74f508277b39d7973bb2dfccc5eeb0618d6103208201527fb8cd74046ff337f0a7bf2c8e03e10f642c1886798d71806ab1e888d9e5ee87d06103408201527f838c5655cb21c6cb83313b5a631175dff4963772cce9108188b34ac87c81c41e6103608201527f662ee4dd2dd7b2bc707961b1e646c4047669dcb6584f0d8d770daf5d7e7deb2e6103808201527f388ab20e2573d171a88108e79d820e98f26c0b84aa8b2f4aa4968dbb818ea3226103a08201527f93237c50ba75ee485f4c22adf2f741400bdf8d6a9cc7df7ecae576221665d7356103c08201527f8448818bb4ae4562849e949e17ac16e0be16688e156b5cf15e098c627c0056a96103e082015290565b6020820154600090815b6020811015611ae257600182821c166000868360208110611a4557611a4561281e565b0154905081600103611a82576040805160208101839052908101869052606001604051602081830303815290604052805190602001209450611acd565b84868460208110611a9557611a9561281e565b6020020151604051602001611ab4929190918252602082015260400190565b6040516020818303038152906040528051906020012094505b50508080611ada90612856565b915050611a22565b505092915050565b6000611af582611f35565b611b125760405163253a6fc960e11b815260040160405180910390fd5b816001600160a01b031663d74523b36040518163ffffffff1660e01b8152600401602060405180830381865afa158015611b50573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a339190612885565b600080611b818385612635565b9050604051811115611b91575060005b80600003611ba65762ffffff19915050610b75565b5050606092831b9190911790911b1760181b90565b6000611bc88260206128a2565b611bd39060086128c5565b60ff16611be1858585611bfc565b901c949350505050565b6000610a3362ffffff198316602c60205b60008160ff16600003611c1157506000610b75565b611c248460181c6001600160601b031690565b6001600160601b0316611c3a60ff841685612635565b1115611c9e57611c85611c568560781c6001600160601b031690565b6001600160601b0316611c728660181c6001600160601b031690565b6001600160601b0316858560ff16611f99565b60405162461bcd60e51b81526004016105e5919061269d565b60208260ff161115611d185760405162461bcd60e51b815260206004820152603a60248201527f54797065644d656d566965772f696e646578202d20417474656d70746564207460448201527f6f20696e646578206d6f7265207468616e20333220627974657300000000000060648201526084016105e5565b600882026000611d318660781c6001600160601b031690565b6001600160601b031690506000600160ff1b60001984011d91909501511695945050505050565b600080611d6e8660781c6001600160601b031690565b6001600160601b03169050611d8286612007565b84611d8d8784612635565b611d979190612635565b1115611daa5762ffffff19915050611dcc565b611db48582612635565b9050611dc88364ffffffffff168286611b74565b9150505b949350505050565b600062ffffff1980841603611e3c5760405162461bcd60e51b815260206004820152602860248201527f54797065644d656d566965772f636f7079546f202d204e756c6c20706f696e7460448201526732b9103232b932b360c11b60648201526084016105e5565b611e4583612040565b611ea55760405162461bcd60e51b815260206004820152602b60248201527f54797065644d656d566965772f636f7079546f202d20496e76616c696420706f60448201526a34b73a32b9103232b932b360a91b60648201526084016105e5565b6000611eba8460181c6001600160601b031690565b6001600160601b031690506000611eda8560781c6001600160601b031690565b6001600160601b031690506000604051905084811115611efa5760206060fd5b8285848460045afa50611f2b611f108760d81c90565b64ffffffffff60601b606091821b168717901b841760181b90565b9695505050505050565b6000816001600160a01b031663175a260b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611f75573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a3391906128e6565b60606000611fa68661207d565b9150506000611fb48661207d565b9150506000611fc28661207d565b9150506000611fd08661207d565b91505083838383604051602001611fea9493929190612908565b604051602081830303815290604052945050505050949350505050565b600061201c8260181c6001600160601b031690565b61202f8360781c6001600160601b031690565b016001600160601b03169050919050565b600061204c8260d81c90565b64ffffffffff1664ffffffffff0361206657506000919050565b600061207183612007565b60405110199392505050565b600080601f5b600f8160ff1611156120d257600061209c8260086128c5565b60ff1685901c90506120ad8161212b565b61ffff16841793508160ff166010146120c857601084901b93505b5060001901612083565b50600f5b60ff8160ff1610156121255760006120ef8260086128c5565b60ff1685901c90506121008161212b565b61ffff16831792508160ff1660001461211b57601083901b92505b50600019016120d6565b50915091565b600061213d60048360ff16901c61215d565b60ff1661ffff919091161760081b6121548261215d565b60ff1617919050565b600060f08083179060ff821690036121785750603092915050565b8060ff1660f10361218c5750603192915050565b8060ff1660f2036121a05750603292915050565b8060ff1660f3036121b45750603392915050565b8060ff1660f4036121c85750603492915050565b8060ff1660f5036121dc5750603592915050565b8060ff1660f6036121f05750603692915050565b8060ff1660f7036122045750603792915050565b8060ff1660f8036122185750603892915050565b8060ff1660f90361222c5750603992915050565b8060ff1660fa036122405750606192915050565b8060ff1660fb036122545750606292915050565b8060ff1660fc036122685750606392915050565b8060ff1660fd0361227c5750606492915050565b8060ff1660fe036122905750606592915050565b8060ff1660ff036122a45750606692915050565b50919050565b6040518061040001604052806020906020820280368337509192915050565b6001600160a01b038116811461066757600080fd5b6000602082840312156122f057600080fd5b8135610b75816122c9565b60006020828403121561230d57600080fd5b5035919050565b634e487b7160e01b600052602160045260246000fd5b602081016003831061234c57634e487b7160e01b600052602160045260246000fd5b91905290565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261237957600080fd5b813567ffffffffffffffff8082111561239457612394612352565b604051601f8301601f19908116603f011681019082821181831017156123bc576123bc612352565b816040528381528660208588010111156123d557600080fd5b836020870160208301376000602085830101528094505050505092915050565b60006020828403121561240757600080fd5b813567ffffffffffffffff81111561241e57600080fd5b611dcc84828501612368565b6000806000610440848603121561244057600080fd5b833567ffffffffffffffff81111561245757600080fd5b61246386828701612368565b93505061042084018581111561247857600080fd5b60208501925080359150509250925092565b803563ffffffff8116811461249e57600080fd5b919050565b6000602082840312156124b557600080fd5b610b758261248a565b6000806000606084860312156124d357600080fd5b6124dc8461248a565b925060208401359150604084013567ffffffffffffffff8111156124ff57600080fd5b61250b86828701612368565b9150509250925092565b60005b83811015612530578181015183820152602001612518565b838111156106ba5750506000910152565b60008151808452612559816020860160208601612515565b601f01601f19169290920160200192915050565b6040815260006125806040830185612541565b905060018060a01b03831660208301529392505050565b634e487b7160e01b600052601160045260246000fd5b6000828210156125bf576125bf612597565b500390565b600063ffffffff8083168185168083038211156125e3576125e3612597565b01949350505050565b848152836020820152826040820152608060608201526000611f2b6080830184612541565b805160208083015191908110156122a45760001960209190910360031b1b16919050565b6000821982111561264857612648612597565b500190565b600063ffffffff808716835280861660208401525083604083015260806060830152611f2b6080830184612541565b838152821515602082015260606040820152600061142a6060830184612541565b602081526000610b756020830184612541565b6001600160a01b0383168152604060208201819052600090611dcc90830184612541565b600063ffffffff60e01b808960e01b168352876004840152808760e01b166024840152808660e01b1660288401525083602c830152825161271c81604c850160208701612515565b91909101604c01979650505050505050565b600181815b8085111561276957816000190482111561274f5761274f612597565b8085161561275c57918102915b93841c9390800290612733565b509250929050565b60008261278057506001610a33565b8161278d57506000610a33565b81600181146127a357600281146127ad576127c9565b6001915050610a33565b60ff8411156127be576127be612597565b50506001821b610a33565b5060208310610133831016604e8410600b84101617156127ec575081810a610a33565b6127f6838361272e565b806000190482111561280a5761280a612597565b029392505050565b6000610b758383612771565b634e487b7160e01b600052603260045260246000fd5b60008261285157634e487b7160e01b600052601260045260246000fd5b500490565b60006001820161286857612868612597565b5060010190565b634e487b7160e01b600052600160045260246000fd5b60006020828403121561289757600080fd5b8151610b75816122c9565b600060ff821660ff8416808210156128bc576128bc612597565b90039392505050565b600060ff821660ff84168160ff048111821515161561280a5761280a612597565b6000602082840312156128f857600080fd5b81518015158114610b7557600080fd5b7f54797065644d656d566965772f696e646578202d204f76657272616e20746865815274040ecd2caee5c40a6d8d2c6ca40d2e640c2e84060f605b1b60208201526001600160d01b031960d086811b821660358401526e040eed2e8d040d8cadccee8d04060f608b1b603b840181905286821b8316604a8501527f2e20417474656d7074656420746f20696e646578206174206f666673657420306050850152600f60fb1b607085015285821b83166071850152607784015283901b166086820152601760f91b608c8201526000608d8201611f2b56fea264697066735822122097da473e204ee9d31909c85c15cef1ea5c51dfb6c69b9575cd48dd3a64faab6164736f6c634300080f0033";

type ArbitrumSpokeConnectorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ArbitrumSpokeConnectorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ArbitrumSpokeConnector__factory extends ContractFactory {
  constructor(...args: ArbitrumSpokeConnectorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _mirrorGas: PromiseOrValue<BigNumberish>,
    _processGas: PromiseOrValue<BigNumberish>,
    _reserveGas: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ArbitrumSpokeConnector> {
    return super.deploy(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _mirrorGas,
      _processGas,
      _reserveGas,
      overrides || {}
    ) as Promise<ArbitrumSpokeConnector>;
  }
  override getDeployTransaction(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _mirrorGas: PromiseOrValue<BigNumberish>,
    _processGas: PromiseOrValue<BigNumberish>,
    _reserveGas: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _mirrorGas,
      _processGas,
      _reserveGas,
      overrides || {}
    );
  }
  override attach(address: string): ArbitrumSpokeConnector {
    return super.attach(address) as ArbitrumSpokeConnector;
  }
  override connect(signer: Signer): ArbitrumSpokeConnector__factory {
    return super.connect(signer) as ArbitrumSpokeConnector__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ArbitrumSpokeConnectorInterface {
    return new utils.Interface(_abi) as ArbitrumSpokeConnectorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ArbitrumSpokeConnector {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ArbitrumSpokeConnector;
  }
}
