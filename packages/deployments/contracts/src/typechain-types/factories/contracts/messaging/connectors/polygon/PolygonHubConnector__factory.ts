/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  PolygonHubConnector,
  PolygonHubConnectorInterface,
} from "../../../../../contracts/messaging/connectors/polygon/PolygonHubConnector";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "_mirrorDomain",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_amb",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rootManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_mirrorGas",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_checkPointManager",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ProposedOwnable__acceptProposedOwner_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyOwner_notOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyProposed_notProposedOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_noOwnershipChange",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_noProposal",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageProcessed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previous",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "current",
        type: "address",
      },
    ],
    name: "MirrorConnectorUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "previous",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "current",
        type: "uint256",
      },
    ],
    name: "MirrorGasUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "mirrorDomain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "amb",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "rootManager",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "mirrorConnector",
        type: "address",
      },
    ],
    name: "NewConnector",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "proposedOwner",
        type: "address",
      },
    ],
    name: "OwnershipProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "AMB",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIRROR_DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_MANAGER",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SEND_MESSAGE_EVENT_SIG",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptProposedOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "checkpointManager",
    outputs: [
      {
        internalType: "contract ICheckpointManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "delay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fxChildTunnel",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fxRoot",
    outputs: [
      {
        internalType: "contract IFxStateSender",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mirrorConnector",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mirrorGas",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "processMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "processedExits",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newlyProposed",
        type: "address",
      },
    ],
    name: "proposeNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proposed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposedTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "inputData",
        type: "bytes",
      },
    ],
    name: "receiveMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounced",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "sendMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_fxChildTunnel",
        type: "address",
      },
    ],
    name: "setFxChildTunnel",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
    ],
    name: "setMirrorConnector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_mirrorGas",
        type: "uint256",
      },
    ],
    name: "setMirrorGas",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_expected",
        type: "address",
      },
    ],
    name: "verifySender",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6101006040523480156200001257600080fd5b50604051620029f0380380620029f083398101604081905262000035916200030c565b80858888828888888585858585856200004e33620001d1565b8563ffffffff16600003620000995760405162461bcd60e51b815260206004820152600c60248201526b32b6b83a3c903237b6b0b4b760a11b60448201526064015b60405180910390fd5b6001600160a01b038316620000e55760405162461bcd60e51b815260206004820152601160248201527032b6b83a3c903937b7ba26b0b730b3b2b960791b604482015260640162000090565b63ffffffff8087166080526001600160a01b0380861660a05284811660c05290861660e0528216156200011d576200011d8262000230565b80156200012f576200012f8162000299565b604080516001600160a01b0386811682528581166020830152841681830152905163ffffffff87811692908916917f4f9c27c2fe3f84576ea469d367d044da53c45e951617e8389f2b5ed8db9d25f09181900360600190a35050600680546001600160a01b039d8e166001600160a01b031991821617909155600580549c909d169b169a909a17909a5550620003989f50505050505050505050505050505050565b600080546001600160a01b038381166001600160a01b0319808416821785556002859055600180549091169055604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b60045460408051918252602082018390527f34b09b90f4cfa8747776f5cffd7d53ce7863a9b1f1fc8121903d22543a256511910160405180910390a1600455565b805163ffffffff81168114620002ef57600080fd5b919050565b80516001600160a01b0381168114620002ef57600080fd5b600080600080600080600060e0888a0312156200032857600080fd5b6200033388620002da565b96506200034360208901620002da565b95506200035360408901620002f4565b94506200036360608901620002f4565b93506200037360808901620002f4565b925060a088015191506200038a60c08901620002f4565b905092959891949750929550565b60805160a05160c05160e0516125fb620003f5600039600081816101d20152610d43015260008181610265015281816105e80152610d1c0152600081816103b2015281816104180152610c810152600061022b01526125fb6000f3fe608060405234801561001057600080fd5b506004361061018e5760003560e01c8063972c4928116100de578063cf796c7511610097578063d69f9d6111610071578063d69f9d61146103ad578063db1b7659146103d4578063de9b771f146103e7578063f953cec7146103fa57600080fd5b8063cf796c7514610381578063d1851c921461038a578063d232c2201461039b57600080fd5b8063972c49281461031a578063aea4e49e1461032d578063b1f8100d14610340578063c0857ba014610353578063c5b350df14610366578063cc3942831461036e57600080fd5b80635f61e3ec1161014b5780636eb67a51116101255780636eb67a51146102db578063715018a6146102ee57806382646a58146102f65780638da5cb5b1461030957600080fd5b80635f61e3ec14610260578063607f2d421461029f5780636a42b8f8146102d257600080fd5b80630e387de61461019357806314168416146101cd5780633cf52ffb146102095780634ff746f61461021157806352a9674b146102265780635bd11efc1461024d575b600080fd5b6101ba7f8c5261668696ce22758910d05bab8f186d6eb247ceac2af2e82c7dc17669b03681565b6040519081526020015b60405180910390f35b6101f47f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff90911681526020016101c4565b6002546101ba565b61022461021f366004612113565b61040d565b005b6101f47f000000000000000000000000000000000000000000000000000000000000000081565b61022461025b3660046121a8565b6104b3565b6102877f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016101c4565b6102c26102ad3660046121c5565b60086020526000908152604090205460ff1681565b60405190151581526020016101c4565b62093a806101ba565b6102246102e93660046121c5565b6104ea565b61022461051e565b610224610304366004612113565b6105dd565b6000546001600160a01b0316610287565b600754610287906001600160a01b031681565b61022461033b3660046121a8565b61067e565b61022461034e3660046121a8565b61070c565b600654610287906001600160a01b031681565b6102246107b1565b600354610287906001600160a01b031681565b6101ba60045481565b6001546001600160a01b0316610287565b6000546001600160a01b0316156102c2565b6102877f000000000000000000000000000000000000000000000000000000000000000081565b6102c26103e23660046121a8565b61080c565b600554610287906001600160a01b031681565b610224610408366004612113565b610816565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146104775760405162461bcd60e51b815260040161046e9060208082526004908201526310a0a6a160e11b604082015260600190565b60405180910390fd5b7fb3abc57bfeebd2cac918901db582f71972a8e628bccf19f5ae3e3482b98a5ced81336040516104a892919061223a565b60405180910390a150565b6000546001600160a01b031633146104de576040516311a8a1bb60e31b815260040160405180910390fd5b6104e781610830565b50565b6000546001600160a01b03163314610515576040516311a8a1bb60e31b815260040160405180910390fd5b6104e781610899565b6000546001600160a01b03163314610549576040516311a8a1bb60e31b815260040160405180910390fd5b60025460000361056c57604051630e4b303f60e21b815260040160405180910390fd5b62093a806002544261057e919061227a565b1161059c576040516386d4b3f160e01b815260040160405180910390fd5b6001546001600160a01b0316156105c6576040516323295ef960e01b815260040160405180910390fd5b6001546105db906001600160a01b03166108da565b565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146106445760405162461bcd60e51b815260206004820152600c60248201526b10b937b7ba26b0b730b3b2b960a11b604482015260640161046e565b61064d81610939565b7fa69577a1e55dd0712044e7078b408c39fadff8b3e1b334b202ff17e70eda9fdc81336040516104a892919061223a565b6007546001600160a01b0316156106ea5760405162461bcd60e51b815260206004820152602a60248201527f467842617365526f6f7454756e6e656c3a204348494c445f54554e4e454c5f4160448201526913149150511657d4d15560b21b606482015260840161046e565b600780546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b03163314610737576040516311a8a1bb60e31b815260040160405180910390fd5b6001546001600160a01b03828116911614801561075c57506001600160a01b03811615155b1561077a576040516311bc066560e11b815260040160405180910390fd5b6000546001600160a01b038083169116036107a857604051634a2fb73f60e11b815260040160405180910390fd5b6104e781610942565b6001546001600160a01b031633146107dc576040516311a7f27160e11b815260040160405180910390fd5b62093a80600254426107ee919061227a565b116105c65760405163d39c12bb60e01b815260040160405180910390fd5b6000805b92915050565b600061082182610990565b905061082c81610c76565b5050565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b60045460408051918252602082018390527f34b09b90f4cfa8747776f5cffd7d53ce7863a9b1f1fc8121903d22543a256511910160405180910390a1600455565b600080546001600160a01b038381166001600160a01b0319808416821785556002859055600180549091169055604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6104e781610df8565b42600255600180546001600160a01b0319166001600160a01b0383169081179091556040517f6ab4d119f23076e8ad491bc65ce85f017fb0591dce08755ba8591059cc51737a90600090a250565b6060600061099d83610e63565b905060006109aa82610ec2565b905060006109b783610eeb565b90506000816109c584610f14565b6109ce866110d2565b6040516020016109e093929190612291565b60408051601f1981840301815291815281516020928301206000818152600890935291205490915060ff1615610a645760405162461bcd60e51b8152602060048201526024808201527f4678526f6f7454756e6e656c3a20455849545f414c52454144595f50524f434560448201526314d4d15160e21b606482015260840161046e565b6000818152600860205260408120805460ff19166001179055610a86856110ee565b90506000610a9382611238565b9050610a9e816112c8565b6007546001600160a01b03908116911614610b095760405162461bcd60e51b815260206004820152602560248201527f4678526f6f7454756e6e656c3a20494e56414c49445f46585f4348494c445f54604482015264155393915360da1b606482015260840161046e565b6000610b14876112f1565b9050610b34610b24846020015190565b87610b2e8a61130d565b84611329565b610b8c5760405162461bcd60e51b815260206004820152602360248201527f4678526f6f7454756e6e656c3a20494e56414c49445f524543454950545f505260448201526227a7a360e91b606482015260840161046e565b610bba85610b99896115dc565b610ba28a6115f8565b84610bac8c611614565b610bb58d611630565b61164c565b506000610bc683611772565b90507f8c5261668696ce22758910d05bab8f186d6eb247ceac2af2e82c7dc17669b036610bfc610bf78360006117ae565b6117e6565b14610c495760405162461bcd60e51b815260206004820152601f60248201527f4678526f6f7454756e6e656c3a20494e56414c49445f5349474e415455524500604482015260640161046e565b6000610c5484611861565b806020019051810190610c6791906122be565b9b9a5050505050505050505050565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610cd75760405162461bcd60e51b815260040161046e9060208082526004908201526310b0b6b160e11b604082015260600190565b8051602014610d125760405162461bcd60e51b8152602060048201526007602482015266042d8cadccee8d60cb1b604482015260640161046e565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016638e7d93fa7f0000000000000000000000000000000000000000000000000000000000000000610d6b84612335565b6040516001600160e01b031960e085901b16815263ffffffff9290921660048301526024820152604401600060405180830381600087803b158015610daf57600080fd5b505af1158015610dc3573d6000803e3d6000fd5b505050507fb3abc57bfeebd2cac918901db582f71972a8e628bccf19f5ae3e3482b98a5ced81336040516104a892919061223a565b60055460075460405163b472047760e01b81526001600160a01b039283169263b472047792610e2e929116908590600401612359565b600060405180830381600087803b158015610e4857600080fd5b505af1158015610e5c573d6000803e3d6000fd5b5050505050565b6040805160208101909152606081526000610ead610ea88460408051808201825260008082526020918201528151808301909252825182529182019181019190915290565b61187d565b60408051602081019091529081529392505050565b60606108108260000151600881518110610ede57610ede61237d565b6020026020010151611993565b60006108108260000151600281518110610f0757610f0761237d565b60200260200101516117e6565b6040805160208101909152600081528151606091901561081057600080610f3c600086611a30565b60f81c90506001811480610f5357508060ff166003145b15610ffb57600185516002610f689190612393565b610f72919061227a565b67ffffffffffffffff811115610f8a57610f8a6120a4565b6040519080825280601f01601f191660200182016040528015610fb4576020820181803683370190505b5092506000610fc4600187611a30565b90508084600081518110610fda57610fda61237d565b60200101906001600160f81b031916908160001a905350600192505061105f565b60028551600261100b9190612393565b611015919061227a565b67ffffffffffffffff81111561102d5761102d6120a4565b6040519080825280601f01601f191660200182016040528015611057576020820181803683370190505b509250600091505b60ff82165b83518110156110c95761108e61107d60ff85168361227a565b6110889060026123b2565b87611a30565b8482815181106110a0576110a061237d565b60200101906001600160f81b031916908160001a905350806110c1816123ca565b915050611064565b50505092915050565b60006108108260000151600981518110610f0757610f0761237d565b61111260405180606001604052806060815260200160608152602001600081525090565b61112c8260000151600681518110610ede57610ede61237d565b60208281018290526040805180820182526000808252908301528051808201909152825181529181019082015261116281611ab1565b15611177576111708161187d565b8252611224565b6020820151805160009061118d9060019061227a565b67ffffffffffffffff8111156111a5576111a56120a4565b6040519080825280601f01601f1916602001820160405280156111cf576020820181803683370190505b5090506000808360210191508260200190506111ed82828551611aec565b60408051808201825260008082526020918201528151808301909252845182528085019082015261121d9061187d565b8652505050505b61122d836110d2565b604083015250919050565b60408051608081018252600091810182815260608083019390935281526020810191909152600061128683600001516003815181106112795761127961237d565b602002602001015161187d565b83604001518151811061129b5761129b61237d565b6020026020010151905060405180604001604052808281526020016112bf8361187d565b90529392505050565b600061081082602001516000815181106112e4576112e461237d565b6020026020010151611b77565b60006108108260000151600581518110610f0757610f0761237d565b60606108108260000151600781518110610ede57610ede61237d565b60008061135d8460408051808201825260008082526020918201528151808301909252825182529182019181019190915290565b9050600061136a8261187d565b90506060808560008061137c8b610f14565b905080516000036113975760009750505050505050506115d4565b60005b86518110156115cb5781518311156113bd576000985050505050505050506115d4565b6113df8782815181106113d2576113d261237d565b6020026020010151611b91565b955085805190602001208414611400576000985050505050505050506115d4565b6114158782815181106112795761127961237d565b945084516011036114e75781518303611474578c8051906020012061144686601081518110610ede57610ede61237d565b8051906020012003611463576001985050505050505050506115d4565b6000985050505050505050506115d4565b60008284815181106114885761148861237d565b016020015160f81c905060108111156114ad57600099505050505050505050506115d4565b6114d2868260ff16815181106114c5576114c561237d565b6020026020010151611c10565b94506114df6001856123b2565b9350506115b9565b845160020361146357600061151261150b87600081518110610ede57610ede61237d565b8486611c3e565b835190915061152182866123b2565b03611574578d8051906020012061154487600181518110610ede57610ede61237d565b805190602001200361156257600199505050505050505050506115d4565b600099505050505050505050506115d4565b8060000361158e57600099505050505050505050506115d4565b61159881856123b2565b93506115b0866001815181106114c5576114c561237d565b94506115b99050565b806115c3816123ca565b91505061139a565b50505050505050505b949350505050565b60006108108260000151600381518110610f0757610f0761237d565b60006108108260000151600481518110610f0757610f0761237d565b60006108108260000151600081518110610f0757610f0761237d565b60606108108260000151600181518110610ede57610ede61237d565b6006546040516320a9cea560e11b8152600481018490526000918291829182916001600160a01b03909116906341539d4a9060240160a060405180830381865afa15801561169e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116c291906123e3565b5093505092509250611719828b6116d9919061227a565b6040805160208082018f90528183018e9052606082018d905260808083018d90528351808403909101815260a09092019092528051910120908588611d46565b6117655760405162461bcd60e51b815260206004820152601c60248201527f4678526f6f7454756e6e656c3a20494e56414c49445f48454144455200000000604482015260640161046e565b9998505050505050505050565b60408051602081019091526060815260405180602001604052806117a684602001516001815181106112795761127961237d565b905292915050565b604080518082019091526000808252602082015282518051839081106117d6576117d661237d565b6020026020010151905092915050565b8051600090158015906117fb57508151602110155b61180457600080fd5b60006118138360200151611eae565b90506000818460000151611827919061227a565b905060008083866020015161183c91906123b2565b905080519150602083101561185857826020036101000a820491505b50949350505050565b60606108108260200151600281518110610ede57610ede61237d565b606061188882611ab1565b61189157600080fd5b600061189c83611f36565b905060008167ffffffffffffffff8111156118b9576118b96120a4565b6040519080825280602002602001820160405280156118fe57816020015b60408051808201909152600080825260208201528152602001906001900390816118d75790505b50905060006119108560200151611eae565b856020015161191f91906123b2565b90506000805b848110156119885761193683611fbb565b915060405180604001604052808381526020018481525084828151811061195f5761195f61237d565b602090810291909101015261197482846123b2565b925080611980816123ca565b915050611925565b509195945050505050565b80516060906119a157600080fd5b60006119b08360200151611eae565b905060008184600001516119c4919061227a565b905060008167ffffffffffffffff8111156119e1576119e16120a4565b6040519080825280601f01601f191660200182016040528015611a0b576020820181803683370190505b5090506000816020019050611858848760200151611a2991906123b2565b828561205f565b6000611a3d600284612446565b15611a7757601082611a5060028661245a565b81518110611a6057611a6061237d565b0160200151611a72919060f81c61246e565b611aa7565b601082611a8560028661245a565b81518110611a9557611a9561237d565b0160200151611aa7919060f81c612490565b60f81b9392505050565b80516000908103611ac457506000919050565b6020820151805160001a9060c0821015611ae2575060009392505050565b5060019392505050565b80600003611af957505050565b60208110611b315782518252611b106020846123b2565b9250611b1d6020836123b2565b9150611b2a60208261227a565b9050611af9565b80600003611b3e57505050565b60006001611b4d83602061227a565b611b5990610100612596565b611b63919061227a565b935183518516941916939093179091525050565b8051600090601514611b8857600080fd5b610810826117e6565b60606000826000015167ffffffffffffffff811115611bb257611bb26120a4565b6040519080825280601f01601f191660200182016040528015611bdc576020820181803683370190505b5090508051600003611bee5792915050565b6000816020019050611c09846020015182866000015161205f565b5092915050565b8051600090602114611c2157600080fd5b60008083602001516001611c3591906123b2565b51949350505050565b60008080611c4b86610f14565b90506000815167ffffffffffffffff811115611c6957611c696120a4565b6040519080825280601f01601f191660200182016040528015611c93576020820181803683370190505b509050845b8251611ca490876123b2565b811015611d17576000878281518110611cbf57611cbf61237d565b01602001516001600160f81b03191690508083611cdc898561227a565b81518110611cec57611cec61237d565b60200101906001600160f81b031916908160001a905350508080611d0f906123ca565b915050611c98565b508080519060200120828051906020012003611d365781519250611d3b565b600092505b509095945050505050565b600060208251611d569190612446565b15611d9a5760405162461bcd60e51b8152602060048201526014602482015273092dcecc2d8d2c840e0e4dedecc40d8cadccee8d60631b604482015260640161046e565b600060208351611daa919061245a565b9050611db7816002612596565b8510611dfd5760405162461bcd60e51b81526020600482015260156024820152744c65616620696e64657820697320746f6f2062696760581b604482015260640161046e565b60008660205b85518111611ea057858101519250611e1c600289612446565b600003611e54576040805160208101849052908101849052606001604051602081830303815290604052805190602001209150611e81565b60408051602081018590529081018390526060016040516020818303038152906040528051906020012091505b611e8c60028961245a565b9750611e996020826123b2565b9050611e03565b509094149695505050505050565b8051600090811a6080811015611ec75750600092915050565b60b8811080611ee2575060c08110801590611ee2575060f881105b15611ef05750600192915050565b60c0811015611f2457611f05600160b86125a2565b611f129060ff168261227a565b611f1d9060016123b2565b9392505050565b611f05600160f86125a2565b50919050565b80516000908103611f4957506000919050565b600080611f598460200151611eae565b8460200151611f6891906123b2565b9050600084600001518560200151611f8091906123b2565b90505b80821015611fb257611f9482611fbb565b611f9e90836123b2565b915082611faa816123ca565b935050611f83565b50909392505050565b80516000908190811a6080811015611fd65760019150611c09565b60b8811015611ffc57611fea60808261227a565b611ff59060016123b2565b9150611c09565b60c08110156120295760b78103600185019450806020036101000a85510460018201810193505050611c09565b60f881101561203d57611fea60c08261227a565b60019390930151602084900360f7016101000a900490920160f5190192915050565b8060000361206c57505050565b60208110611b3157825182526120836020846123b2565b92506120906020836123b2565b915061209d60208261227a565b905061206c565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156120e3576120e36120a4565b604052919050565b600067ffffffffffffffff821115612105576121056120a4565b50601f01601f191660200190565b60006020828403121561212557600080fd5b813567ffffffffffffffff81111561213c57600080fd5b8201601f8101841361214d57600080fd5b803561216061215b826120eb565b6120ba565b81815285602083850101111561217557600080fd5b81602084016020830137600091810160200191909152949350505050565b6001600160a01b03811681146104e757600080fd5b6000602082840312156121ba57600080fd5b8135611f1d81612193565b6000602082840312156121d757600080fd5b5035919050565b60005b838110156121f95781810151838201526020016121e1565b83811115612208576000848401525b50505050565b600081518084526122268160208601602086016121de565b601f01601f19169290920160200192915050565b60408152600061224d604083018561220e565b905060018060a01b03831660208301529392505050565b634e487b7160e01b600052601160045260246000fd5b60008282101561228c5761228c612264565b500390565b838152600083516122a98160208501602088016121de565b60209201918201929092526040019392505050565b6000602082840312156122d057600080fd5b815167ffffffffffffffff8111156122e757600080fd5b8201601f810184136122f857600080fd5b805161230661215b826120eb565b81815285602083850101111561231b57600080fd5b61232c8260208301602086016121de565b95945050505050565b80516020808301519190811015611f305760001960209190910360031b1b16919050565b6001600160a01b03831681526040602082018190526000906115d49083018461220e565b634e487b7160e01b600052603260045260246000fd5b60008160001904831182151516156123ad576123ad612264565b500290565b600082198211156123c5576123c5612264565b500190565b6000600182016123dc576123dc612264565b5060010190565b600080600080600060a086880312156123fb57600080fd5b85519450602086015193506040860151925060608601519150608086015161242281612193565b809150509295509295909350565b634e487b7160e01b600052601260045260246000fd5b60008261245557612455612430565b500690565b60008261246957612469612430565b500490565b600060ff83168061248157612481612430565b8060ff84160691505092915050565b600060ff8316806124a3576124a3612430565b8060ff84160491505092915050565b600181815b808511156124ed5781600019048211156124d3576124d3612264565b808516156124e057918102915b93841c93908002906124b7565b509250929050565b60008261250457506001610810565b8161251157506000610810565b816001811461252757600281146125315761254d565b6001915050610810565b60ff84111561254257612542612264565b50506001821b610810565b5060208310610133831016604e8410600b8410161715612570575081810a610810565b61257a83836124b2565b806000190482111561258e5761258e612264565b029392505050565b6000611f1d83836124f5565b600060ff821660ff8416808210156125bc576125bc612264565b9003939250505056fea2646970667358221220a50579007ac1c05b11ef860406053b34a332bfb143932241cc71241eb532ec0064736f6c634300080f0033";

type PolygonHubConnectorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PolygonHubConnectorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PolygonHubConnector__factory extends ContractFactory {
  constructor(...args: PolygonHubConnectorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _mirrorGas: PromiseOrValue<BigNumberish>,
    _checkPointManager: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PolygonHubConnector> {
    return super.deploy(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _mirrorGas,
      _checkPointManager,
      overrides || {}
    ) as Promise<PolygonHubConnector>;
  }
  override getDeployTransaction(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _mirrorGas: PromiseOrValue<BigNumberish>,
    _checkPointManager: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _mirrorGas,
      _checkPointManager,
      overrides || {}
    );
  }
  override attach(address: string): PolygonHubConnector {
    return super.attach(address) as PolygonHubConnector;
  }
  override connect(signer: Signer): PolygonHubConnector__factory {
    return super.connect(signer) as PolygonHubConnector__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PolygonHubConnectorInterface {
    return new utils.Interface(_abi) as PolygonHubConnectorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PolygonHubConnector {
    return new Contract(address, _abi, signerOrProvider) as PolygonHubConnector;
  }
}
