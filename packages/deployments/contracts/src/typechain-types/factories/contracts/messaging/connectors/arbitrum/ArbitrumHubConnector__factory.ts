/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  ArbitrumHubConnector,
  ArbitrumHubConnectorInterface,
} from "../../../../../contracts/messaging/connectors/arbitrum/ArbitrumHubConnector";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "_mirrorDomain",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_amb",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rootManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_mirrorGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_defaultGasPrice",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_outbox",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "NotCrossChainCall",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__acceptProposedOwner_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyOwner_notOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyProposed_notProposedOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_noOwnershipChange",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_noProposal",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "previous",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "current",
        type: "uint256",
      },
    ],
    name: "DefaultGasPriceUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageProcessed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previous",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "current",
        type: "address",
      },
    ],
    name: "MirrorConnectorUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "previous",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "current",
        type: "uint256",
      },
    ],
    name: "MirrorGasUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "mirrorDomain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "amb",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "rootManager",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "mirrorConnector",
        type: "address",
      },
    ],
    name: "NewConnector",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "proposedOwner",
        type: "address",
      },
    ],
    name: "OwnershipProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "AMB",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIRROR_DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_MANAGER",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptProposedOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "defaultGasPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "delay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mirrorConnector",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mirrorGas",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "outbox",
    outputs: [
      {
        internalType: "contract IArbitrumOutbox",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "processMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "_nodeNum",
        type: "uint64",
      },
      {
        internalType: "bytes32",
        name: "_sendRoot",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_blockHash",
        type: "bytes32",
      },
      {
        internalType: "bytes32[]",
        name: "_proof",
        type: "bytes32[]",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "l2Sender",
            type: "address",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "l2Block",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "l1Block",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "l2Timestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
        ],
        internalType: "struct L2Message",
        name: "_message",
        type: "tuple",
      },
    ],
    name: "processMessageFromRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newlyProposed",
        type: "address",
      },
    ],
    name: "proposeNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proposed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposedTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounced",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rollup",
    outputs: [
      {
        internalType: "contract IArbitrumRollup",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "sendMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_defaultGasPrice",
        type: "uint256",
      },
    ],
    name: "setDefaultGasPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
    ],
    name: "setMirrorConnector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_mirrorGas",
        type: "uint256",
      },
    ],
    name: "setMirrorGas",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_expected",
        type: "address",
      },
    ],
    name: "verifySender",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6101006040523480156200001257600080fd5b506040516200211a3803806200211a833981016040819052620000359162000383565b8787878787878585858585856200004c3362000248565b8563ffffffff16600003620000975760405162461bcd60e51b815260206004820152600c60248201526b32b6b83a3c903237b6b0b4b760a11b60448201526064015b60405180910390fd5b6001600160a01b038316620000e35760405162461bcd60e51b815260206004820152601160248201527032b6b83a3c903937b7ba26b0b730b3b2b960791b60448201526064016200008e565b63ffffffff8087166080526001600160a01b0380861660a05284811660c05290861660e0528216156200011b576200011b82620002a7565b80156200012d576200012d8162000310565b604080516001600160a01b0386811682528581166020830152841681830152905163ffffffff87811692908916917f4f9c27c2fe3f84576ea469d367d044da53c45e951617e8389f2b5ed8db9d25f09181900360600190a350505060058b90555050600680546001600160a01b0319166001600160a01b038a169081179091556040805163cb23bcb560e01b8152905191985063cb23bcb597506004808201975060209650919450849003019150829050865afa158015620001f3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000219919062000419565b600780546001600160a01b0319166001600160a01b0392909216919091179055506200043e9650505050505050565b600080546001600160a01b038381166001600160a01b0319808416821785556002859055600180549091169055604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b60045460408051918252602082018390527f34b09b90f4cfa8747776f5cffd7d53ce7863a9b1f1fc8121903d22543a256511910160405180910390a1600455565b805163ffffffff811681146200036657600080fd5b919050565b80516001600160a01b03811681146200036657600080fd5b600080600080600080600080610100898b031215620003a157600080fd5b620003ac8962000351565b9750620003bc60208a0162000351565b9650620003cc60408a016200036b565b9550620003dc60608a016200036b565b9450620003ec60808a016200036b565b935060a0890151925060c089015191506200040a60e08a016200036b565b90509295985092959890939650565b6000602082840312156200042c57600080fd5b62000437826200036b565b9392505050565b60805160a05160c05160e051611c78620004a26000396000818161016201526106e801526000818161020401528181610556015261071901526000818161033d0152818161038601528181610a4c0152610eff015260006101ca0152611c786000f3fe608060405234801561001057600080fd5b50600436106101585760003560e01c80639d4373a4116100c3578063cf796c751161007c578063cf796c7514610300578063d1851c9214610309578063d232c2201461031a578063d69f9d6114610338578063db1b76591461035f578063e7b4294c1461037257600080fd5b80639d4373a414610299578063b1f8100d146102ac578063c5b350df146102bf578063cb23bcb5146102c7578063cc394283146102da578063ce11e6ab146102ed57600080fd5b80636a42b8f8116101155780636a42b8f81461023e5780636eb67a5114610247578063715018a61461025a57806382646a58146102625780638b42a40a146102755780638da5cb5b1461028857600080fd5b8063141684161461015d5780633cf52ffb1461019e5780634ff746f6146101b057806352a9674b146101c55780635bd11efc146101ec5780635f61e3ec146101ff575b600080fd5b6101847f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff90911681526020015b60405180910390f35b6002545b604051908152602001610195565b6101c36101be36600461161b565b61037b565b005b6101847f000000000000000000000000000000000000000000000000000000000000000081565b6101c36101fa3660046116e1565b610421565b6102267f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610195565b62093a806101a2565b6101c36102553660046116fe565b610458565b6101c361048c565b6101c361027036600461161b565b61054b565b6101c36102833660046116fe565b6105ec565b6000546001600160a01b0316610226565b6101c36102a736600461173f565b610658565b6101c36102ba3660046116e1565b610787565b6101c361082c565b600754610226906001600160a01b031681565b600354610226906001600160a01b031681565b600654610226906001600160a01b031681565b6101a260045481565b6001546001600160a01b0316610226565b6000546001600160a01b0316155b6040519015158152602001610195565b6102267f000000000000000000000000000000000000000000000000000000000000000081565b61032861036d3660046116e1565b610887565b6101a260055481565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146103e55760405162461bcd60e51b81526004016103dc9060208082526004908201526310a0a6a160e11b604082015260600190565b60405180910390fd5b7fb3abc57bfeebd2cac918901db582f71972a8e628bccf19f5ae3e3482b98a5ced8133604051610416929190611856565b60405180910390a150565b6000546001600160a01b0316331461044c576040516311a8a1bb60e31b815260040160405180910390fd5b61045581610898565b50565b6000546001600160a01b03163314610483576040516311a8a1bb60e31b815260040160405180910390fd5b61045581610901565b6000546001600160a01b031633146104b7576040516311a8a1bb60e31b815260040160405180910390fd5b6002546000036104da57604051630e4b303f60e21b815260040160405180910390fd5b62093a80600254426104ec9190611896565b1161050a576040516386d4b3f160e01b815260040160405180910390fd5b6001546001600160a01b031615610534576040516323295ef960e01b815260040160405180910390fd5b600154610549906001600160a01b0316610942565b565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146105b25760405162461bcd60e51b815260206004820152600c60248201526b10b937b7ba26b0b730b3b2b960a11b60448201526064016103dc565b6105bb816109a1565b7fa69577a1e55dd0712044e7078b408c39fadff8b3e1b334b202ff17e70eda9fdc8133604051610416929190611856565b6000546001600160a01b03163314610617576040516311a8a1bb60e31b815260040160405180910390fd5b60055460408051918252602082018390527f577c2dd19d86f7555790e151b7455ad2b3897b5c6037646b19672da61a1a8734910160405180910390a1600555565b610663878787610ad0565b6106708685858585610bc3565b60006106d4600460206106c78461068a60c08801886118ad565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509293925050610d269050565b62ffffff19169190610d4a565b6040516378ffd0a160e01b815263ffffffff7f0000000000000000000000000000000000000000000000000000000000000000166004820152602481018290529091507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906378ffd0a190604401600060405180830381600087803b15801561076557600080fd5b505af1158015610779573d6000803e3d6000fd5b505050505050505050505050565b6000546001600160a01b031633146107b2576040516311a8a1bb60e31b815260040160405180910390fd5b6001546001600160a01b0382811691161480156107d757506001600160a01b03811615155b156107f5576040516311bc066560e11b815260040160405180910390fd5b6000546001600160a01b0380831691160361082357604051634a2fb73f60e11b815260040160405180910390fd5b61045581610eaa565b6001546001600160a01b03163314610857576040516311a7f27160e11b815260040160405180910390fd5b62093a80600254426108699190611896565b116105345760405163d39c12bb60e01b815260040160405180910390fd5b600061089282610ef8565b92915050565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b60045460408051918252602082018390527f34b09b90f4cfa8747776f5cffd7d53ce7863a9b1f1fc8121903d22543a256511910160405180910390a1600455565b600080546001600160a01b038381166001600160a01b0319808416821785556002859055600180549091169055604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516020146109dc5760405162461bcd60e51b8152602060048201526007602482015266042d8cadccee8d60cb1b60448201526064016103dc565b6000634ff746f660e01b826040516024016109f791906118fb565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b0319909416939093179092526004805460055460035494516345318d5360e11b81529395506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811695638a631aa695610a8895919092169160009189910161190e565b6020604051808303816000875af1158015610aa7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610acb919061194c565b505050565b604080516020808201849052818301859052825180830384018152606090920190925280519101206000906007546040516324b204d360e21b815267ffffffffffffffff871660048201529192506000916001600160a01b03909116906392c8134c9060240161018060405180830381865afa158015610b54573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b789190611975565b905081816040015114610bbc5760405162461bcd60e51b815260206004820152600c60248201526b21636f6e6669726d4461746160a01b60448201526064016103dc565b5050505050565b6003546001600160a01b0316610bdc60208301836116e1565b6001600160a01b031614610c255760405162461bcd60e51b815260206004820152601060248201526f10b6b4b93937b921b7b73732b1ba37b960811b60448201526064016103dc565b6006546000906001600160a01b0316639f0c04bf610c4660208501856116e1565b610c5660408601602087016116e1565b60408601356060870135608088013560a0890135610c7760c08b018b6118ad565b6040518963ffffffff1660e01b8152600401610c9a989796959493929190611a47565b602060405180830381865afa158015610cb7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cdb919061194c565b9050610d1e8585808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152508792508591508a9050610f3e565b505050505050565b815160009060208401610d4164ffffffffff851682846110df565b95945050505050565b60008160ff16600003610d5f57506000610ea3565b610d728460181c6001600160601b031690565b6001600160601b0316610d8860ff841685611aaf565b1115610dec57610dd3610da48560781c6001600160601b031690565b6001600160601b0316610dc08660181c6001600160601b031690565b6001600160601b0316858560ff16611126565b60405162461bcd60e51b81526004016103dc91906118fb565b60208260ff161115610e665760405162461bcd60e51b815260206004820152603a60248201527f54797065644d656d566965772f696e646578202d20417474656d70746564207460448201527f6f20696e646578206d6f7265207468616e20333220627974657300000000000060648201526084016103dc565b600882026000610e7f8660781c6001600160601b031690565b6001600160601b031690506000600160ff1b60001984011d91860151909116925050505b9392505050565b42600255600180546001600160a01b0319166001600160a01b0383169081179091556040517f6ab4d119f23076e8ad491bc65ce85f017fb0591dce08755ba8591059cc51737a90600090a250565b6000610f237f0000000000000000000000000000000000000000000000000000000000000000611250565b6001600160a01b0316826001600160a01b0316149050919050565b610100845110610f7f5760405162461bcd60e51b815260206004820152600c60248201526b0e0e4dedecc40d8cadccee8d60a31b60448201526064016103dc565b8351610f8c906002611bab565b8310610fcb5760405162461bcd60e51b815260206004820152600e60248201526d10b6b4b734b6b0b610383937b7b360911b60448201526064016103dc565b60008381526008602052604090205460ff16156110125760405162461bcd60e51b81526020600482015260056024820152641cdc195b9d60da1b60448201526064016103dc565b600654604051627436d360e01b81526000916001600160a01b031690627436d39061104590889088908890600401611bb7565b602060405180830381865afa158015611062573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611086919061194c565b90508181146110c05760405162461bcd60e51b815260206004820152600660248201526510b83937b7b360d11b60448201526064016103dc565b5050506000908152600860205260409020805460ff1916600117905550565b6000806110ec8385611aaf565b90506040518111156110fc575060005b806000036111115762ffffff19915050610ea3565b5050606092831b9190911790911b1760181b90565b60606000611133866113ae565b9150506000611141866113ae565b915050600061114f866113ae565b915050600061115d866113ae565b604080517f54797065644d656d566965772f696e646578202d204f76657272616e20746865602082015274040ecd2caee5c40a6d8d2c6ca40d2e640c2e84060f605b1b818301526001600160d01b031960d098891b811660558301526e040eed2e8d040d8cadccee8d04060f608b1b605b830181905297891b8116606a8301527f2e20417474656d7074656420746f20696e646578206174206f666673657420306070830152600f60fb1b609083015295881b861660918201526097810196909652951b90921660a68401525050601760f91b60ac8201528151808203608d01815260ad90910190915295945050505050565b60006001600160a01b038216331461127b5760405163253a6fc960e11b815260040160405180910390fd5b6000826001600160a01b031663ab5d89436040518163ffffffff1660e01b8152600401602060405180830381865afa1580156112bb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112df9190611c04565b6001600160a01b03166380648b026040518163ffffffff1660e01b8152600401602060405180830381865afa15801561131c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113409190611c04565b90506001600160a01b0381166108925760405162461bcd60e51b815260206004820152602d60248201527f4c6962417262697472756d4c313a2073797374656d206d65737361676573207760448201526c34ba3437baba1039b2b73232b960991b60648201526084016103dc565b600080601f5b600f8160ff1611156114035760006113cd826008611c21565b60ff1685901c90506113de8161145c565b61ffff16841793508160ff166010146113f957601084901b93505b50600019016113b4565b50600f5b60ff8160ff161015611456576000611420826008611c21565b60ff1685901c90506114318161145c565b61ffff16831792508160ff1660001461144c57601083901b92505b5060001901611407565b50915091565b600061146e60048360ff16901c61148e565b60ff1661ffff919091161760081b6114858261148e565b60ff1617919050565b600060f08083179060ff821690036114a95750603092915050565b8060ff1660f1036114bd5750603192915050565b8060ff1660f2036114d15750603292915050565b8060ff1660f3036114e55750603392915050565b8060ff1660f4036114f95750603492915050565b8060ff1660f50361150d5750603592915050565b8060ff1660f6036115215750603692915050565b8060ff1660f7036115355750603792915050565b8060ff1660f8036115495750603892915050565b8060ff1660f90361155d5750603992915050565b8060ff1660fa036115715750606192915050565b8060ff1660fb036115855750606292915050565b8060ff1660fc036115995750606392915050565b8060ff1660fd036115ad5750606492915050565b8060ff1660fe036115c15750606592915050565b8060ff1660ff036115d55750606692915050565b50919050565b634e487b7160e01b600052604160045260246000fd5b604051610180810167ffffffffffffffff81118282101715611615576116156115db565b60405290565b60006020828403121561162d57600080fd5b813567ffffffffffffffff8082111561164557600080fd5b818401915084601f83011261165957600080fd5b81358181111561166b5761166b6115db565b604051601f8201601f19908116603f01168101908382118183101715611693576116936115db565b816040528281528760208487010111156116ac57600080fd5b826020860160208301376000928101602001929092525095945050505050565b6001600160a01b038116811461045557600080fd5b6000602082840312156116f357600080fd5b8135610ea3816116cc565b60006020828403121561171057600080fd5b5035919050565b67ffffffffffffffff8116811461045557600080fd5b600060e082840312156115d557600080fd5b600080600080600080600060c0888a03121561175a57600080fd5b873561176581611717565b96506020880135955060408801359450606088013567ffffffffffffffff8082111561179057600080fd5b818a0191508a601f8301126117a457600080fd5b8135818111156117b357600080fd5b8b60208260051b85010111156117c857600080fd5b6020830196508095505060808a0135935060a08a01359150808211156117ed57600080fd5b506117fa8a828b0161172d565b91505092959891949750929550565b6000815180845260005b8181101561182f57602081850181015186830182015201611813565b81811115611841576000602083870101525b50601f01601f19169290920160200192915050565b6040815260006118696040830185611809565b905060018060a01b03831660208301529392505050565b634e487b7160e01b600052601160045260246000fd5b6000828210156118a8576118a8611880565b500390565b6000808335601e198436030181126118c457600080fd5b83018035915067ffffffffffffffff8211156118df57600080fd5b6020019150368190038213156118f457600080fd5b9250929050565b602081526000610ea36020830184611809565b85815284602082015260018060a01b038416604082015282606082015260a06080820152600061194160a0830184611809565b979650505050505050565b60006020828403121561195e57600080fd5b5051919050565b805161197081611717565b919050565b6000610180828403121561198857600080fd5b6119906115f1565b8251815260208301516020820152604083015160408201526119b460608401611965565b60608201526119c560808401611965565b60808201526119d660a08401611965565b60a08201526119e760c08401611965565b60c08201526119f860e08401611965565b60e0820152610100611a0b818501611965565b90820152610120611a1d848201611965565b90820152610140611a2f848201611965565b90820152610160928301519281019290925250919050565b600060018060a01b03808b168352808a166020840152508760408301528660608301528560808301528460a083015260e060c08301528260e08301526101008385828501376000838501820152601f909301601f191690910190910198975050505050505050565b60008219821115611ac257611ac2611880565b500190565b600181815b80851115611b02578160001904821115611ae857611ae8611880565b80851615611af557918102915b93841c9390800290611acc565b509250929050565b600082611b1957506001610892565b81611b2657506000610892565b8160018114611b3c5760028114611b4657611b62565b6001915050610892565b60ff841115611b5757611b57611880565b50506001821b610892565b5060208310610133831016604e8410600b8410161715611b85575081810a610892565b611b8f8383611ac7565b8060001904821115611ba357611ba3611880565b029392505050565b6000610ea38383611b0a565b606080825284519082018190526000906020906080840190828801845b82811015611bf057815184529284019290840190600101611bd4565b505050908301949094525060400152919050565b600060208284031215611c1657600080fd5b8151610ea3816116cc565b600060ff821660ff84168160ff0481118215151615611ba357611ba361188056fea2646970667358221220ac694132f69f95901ea330a135464a391500314e2997296b8f6cc89f5ebfb25064736f6c634300080f0033";

type ArbitrumHubConnectorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ArbitrumHubConnectorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ArbitrumHubConnector__factory extends ContractFactory {
  constructor(...args: ArbitrumHubConnectorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _mirrorGas: PromiseOrValue<BigNumberish>,
    _defaultGasPrice: PromiseOrValue<BigNumberish>,
    _outbox: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ArbitrumHubConnector> {
    return super.deploy(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _mirrorGas,
      _defaultGasPrice,
      _outbox,
      overrides || {}
    ) as Promise<ArbitrumHubConnector>;
  }
  override getDeployTransaction(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _mirrorGas: PromiseOrValue<BigNumberish>,
    _defaultGasPrice: PromiseOrValue<BigNumberish>,
    _outbox: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _mirrorGas,
      _defaultGasPrice,
      _outbox,
      overrides || {}
    );
  }
  override attach(address: string): ArbitrumHubConnector {
    return super.attach(address) as ArbitrumHubConnector;
  }
  override connect(signer: Signer): ArbitrumHubConnector__factory {
    return super.connect(signer) as ArbitrumHubConnector__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ArbitrumHubConnectorInterface {
    return new utils.Interface(_abi) as ArbitrumHubConnectorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ArbitrumHubConnector {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ArbitrumHubConnector;
  }
}
