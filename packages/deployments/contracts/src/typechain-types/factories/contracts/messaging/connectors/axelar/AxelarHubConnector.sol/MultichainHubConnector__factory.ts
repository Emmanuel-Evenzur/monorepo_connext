/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../../common";
import type {
  MultichainHubConnector,
  MultichainHubConnectorInterface,
} from "../../../../../../contracts/messaging/connectors/axelar/AxelarHubConnector.sol/MultichainHubConnector";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "_mirrorDomain",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_amb",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rootManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_gasCap",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_gasReceiver",
        type: "address",
      },
      {
        internalType: "string",
        name: "_mirrorChainId",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Connector__processMessage_notUsed",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidAddressString",
    type: "error",
  },
  {
    inputs: [],
    name: "NotApprovedByGateway",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyOwner_notOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyProposed_notProposedOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__ownershipDelayElapsed_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_noOwnershipChange",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_noProposal",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_previous",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_updated",
        type: "uint256",
      },
    ],
    name: "GasCapUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageProcessed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "encodedData",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previous",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "current",
        type: "address",
      },
    ],
    name: "MirrorConnectorUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "mirrorDomain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "amb",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "rootManager",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "mirrorConnector",
        type: "address",
      },
    ],
    name: "NewConnector",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "proposedOwner",
        type: "address",
      },
    ],
    name: "OwnershipProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "AMB",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIRROR_CHAIN_ID",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIRROR_DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_MANAGER",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptProposedOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "delay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "commandId",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "sourceChain",
        type: "string",
      },
      {
        internalType: "string",
        name: "sourceAddress",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "payload",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "commandId",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "sourceChain",
        type: "string",
      },
      {
        internalType: "string",
        name: "sourceAddress",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "payload",
        type: "bytes",
      },
      {
        internalType: "string",
        name: "tokenSymbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "executeWithToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "gasService",
    outputs: [
      {
        internalType: "contract IAxelarGasService",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "gateway",
    outputs: [
      {
        internalType: "contract IAxelarGateway",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mirrorConnector",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "processMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newlyProposed",
        type: "address",
      },
    ],
    name: "proposeNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proposed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposedTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounced",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "_encodedData",
        type: "bytes",
      },
    ],
    name: "sendMessage",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_gasCap",
        type: "uint256",
      },
    ],
    name: "setGasCap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
    ],
    name: "setMirrorConnector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_expected",
        type: "address",
      },
    ],
    name: "verifySender",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6040610140815234620004eb5762001c7c803803806200001f8162000506565b928339810191610100928383820312620004eb576200003e836200052c565b6020936200004e8582016200052c565b946200005c8583016200053e565b936200006b606084016200053e565b62000079608085016200053e565b9460a0850151966200008e60c087016200053e565b9960e087015160018060401b0397888211620004eb570185601f82011215620004eb57805190888211620004f057620000d0601f8301601f1916890162000506565b96828852888383010111620004eb57879060005b838110620004d657505060009187010152600054938a519160018060a01b0395338782167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a36001600160a01b03199081163317600090815560025560018054821681559a63ffffffff878116959094908615620004a557508881169788156200046d578f90606095937f4f9c27c2fe3f84576ea469d367d044da53c45e951617e8389f2b5ed8db9d25f09795938c926080528a60a05260c0528460e0521680928d8c84846200042b575b9250925050519816988989528c8901528701521693a36004967f877a02cb809da0364d23adca3cd50c451b53f279d3df632e1fc11eb66335bce589895481519081528388820152a1875580156200041b578952815115620003e757610120971687528051928311620003d2576005948554908582811c92168015620003c7575b84831014620003b25750601f811162000366575b5081601f8411600114620002fb5750928293918392600094620002ef575b50501b916000199060031b1c19161790555b51906117289283620005548439608051836106f0015260a0518381816101780152610749015260c05183818161062c015281816109a10152610dde015260e0518381816109f801526113aa01525182818161088701528181610fa60152818161132601526113e20152518181816105e70152610f010152f35b01519250388062000264565b919083601f1981168760005284600020946000905b888383106200034b575050501062000331575b505050811b01905562000276565b015160001960f88460031b161c1916905538808062000323565b85870151885590960195948501948793509081019062000310565b8560005282600020601f8501871c810191848610620003a7575b601f01871c019085905b8281106200039a57505062000246565b600081550185906200038a565b909150819062000380565b602290634e487b7160e01b6000525260246000fd5b91607f169162000232565b604185634e487b7160e01b6000525260246000fd5b865162461bcd60e51b8152808701849052600e60248201526d085b5a5c9c9bdc90da185a5b925960921b6044820152606490fd5b875163e6c4247b60e01b81528790fd5b7fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc91856003549483519286168352820152a1161760035581388d8c84620001b2565b8f5162461bcd60e51b8152600481018d9052601160248201527032b6b83a3c903937b7ba26b0b730b3b2b960791b6044820152606490fd5b62461bcd60e51b8152600481018c9052600c60248201526b32b6b83a3c903237b6b0b4b760a11b6044820152606490fd5b818101830151898201840152899201620000e4565b600080fd5b634e487b7160e01b600052604160045260246000fd5b6040519190601f01601f191682016001600160401b03811183821017620004f057604052565b519063ffffffff82168203620004eb57565b51906001600160a01b0382168203620004eb5756fe608080604052600436101561001d575b50361561001b57600080fd5b005b600090813560e01c908163116191b6146113ce57508063141684161461138d5780631a98b2e01461122d5780633cf52ffb1461120f57806348e6fa2314610d9557806349160658146107b85780634ff746f61461071457806352a9674b146106d35780635bd11efc1461065b5780635f61e3ec146106165780636a22d8cc146105d15780636a42b8f8146105b3578063715018a6146104ff5780637850b020146104a05780638da5cb5b14610479578063b1f8100d146103b3578063c5b350df1461030a578063c8a4d69014610221578063cc394283146101f8578063d1851c92146101cf578063d232c220146101a7578063d69f9d61146101625763db1b76590361000f573461015f57602036600319011261015f576004356001600160a01b038181169182900361015b57602092506003541614604051908152f35b8280fd5b80fd5b503461015f578060031936011261015f576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b503461015f578060031936011261015f57546040516001600160a01b03909116158152602090f35b503461015f578060031936011261015f576001546040516001600160a01b039091168152602090f35b503461015f578060031936011261015f576003546040516001600160a01b039091168152602090f35b503461015f578060031936011261015f5760405190806005546102438161151d565b808552916001918083169081156102e05750600114610285575b6102818561026d8187038261148a565b604051918291602083526020830190611557565b0390f35b9250600583527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db05b8284106102c857505050810160200161026d8261028161025d565b805460208587018101919091529093019281016102ad565b8695506102819693506020925061026d94915060ff191682840152151560051b820101929361025d565b503461015f578060031936011261015f576001546001600160a01b03908181163381036103a15762093a8061034160025442611606565b111561038f57806000549384167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a36001600160a01b03199283161760009081556002551660015580f35b6040516324e0285f60e21b8152600490fd5b6040516311a7f27160e11b8152600490fd5b503461015f57602036600319011261015f576004356001600160a01b038181169182900361015b57808354163381036104675782600154928316148061045c575b61044a57821461043857426002556001600160a01b03191681176001557f6ab4d119f23076e8ad491bc65ce85f017fb0591dce08755ba8591059cc51737a8280a280f35b604051634a2fb73f60e11b8152600490fd5b6040516311bc066560e11b8152600490fd5b5060025415156103f4565b6040516311a8a1bb60e31b8152600490fd5b503461015f578060031936011261015f57546040516001600160a01b039091168152602090f35b503461015f57602036600319011261015f578054600435906001600160a01b03163303610467577f877a02cb809da0364d23adca3cd50c451b53f279d3df632e1fc11eb66335bce560406004548151908152836020820152a160045580f35b503461015f578060031936011261015f5780546001600160a01b0390811633036104675760025462093a806105348242611606565b111561038f57156105a15760015481811661058f57600080549283167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a36001600160a01b031991821660009081556002551660015580f35b6040516323295ef960e01b8152600490fd5b604051630e4b303f60e21b8152600490fd5b503461015f578060031936011261015f57602060405162093a808152f35b503461015f578060031936011261015f576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b503461015f578060031936011261015f576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b503461015f57602036600319011261015f576004356001600160a01b038181169182900361015b57808354163303610467577fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc60406003549281519084168152846020820152a16001600160a01b0319161760035580f35b503461015f578060031936011261015f57602060405163ffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b503461015f57602036600319011261015f5760043567ffffffffffffffff81116107b4576107469036906004016114ff565b507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163303610789576040516316c2fdb560e21b8152600490fd5b606460405162461bcd60e51b815260206004820152600460248201526310a0a6a160e11b6044820152fd5b5080fd5b503461015f576003196080368201126107b45767ffffffffffffffff602435818111610d91576107ec903690600401611411565b91604435818111610d8d57610805903690600401611411565b929091606435908111610d8957610820903690600401611411565b949095602061087a61083336898b6114c8565b805190830120604051635f6970c360e01b815260048035908201526080602482015293849283929161086960848501898b6115af565b908482030160448501528a8a6115af565b606483019190915203818b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af1908115610d7e578891610d4f575b5015610d3d576108e8602060405183819483830196873781018a8382015203808452018261148a565b51902060405160055481886108fc8361151d565b9260018116908115610d1f5750600114610cc4575b610924925003601f19810183528261148a565b6020815191012003610c8f5761093b9136916114c8565b918391835193602a9485811490811591610c6c575b508015610c32575b610bff57600280915b868310610b095787866109753687896114c8565b60035490916001600160a01b03918216911603610ad5576020815103610aa657805160208083015184927f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316928110610a94575b50813b1561015b57829160448392604051948593849263473ec9fd60e11b845263ffffffff7f000000000000000000000000000000000000000000000000000000000000000016600485015260248401525af18015610a8957610a75575b507fb3abc57bfeebd2cac918901db582f71972a8e628bccf19f5ae3e3482b98a5ced610a6983604051918291604083526040830190611557565b3360208301520390a180f35b610a7e90611444565b6107b4578183610a2f565b6040513d84823e3d90fd5b6000199060200360031b1b16856109d1565b60405162461bcd60e51b8152602060048201526007602482015266042d8cadccee8d60cb1b6044820152606490fd5b60405162461bcd60e51b815260206004820152600c60248201526b10b61921b7b73732b1ba37b960a11b6044820152606490fd5b909194610b1686836115d0565b5160f81c606181101580610c27575b15610b955760ff90811660561901908111610b7f575b6029878103908111610b6b5760ff90911690841b1b6001600160a01b03161794610b64906115f7565b9190610961565b634e487b7160e01b8a52601160045260248afd5b634e487b7160e01b600052601160045260246000fd5b604181101580610c1c575b15610bcc5760ff9081166036190190811115610b3b57634e487b7160e01b600052601160045260246000fd5b603081101580610c11575b15610bff57602f190160ff811115610b3b57634e487b7160e01b600052601160045260246000fd5b604051636fa478cf60e11b8152600490fd5b506039811115610bd7565b506046811115610ba0565b506066811115610b25565b50805160011015610c585760218101516001600160f81b031916600f60fb1b1415610958565b634e487b7160e01b86526032600452602486fd5b905015610c585760208101516001600160f81b031916600360fc1b141538610950565b60405162461bcd60e51b815260206004820152600d60248201526c10b9b7bab931b29031b430b4b760991b6044820152606490fd5b50506005885281887f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db05b838210610d05575050602061092492820101610911565b602091925080600191548385880101520191018391610cee565b6020925061092494915060ff19168284015280151502820101610911565b604051631403112d60e21b8152600490fd5b610d71915060203d602011610d77575b610d69818361148a565b810190611597565b386108bf565b503d610d5f565b6040513d8a823e3d90fd5b8680fd5b8580fd5b8380fd5b50604036600319011261015f5767ffffffffffffffff60043581811161015b57610dc39036906004016114ff565b9060243590811161015b57610ddc9036906004016114ff565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031633036111db57600354610e1c6020845114611613565b610e27825115611613565b346004548082116111d3575b50604051916bffffffffffffffffffffffff199060601b16602083015260148252610e5d8261146e565b815160405192610e6c8461146e565b601084526f181899199a1a9b1b9c1cb0b131b232b360811b602085015280518060011b90808204600214901517156111bf5760020193846002116111bf57610ecc610eb6866114ac565b95610ec4604051978861148a565b8087526114ac565b6020860190601f19013682378551156111ab57603090538451600110156111975760786021860153875b8381106110c25750507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316928792509050823b156107b457604051630c93e3bb60e01b815230600482015260a06024820152928391829081610f8c610f7a610f6860a4840161164e565b8381036003190160448501528a611557565b8281036003190160648401528b611557565b33608483015203925af180156110b7576110a4575b5083907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316803b1561015b5761101783916110299383604051809681958294631c92115f60e01b8452606060048501526110056064850161164e565b84810360031901602486015290611557565b8281036003190160448401528b611557565b03925af18015610a8957611090575b507fdcaa37a042a0087de79018c629bbd29cee82ca80bd9be394e1696bf9e93550776110768461108485604051938493606085526060850190611557565b908382036020850152611557565b3360408301520390a180f35b61109990611444565b61015b578238611038565b6110b090949194611444565b9238610fa1565b6040513d87823e3d90fd5b6001600160f81b0319806110e36110d984876115d0565b5160fc1c856115d0565b5116908260011b91838304600214841517156111835782600201908160021161116f57611113908d1a918a6115d0565b5361112e600f61112385886115d0565b5160f81c16856115d0565b51168160030160031161115b579061115061115693928c1a91600301896115d0565b536115f7565b610ef6565b634e487b7160e01b8b52601160045260248bfd5b634e487b7160e01b8d52601160045260248dfd5b634e487b7160e01b8c52601160045260248cfd5b634e487b7160e01b88526032600452602488fd5b634e487b7160e01b89526032600452602489fd5b634e487b7160e01b88526011600452602488fd5b905038610e33565b60405162461bcd60e51b815260206004820152600c60248201526b10b937b7ba26b0b730b3b2b960a11b6044820152606490fd5b503461015f578060031936011261015f576020600254604051908152f35b503461015f5760031960c0368201126107b45767ffffffffffffffff602435818111610d9157611261903690600401611411565b604435838111610d8d57611279903690600401611411565b60643585811161138957611291903690600401611411565b608435968711611385576112f597611305611319956112c36112b960209b3690600401611411565b96909536916114c8565b8a8151910120956040519b8c9a8b9a631876eed960e01b8c5260043560048d015260c060248d015260c48c01916115af565b91848a84030160448b01526115af565b9360648701528584030160848601526115af565b60a48035908301520381857f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af1908115610a89578291611367575b5015610d3d5780f35b61137f915060203d8111610d7757610d69818361148a565b3861135e565b8880fd5b8780fd5b503461015f578060031936011261015f57602060405163ffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b9050346107b457816003193601126107b4577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b9181601f8401121561143f5782359167ffffffffffffffff831161143f576020838186019501011161143f57565b600080fd5b67ffffffffffffffff811161145857604052565b634e487b7160e01b600052604160045260246000fd5b6040810190811067ffffffffffffffff82111761145857604052565b90601f8019910116810190811067ffffffffffffffff82111761145857604052565b67ffffffffffffffff811161145857601f01601f191660200190565b9291926114d4826114ac565b916114e2604051938461148a565b82948184528183011161143f578281602093846000960137010152565b9080601f8301121561143f5781602061151a933591016114c8565b90565b90600182811c9216801561154d575b602083101461153757565b634e487b7160e01b600052602260045260246000fd5b91607f169161152c565b919082519283825260005b848110611583575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201611562565b9081602091031261143f5751801515810361143f5790565b908060209392818452848401376000828201840152601f01601f1916010190565b9081518110156115e1570160200190565b634e487b7160e01b600052603260045260246000fd5b6000198114610b7f5760010190565b91908203918211610b7f57565b1561161a57565b60405162461bcd60e51b815260206004820152600c60248201526b042c8c2e8c240d8cadccee8d60a31b6044820152606490fd5b6005546000929161165e8261151d565b808252916001908181169081156116d5575060011461167c57505050565b9192935060056000527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0916000925b8484106116bd57505060209250010190565b805460208585018101919091529093019281016116ab565b915050602093945060ff929192191683830152151560051b01019056fea2646970667358221220504cd9916acd519c30cac1bf1c0f17521b5bfc0f27df13d98eaec7eb40d328fe64736f6c63430008110033";

type MultichainHubConnectorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MultichainHubConnectorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MultichainHubConnector__factory extends ContractFactory {
  constructor(...args: MultichainHubConnectorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _gasCap: PromiseOrValue<BigNumberish>,
    _gasReceiver: PromiseOrValue<string>,
    _mirrorChainId: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MultichainHubConnector> {
    return super.deploy(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _gasCap,
      _gasReceiver,
      _mirrorChainId,
      overrides || {}
    ) as Promise<MultichainHubConnector>;
  }
  override getDeployTransaction(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _gasCap: PromiseOrValue<BigNumberish>,
    _gasReceiver: PromiseOrValue<string>,
    _mirrorChainId: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _gasCap,
      _gasReceiver,
      _mirrorChainId,
      overrides || {}
    );
  }
  override attach(address: string): MultichainHubConnector {
    return super.attach(address) as MultichainHubConnector;
  }
  override connect(signer: Signer): MultichainHubConnector__factory {
    return super.connect(signer) as MultichainHubConnector__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MultichainHubConnectorInterface {
    return new utils.Interface(_abi) as MultichainHubConnectorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MultichainHubConnector {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MultichainHubConnector;
  }
}
