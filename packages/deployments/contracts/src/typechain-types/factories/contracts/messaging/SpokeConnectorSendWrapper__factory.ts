/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  SpokeConnectorSendWrapper,
  SpokeConnectorSendWrapperInterface,
} from "../../../contracts/messaging/SpokeConnectorSendWrapper";

const _abi = [
  {
    inputs: [],
    name: "ProposedOwnable__acceptProposedOwner_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyOwner_notOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyProposed_notProposedOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_noOwnershipChange",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_noProposal",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    name: "FundsDeducted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    name: "FundsReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "proposedOwner",
        type: "address",
      },
    ],
    name: "OwnershipProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "spokeConnector",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "oldSpokeConnector",
        type: "address",
      },
    ],
    name: "SpokeConnectorChanged",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptProposedOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "delay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newlyProposed",
        type: "address",
      },
    ],
    name: "proposeNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proposed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposedTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounced",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_encodedData",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    name: "send",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_spokeConnector",
        type: "address",
      },
    ],
    name: "setSpokeConnector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "spokeConnector",
    outputs: [
      {
        internalType: "contract ISpokeConnector",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061088f806100206000396000f3fe6080604052600436106100ab5760003560e01c80639cadce00116100645780639cadce00146101a75780639f645a03146101c7578063b1f8100d146101e7578063c5b350df14610207578063d1851c921461021c578063d232c2201461023a57600080fd5b80633ccfd60b146100ef5780633cf52ffb146101065780636a42b8f81461012a578063715018a6146101405780638da5cb5b146101555780639372c4ab1461018757600080fd5b366100ea57604080513481524760208201527f063d07ee72a7483b8e07ca09054bb686775c5c030f945dde3823a5257a0a93eb910160405180910390a1005b600080fd5b3480156100fb57600080fd5b50610104610263565b005b34801561011257600080fd5b506002545b6040519081526020015b60405180910390f35b34801561013657600080fd5b5062093a80610117565b34801561014c57600080fd5b506101046102f9565b34801561016157600080fd5b506000546001600160a01b03165b6040516001600160a01b039091168152602001610121565b34801561019357600080fd5b506101046101a23660046106ff565b6103ad565b3480156101b357600080fd5b5060035461016f906001600160a01b031681565b3480156101d357600080fd5b506101046101e23660046107b4565b610454565b3480156101f357600080fd5b506101046102023660046107b4565b610529565b34801561021357600080fd5b506101046105ca565b34801561022857600080fd5b506001546001600160a01b031661016f565b34801561024657600080fd5b506000546040516001600160a01b03909116158152602001610121565b6000546001600160a01b0316331461028e576040516311a8a1bb60e31b815260040160405180910390fd5b6040514790339082156108fc029083906000818181858888f193505050501580156102bd573d6000803e3d6000fd5b50604080518281524760208201527f9826a73d0fd7186bda6a15195ac17571869cab151bfe9a8fed3f9407fffe5b18910160405180910390a150565b6000546001600160a01b03163314610324576040516311a8a1bb60e31b815260040160405180910390fd5b60025460000361034757604051630e4b303f60e21b815260040160405180910390fd5b62093a806002544261035991906107e4565b11610377576040516386d4b3f160e01b815260040160405180910390fd5b6001546001600160a01b0316156103a1576040516323295ef960e01b815260040160405180910390fd5b6103ab6000610636565b565b600354604051630aec6b9f60e21b81526001600160a01b0390911690632bb1ae7c9083906103df90869060040161080b565b6000604051808303818588803b1580156103f857600080fd5b505af115801561040c573d6000803e3d6000fd5b5050604080518581524760208201527f9826a73d0fd7186bda6a15195ac17571869cab151bfe9a8fed3f9407fffe5b1894500191506104489050565b60405180910390a15050565b6000546001600160a01b0316331461047f576040516311a8a1bb60e31b815260040160405180910390fd5b6001600160a01b0381166104d15760405162461bcd60e51b815260206004820152601560248201527410bd32b9379039b837b5b29031b7b73732b1ba37b960591b604482015260640160405180910390fd5b600380546001600160a01b038381166001600160a01b03198316811790935560408051938452911660208301819052917f66948d99d8431a8416af2202bc301823b7cdd87beb9bddaa274aedac0611a5fd9101610448565b6000546001600160a01b03163314610554576040516311a8a1bb60e31b815260040160405180910390fd5b6001546001600160a01b038281169116148015610572575060025415155b15610590576040516311bc066560e11b815260040160405180910390fd5b6000546001600160a01b038083169116036105be57604051634a2fb73f60e11b815260040160405180910390fd5b6105c78161069b565b50565b6001546001600160a01b031633146105f5576040516311a7f27160e11b815260040160405180910390fd5b62093a806002544261060791906107e4565b116106255760405163d39c12bb60e01b815260040160405180910390fd5b6001546103ab906001600160a01b03165b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b039092166001600160a01b0319928316178155600255600180549091169055565b42600255600180546001600160a01b0319166001600160a01b0383169081179091556040517f6ab4d119f23076e8ad491bc65ce85f017fb0591dce08755ba8591059cc51737a90600090a250565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561071257600080fd5b823567ffffffffffffffff8082111561072a57600080fd5b818501915085601f83011261073e57600080fd5b813581811115610750576107506106e9565b604051601f8201601f19908116603f01168101908382118183101715610778576107786106e9565b8160405282815288602084870101111561079157600080fd5b826020860160208301376000602093820184015298969091013596505050505050565b6000602082840312156107c657600080fd5b81356001600160a01b03811681146107dd57600080fd5b9392505050565b8181038181111561080557634e487b7160e01b600052601160045260246000fd5b92915050565b600060208083528351808285015260005b818110156108385785810183015185820160400152820161081c565b506000604082860101526040601f19601f830116850101925050509291505056fea264697066735822122047ad0ce4a958f84d92b410723dceff242bb3bd768414f982040e6b992adbe32164736f6c63430008110033";

type SpokeConnectorSendWrapperConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SpokeConnectorSendWrapperConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SpokeConnectorSendWrapper__factory extends ContractFactory {
  constructor(...args: SpokeConnectorSendWrapperConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SpokeConnectorSendWrapper> {
    return super.deploy(overrides || {}) as Promise<SpokeConnectorSendWrapper>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): SpokeConnectorSendWrapper {
    return super.attach(address) as SpokeConnectorSendWrapper;
  }
  override connect(signer: Signer): SpokeConnectorSendWrapper__factory {
    return super.connect(signer) as SpokeConnectorSendWrapper__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SpokeConnectorSendWrapperInterface {
    return new utils.Interface(_abi) as SpokeConnectorSendWrapperInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SpokeConnectorSendWrapper {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as SpokeConnectorSendWrapper;
  }
}
