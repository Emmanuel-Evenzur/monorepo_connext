/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  PolygonZkSpokeConnector,
  PolygonZkSpokeConnectorInterface,
} from "../../../../../contracts/messaging/connectors/polygonzk/PolygonZkSpokeConnector";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "_mirrorDomain",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_amb",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rootManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_processGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_reserveGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_delayBlocks",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_merkle",
        type: "address",
      },
      {
        internalType: "address",
        name: "_watcherManager",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_mirrorNetworkId",
        type: "uint32",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Connector__processMessage_notUsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyOwner_notOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyProposed_notProposedOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__ownershipDelayElapsed_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_noOwnershipChange",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_noProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "RateLimited__rateLimited_messageSendRateExceeded",
    type: "error",
  },
  {
    inputs: [],
    name: "TypedMemView__index_indexMoreThan32Bytes",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "loc",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "len",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "slice",
        type: "uint256",
      },
    ],
    name: "TypedMemView__index_overrun",
    type: "error",
  },
  {
    inputs: [],
    name: "TypedMemView__unsafeCopyTo_identityOOG",
    type: "error",
  },
  {
    inputs: [],
    name: "TypedMemView__unsafeCopyTo_invalidPointer",
    type: "error",
  },
  {
    inputs: [],
    name: "TypedMemView__unsafeCopyTo_nullPointer",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
    ],
    name: "AggregateRootReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
    ],
    name: "AggregateRootRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
    ],
    name: "AggregateRootVerified",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "updated",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "DelayBlocksUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
    ],
    name: "Dispatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "FundsWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageProcessed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "aggregateRoot",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "aggregateIndex",
        type: "uint256",
      },
    ],
    name: "MessageProven",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "encodedData",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previous",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "current",
        type: "address",
      },
    ],
    name: "MirrorConnectorUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "mirrorDomain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "amb",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "rootManager",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "mirrorConnector",
        type: "address",
      },
    ],
    name: "NewConnector",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "proposedOwner",
        type: "address",
      },
    ],
    name: "OwnershipProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "returnData",
        type: "bytes",
      },
    ],
    name: "Process",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "updater",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newRateLimit",
        type: "uint256",
      },
    ],
    name: "SendRateLimitUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "SenderAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "SenderRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "watcherManager",
        type: "address",
      },
    ],
    name: "WatcherManagerChanged",
    type: "event",
  },
  {
    inputs: [],
    name: "AMB",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MERKLE",
    outputs: [
      {
        internalType: "contract MerkleTreeManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIRROR_DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PROCESS_GAS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "RESERVE_GAS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_MANAGER",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptProposedOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
    ],
    name: "addSender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowlistedSenders",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "delay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "delayBlocks",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_destinationDomain",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "_recipientAddress",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_messageBody",
        type: "bytes",
      },
    ],
    name: "dispatch",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "home",
    outputs: [
      {
        internalType: "contract IOutbox",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_potentialReplica",
        type: "address",
      },
    ],
    name: "isReplica",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastSentBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "localDomain",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "messages",
    outputs: [
      {
        internalType: "enum SpokeConnector.MessageStatus",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mirrorConnector",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "originAddress",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "originNetwork",
        type: "uint32",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "onMessageReceived",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "outboundRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "pendingAggregateRoots",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "processMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newlyProposed",
        type: "address",
      },
    ],
    name: "proposeNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proposed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposedTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "message",
            type: "bytes",
          },
          {
            internalType: "bytes32[32]",
            name: "path",
            type: "bytes32[32]",
          },
          {
            internalType: "uint256",
            name: "index",
            type: "uint256",
          },
        ],
        internalType: "struct SpokeConnector.Proof[]",
        name: "_proofs",
        type: "tuple[]",
      },
      {
        internalType: "bytes32",
        name: "_aggregateRoot",
        type: "bytes32",
      },
      {
        internalType: "bytes32[32]",
        name: "_aggregatePath",
        type: "bytes32[32]",
      },
      {
        internalType: "uint256",
        name: "_aggregateIndex",
        type: "uint256",
      },
    ],
    name: "proveAndProcess",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "provenAggregateRoots",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "provenMessageRoots",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rateLimitBlocks",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_fraudulentRoot",
        type: "bytes32",
      },
    ],
    name: "removePendingAggregateRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
    ],
    name: "removeSender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounced",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_encodedData",
        type: "bytes",
      },
    ],
    name: "send",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "sentMessageRoots",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_delayBlocks",
        type: "uint256",
      },
    ],
    name: "setDelayBlocks",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
    ],
    name: "setMirrorConnector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_rateLimit",
        type: "uint256",
      },
    ],
    name: "setRateLimitBlocks",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_watcherManager",
        type: "address",
      },
    ],
    name: "setWatcherManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_expected",
        type: "address",
      },
    ],
    name: "verifySender",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "watcherManager",
    outputs: [
      {
        internalType: "contract WatcherManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
    ],
    name: "withdrawFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6101803462000407576200347c38819003601f8101601f191683016001600160401b038111848210176200040c57839282916040528339610160928391810103126200040757620000508162000422565b916200005f6020830162000422565b916200006e6040820162000434565b6200007c6060830162000434565b906200008b6080840162000434565b9060a084015160c08501519060e08601519361010099620000ae8b890162000434565b946101209a620000c08c8b0162000434565b93620000d1610140809c0162000422565b60008054604051929c9133906001600160a01b038316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a36001600160a01b03199081163317600090815560025560018054909116905563ffffffff9186831615620003d657506001600160a01b0381169384156200039d577f4f9c27c2fe3f84576ea469d367d044da53c45e951617e8389f2b5ed8db9d25f0946060948493896080528860a05260c0528260e05260018060a01b031690816200034e575b6040519760018060a01b031688526020880152604087015216941692a36003805460ff60a01b19169055600480546001600160a01b0319166001600160a01b03929092169190911790556001600755620cf84f8111156200031a57613a97821115620002e657875284526001600160a01b03168015620002b257865260085582526040519261303294856200044a8639608051858181610b1f0152818161179401526122ad015260a0518581816109ee015281816115360152818161246a01526126ce015260c05185610c48015260e0518561040901525184818161079901528181610ce0015281816110bb015261180c01525183818161159d01526123670152518281816106e8015261238f01525181818161058901526127180152f35b60405162461bcd60e51b815260206004820152600c60248201526b217a65726f206d65726b6c6560a01b6044820152606490fd5b60405162461bcd60e51b815260206004820152600c60248201526b21726573657276652067617360a01b6044820152606490fd5b60405162461bcd60e51b815260206004820152600c60248201526b2170726f636573732067617360a01b6044820152606490fd5b816003547fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc6040805160018060a01b0384168152846020820152a16001600160a01b0319161760035562000193565b60405162461bcd60e51b815260206004820152601160248201527032b6b83a3c903937b7ba26b0b730b3b2b960791b6044820152606490fd5b62461bcd60e51b815260206004820152600c60248201526b32b6b83a3c903237b6b0b4b760a11b6044820152606490fd5b600080fd5b634e487b7160e01b600052604160045260246000fd5b519063ffffffff821682036200040757565b51906001600160a01b0382168203620004075756fe6080604052600436101561001b575b361561001957600080fd5b005b60003560e01c806314168416146103d25780631806b5f2146103c95780631eeaabea146103c057806325e3beda146103b75780632bb1ae7c146103ae5780632bbd59ca146103a5578063301f07c31461039c5780633cf52ffb146103935780633f4ba83a1461038a5780634ff746f614610381578063508a109b146103785780635190bc531461036f57806352a9674b146102fa578063572386ca14610366578063579c16181461035d5780635bd11efc146103545780635c975abb1461034b5780635f61e3ec146103425780636159ada11461033957806365eaf11b1461033057806368742da6146103275780636a42b8f81461031e5780636b04a93314610315578063715018a61461030c5780638456cb59146103035780638d3638f4146102fa5780638da5cb5b146102f157806398c9f2b9146102e85780639d3117c7146102df5780639fa92f9d146102d6578063a01892a5146102cd578063a792c29b146102c4578063ad9c0c2e146102bb578063b1f8100d146102b2578063b2f87643146102a9578063b697f531146102a0578063b95a200114610297578063c5b350df1461028e578063cc39428314610285578063d1851c921461027c578063d232c22014610273578063d2a3cc711461026a578063d69f9d6114610261578063d7d317b314610258578063d88beda21461024f578063db1b765914610246578063e0fed0101461023d5763fa31de010361000e576102386116eb565b61000e565b506102386115ee565b506102386115c0565b50610238611584565b50610238611565565b5061023861151f565b5061023861143e565b50610238611413565b506102386113e9565b506102386113bf565b50610238611309565b506102386112d0565b5061023861125a565b506102386111e7565b50610238611133565b50610238611114565b506102386110ea565b506102386110a4565b50610238611088565b5061023861105b565b50610238611029565b50610238610fff565b50610238610b01565b50610238610f54565b50610238610f2d565b50610238610e63565b50610238610e44565b50610238610d4d565b50610238610cb7565b50610238610c77565b50610238610c31565b50610238610c0a565b50610238610b94565b50610238610b75565b50610238610b43565b50610238610ad1565b50610238610a67565b506102386109dc565b5061023861096b565b5061023861094c565b5061023861091a565b506102386108e1565b50610238610736565b506102386106cf565b50610238610628565b50610238610543565b506102386103eb565b60009103126103e657565b600080fd5b50346103e65760003660031901126103e657602060405163ffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b600435906001600160a01b03821682036103e657565b6024359063ffffffff821682036103e657565b6004359063ffffffff821682036103e657565b50634e487b7160e01b600052604160045260246000fd5b67ffffffffffffffff811161049457604052565b61049c610469565b604052565b90601f8019910116810190811067ffffffffffffffff82111761049457604052565b60209067ffffffffffffffff81116104e1575b601f01601f19160190565b6104e9610469565b6104d6565b9291926104fa826104c3565b9161050860405193846104a1565b8294818452818301116103e6578281602093846000960137010152565b9080601f830112156103e657816020610540933591016104ee565b90565b5060603660031901126103e65761055861042d565b610560610443565b60443567ffffffffffffffff81116103e657610580903690600401610525565b9063ffffffff807f0000000000000000000000000000000000000000000000000000000000000000169116036105f15760208151036105c257610019916124c7565b60405162461bcd60e51b8152602060048201526007602482015266042d8cadccee8d60cb1b6044820152606490fd5b60405162461bcd60e51b815260206004820152600f60248201526e216d6972726f72206e6574776f726b60881b6044820152606490fd5b50346103e65760203660031901126103e657600054600435906001600160a01b031633036106bd57600854811461068957807f8bd16320f3b60336ed5fd2a770eb7453e7e71cfef4462addffd7ae9dfe201c8e6020604051338152a2600855005b60405162461bcd60e51b815260206004820152600c60248201526b2164656c6179426c6f636b7360a01b6044820152606490fd5b6040516311a8a1bb60e31b8152600490fd5b50346103e65760003660031901126103e65760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b60206003198201126103e6576004359067ffffffffffffffff82116103e65761054091600401610525565b506107403661070b565b6107486119c6565b60065460055481018091116108b4575b43106108a2574360065560405163ebf0c71760e01b81527fdcaa37a042a0087de79018c629bbd29cee82ca80bd9be394e1696bf9e9355077916020826004817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa918215610895575b600092610865575b506107fb6107f56107ee84600052600c602052604060002090565b5460ff1690565b15611ae4565b61084f610842604051936108288561081a836020830160209181520190565b03601f1981018752866104a1565b61083284866126a7565b600052600c602052604060002090565b805460ff19166001179055565b610860604051928392339184611b24565b0390a1005b61088791925060203d811161088e575b61087f81836104a1565b810190611aa7565b90386107d3565b503d610875565b61089d611931565b6107cb565b6040516346cf2af160e11b8152600490fd5b6108bc611ab6565b610758565b600311156108cb57565b634e487b7160e01b600052602160045260246000fd5b50346103e65760203660031901126103e657600435600052600f60205260ff6040600020541660405160038210156108cb576020918152f35b50346103e65760203660031901126103e657600435600052600a602052602060ff604060002054166040519015158152f35b50346103e65760003660031901126103e6576020600254604051908152f35b50346103e6576000806003193601126109d95780546001600160a01b031633036106bd576109976118e5565b61099f6118e5565b60ff60a01b19600354166003557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6020604051338152a180f35b80fd5b50346103e6576109eb3661070b565b507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163303610a2e576040516316c2fdb560e21b8152600490fd5b606460405162461bcd60e51b815260206004820152600460248201526310a0a6a160e11b6044820152fd5b90604491610444116103e657565b50346103e6576104603660031901126103e65760043567ffffffffffffffff8082116103e657366023830112156103e65781600401359081116103e6573660248260051b840101116103e65761001991610ac036610a59565b906104443592602480359201611bc5565b50346103e65760203660031901126103e6576020610aed61042d565b6040516001600160a01b0390911630148152f35b50346103e65760003660031901126103e657602060405163ffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b50346103e65760203660031901126103e657600435600052600c602052602060ff604060002054166040519015158152f35b50346103e65760003660031901126103e6576020600554604051908152f35b50346103e65760203660031901126103e657610bae61042d565b6000546001600160a01b0390811633036106bd577fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc60406003549281519481851686521693846020820152a16001600160a01b03191617600355005b50346103e65760003660031901126103e657602060ff60035460a01c166040519015158152f35b50346103e65760003660031901126103e6576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b50346103e65760203660031901126103e6576001600160a01b03610c9961042d565b16600052600d602052602060ff604060002054166040519015158152f35b50346103e65760003660031901126103e65760405163ebf0c71760e01b815260209081816004817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa908115610d40575b600091610d23575b50604051908152f35b610d3a9150823d811161088e5761087f81836104a1565b38610d1a565b610d48611931565b610d12565b50346103e65760203660031901126103e657610d6761042d565b600080549091906001600160a01b0390811633036106bd571647478111610dff57610df481610de4858080807feaff4b37086828766ad3268786972c0cd24259d4c87a80f9d3963a3c3d999b0d97895af13d15610dfa573d610dc8816104c3565b90610dd660405192836104a1565b81528760203d92013e611a35565b6040519081529081906020820190565b0390a280f35b611a35565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e63650000006044820152606490fd5b50346103e65760003660031901126103e657602060405162093a808152f35b50346103e65760203660031901126103e65760008054600435906001600160a01b031633036106bd57610e946118e5565b8082526009602052604082205415610ef057610eea817ff51534ecf10a58db36ce4f5180f59deddf3b3eb7c5e7454e602c2f80a40cc7399284526009602052836040812055604051918291829190602083019252565b0390a180f35b60405162461bcd60e51b8152602060048201526015602482015274616767726567617465526f6f74202165786973747360581b6044820152606490fd5b50346103e6576000806003193601126109d95780546001600160a01b031633036106bd5780f35b50346103e6576000806003193601126109d9576024602060018060a01b0360045416604051928380926384785ecd60e01b82523360048301525afa8015610ff2575b8290610fb2575b610fa7915061193e565b610faf611975565b80f35b506020813d8211610fea575b81610fcb602093836104a1565b81010312610fe657518015158103610fe657610fa790610f9d565b5080fd5b3d9150610fbe565b610ffa611931565b610f96565b50346103e65760003660031901126103e6576000546040516001600160a01b039091168152602090f35b50346103e65760203660031901126103e657600435600052600b602052602060ff604060002054166040519015158152f35b50346103e65760203660031901126103e65760043560005260096020526020604060002054604051908152f35b50346103e65760003660031901126103e6576020604051308152f35b50346103e65760003660031901126103e6576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b50346103e65760003660031901126103e6576004546040516001600160a01b039091168152602090f35b50346103e65760003660031901126103e6576020600854604051908152f35b50346103e65760203660031901126103e65761114d61042d565b6000546001600160a01b03919082163381036106bd578260015492168093831614806111dc575b6111ca5782146111b857426002556001600160a01b03191681176001557f6ab4d119f23076e8ad491bc65ce85f017fb0591dce08755ba8591059cc51737a600080a2005b604051634a2fb73f60e11b8152600490fd5b6040516311bc066560e11b8152600490fd5b506002541515611174565b50346103e65760203660031901126103e65761120161042d565b6000546001600160a01b039190821633036106bd577f384859c5ef5fafac31e8bc92ce7fb48b1f2c74c4dd5e212eb84ec202fa5d9fad916020911680600052600d8252604060002060ff198154169055604051908152a1005b50346103e65760203660031901126103e65761127461042d565b6000546001600160a01b039190821633036106bd577fd65eca5d561d3a4568c87b9b13ced4ab52a69edadfdfdb22d76bc595f36d7d87916020911680600052600d82526040600020600160ff19825416179055604051908152a1005b50346103e65760203660031901126103e657602063ffffffff806112f2610456565b16600052600e825260406000205416604051908152f35b50346103e6576000806003193601126109d9576001546001600160a01b03908181163381036113ad5762093a8060025442034281116113a0575b111561138e578084549384167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08680a36001600160a01b031992831617835560028390551660015580f35b6040516324e0285f60e21b8152600490fd5b6113a8611ab6565b611343565b6040516311a7f27160e11b8152600490fd5b50346103e65760003660031901126103e6576003546040516001600160a01b039091168152602090f35b50346103e65760003660031901126103e6576001546040516001600160a01b039091168152602090f35b50346103e65760003660031901126103e6576000546040516001600160a01b03909116158152602090f35b50346103e65760203660031901126103e65761145861042d565b6000546001600160a01b0390811633036106bd57600454828216911681146114da577fc16d059e43d7f8e29ccb4e001a2f249d3c59e274925d6a6bc3912943441d9f6c916114c06108609260018060a01b03166001600160601b0360a01b6004541617600455565b6040516001600160a01b0390911681529081906020820190565b60405162461bcd60e51b815260206004820152601760248201527f616c72656164792077617463686572206d616e616765720000000000000000006044820152606490fd5b50346103e65760003660031901126103e6576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b50346103e65760003660031901126103e6576020600654604051908152f35b50346103e65760003660031901126103e65760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b50346103e65760203660031901126103e65760206115e46115df61042d565b612460565b6040519015158152f35b50346103e65760203660031901126103e657600054600435906001600160a01b031633036106bd576005548114611655576040817f8e7fa5e406cb856aab05575e45ea011c6748376cc1b5229e3d67b92986406a15926005558151903382526020820152a1005b60405162461bcd60e51b815260206004820152600f60248201526e085b995dc81c985d19481b1a5b5a5d608a1b6044820152606490fd5b60005b83811061169f5750506000910152565b818101518382015260200161168f565b906020916116c88151809281855285808601910161168c565b601f01601f1916010190565b6040906105409392815281602082015201906116af565b50346103e65760603660031901126103e657611705610456565b60443567ffffffffffffffff81116103e657611725903690600401610525565b33600052600d60205260409160ff836000205416156118b257908161175d6117b89363ffffffff16600052600e602052604060002090565b9061178d61176f835463ffffffff1690565b9261177984611b4e565b63ffffffff1663ffffffff19825416179055565b60243591337f0000000000000000000000000000000000000000000000000000000000000000612ad0565b9061186e82516020840120917f40f08ee347fc927ae45902edc87debb024aab1a311943731968607f603f2152f8151632d287e4360e01b815282818061180688600483019190602083019252565b038160007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af180156118a5575b6000918291611872575b5061185190611b86565b6118618785519384938985611ba2565b0390a151928392836116d4565b0390f35b61185192506118979150843d861161189e575b61188f81836104a1565b810190611b70565b9091611847565b503d611885565b6118ad611931565b61183d565b825162461bcd60e51b815260206004820152600c60248201526b08585b1b1bdddb1a5cdd195960a21b6044820152606490fd5b60ff60035460a01c16156118f557565b60405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606490fd5b506040513d6000823e3d90fd5b1561194557565b60405162461bcd60e51b815260206004820152600860248201526710bbb0ba31b432b960c11b6044820152606490fd5b61197d6119c6565b6119856119c6565b6003805460ff60a01b1916600160a01b1790556040513381527f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25890602090a1565b60ff60035460a01c166119d557565b60405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606490fd5b90611a256020919493946040845260408401906116af565b6001600160a01b03909416910152565b15611a3c57565b60405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d617920686176652072657665727465640000000000006064820152608490fd5b908160209103126103e6575190565b50634e487b7160e01b600052601160045260246000fd5b91908201809211611ada57565b611ae2611ab6565b565b15611aeb57565b60405162461bcd60e51b81526020600482015260116024820152701c9bdbdd08185b1c9958591e481cd95b9d607a1b6044820152606490fd5b91611a2590611b406040939695966060865260608601906116af565b9084820360208601526116af565b60019063ffffffff809116908114611b64570190565b611b6c611ab6565b0190565b91908260409103126103e6576020825192015190565b600019810191908211611ada57565b91908203918211611ada57565b9092608092610540959483526020830152604082015281606082015201906116af565b9492919093611bd26119c6565b600260075414611d1c57611c5e61084287611c4e88946002600755611bf8861515611d61565b611c15611c0e611c088886611d97565b80611dec565b36916104ee565b97611c47895199611c2e8960209c8d8094012097611d97565b018d611c3e6104209a8b92611d97565b01359086611eb3565b9788611f24565b600052600f602052604060002090565b60015b8563ffffffff918883821683811015611ccc5787611c4e88611cbf858a611cb6878b611c9d611c0e611c0860019f9c6108429d611cc59f611dc9565b89815191012098611caf838388611dc9565b0194611dc9565b01359085611eb3565b14611e1f565b0116611c61565b505050505050505060005b63ffffffff9081811684811015611d0c5790611d04611cff611c0e611c08600195898b611dc9565b61228d565b500116611cd7565b505050915050611ae26001600755565b60405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b15611d6857565b60405162461bcd60e51b81526020600482015260076024820152662170726f6f667360c81b6044820152606490fd5b9015611db35780359061043e19813603018212156103e6570190565b634e487b7160e01b600052603260045260246000fd5b9190811015611db35760051b8101359061043e19813603018212156103e6570190565b903590601e19813603018212156103e6570180359067ffffffffffffffff82116103e6576020019181360383136103e657565b15611e2657565b60405162461bcd60e51b815260206004820152600b60248201526a085cda185c9959149bdbdd60aa1b6044820152606490fd5b9190604051926104009081850185811067ffffffffffffffff821117611ea6575b604052849181019283116103e657905b828210611e9657505050565b8135815260209182019101611e8a565b611eae610469565b611e7a565b91909180600052600f60205260ff6040600020541660038110156108cb57611ee957611ee3610540933690611e59565b906127c7565b60405162461bcd60e51b8152602060048201526013602482015272214d6573736167655374617475732e4e6f6e6560681b6044820152606490fd5b9192909282600052600b60205260ff60406000205416611fe557611f5d82611f578693611f508561207a565b3690611e59565b856127c7565b03611faa57611fa57f7ec1ea51fe3db53e55ed9d922854bc2156f467ff2f87d74e2086dae2c84a88a89183600052600b602052610de46040600020600160ff19825416179055565b0390a3565b60405162461bcd60e51b81526020600482015260136024820152721a5b9d985b1a59081a5b989bdd5b99149bdbdd606a1b6044820152606490fd5b50505050565b15611ff257565b60405162461bcd60e51b81526020600482015260146024820152731859d9dc9959d85d19549bdbdd0808595e1a5cdd60621b6044820152606490fd5b1561203557565b60405162461bcd60e51b815260206004820152601760248201527f616767726567617465526f6f74202176657269666965640000000000000000006044820152606490fd5b801561212a5760ff61209682600052600a602052604060002090565b541661212757612124816120d86120ce6120bc6000956000526009602052604060002090565b546120c8811515611feb565b43611b95565b600854111561202e565b6120ef61084282600052600a602052604060002090565b807f36b314aba9f663b4d3ef3288ae489341cc5e6a2725a05fa2b72df7a27e03f42a8480a26000526009602052604060002090565b55565b50565b60405162461bcd60e51b8152602060048201526013602482015272616767726567617465526f6f7420656d70747960681b6044820152606490fd5b1561216c57565b60405162461bcd60e51b815260206004820152600c60248201526b10b232b9ba34b730ba34b7b760a11b6044820152606490fd5b156121a757565b60405162461bcd60e51b815260206004820152600760248201526610b83937bb32b760c91b6044820152606490fd5b156121dd57565b606460405162461bcd60e51b81526020600482015260046024820152632167617360e01b6044820152fd5b60405190610120820182811067ffffffffffffffff821117612236575b604052610100808352366020840137565b61223e610469565b612225565b9092610540949360809363ffffffff8092168452166020830152604082015281606082015201906116af565b610540939260609282521515602082015281604082015201906116af565b805161229b91602001612bcd565b906122d86122a883612ec2565b60e01c7f000000000000000000000000000000000000000000000000000000000000000063ffffffff1614612165565b7fd42de95a9b26f1be134c8ecce389dc4fcfa18753d01661b7b361233569e8fe486124496001600160601b03808560181c16908560781c16209361233d600161232e6107ee88600052600f602052604060002090565b612337816108c1565b146121a0565b61236161235486600052600f602052604060002090565b805460ff19166002179055565b5a6123bf7f0000000000000000000000000000000000000000000000000000000000000000916123b96123b47f000000000000000000000000000000000000000000000000000000000000000085611acd565b611b86565b106121d6565b6123d76123cb83612dac565b6001600160a01b031690565b6123df612208565b506124446123ec84612e0b565b60e01c6124366123fb86612e64565b60e01c9561241961241461240e83612d4d565b92612b34565b612f20565b9060405197889463ab2dc3f560e01b602087015260248601612243565b03601f1981018552846104a1565b612b60565b9361245b82956040519384938461226f565b0390a1565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116330361249c57806003541691161490565b606460405162461bcd60e51b815260206004820152600460248201526310b0b6b160e11b6044820152fd5b6124d090612460565b156126315780516020820151906020811061261f575b5080156125e957612501816000526009602052604060002090565b546125ad577fb3abc57bfeebd2cac918901db582f71972a8e628bccf19f5ae3e3482b98a5ced917f84ef18531155afdb0e64ff905d67044ae3aac63a6fba4661cfd9c4c14f289bc861259c8361257661257161256d6107ee61245b98600052600a602052604060002090565b1590565b612665565b4361258b826000526009602052604060002090565b556040519081529081906020820190565b0390a1604051918291339083611a0d565b60405162461bcd60e51b8152602060048201526014602482015273726f6f7420616c72656164792070656e64696e6760601b6044820152606490fd5b60405162461bcd60e51b815260206004820152600e60248201526d6e657720726f6f7420656d70747960901b6044820152606490fd5b6000199060200360031b1b16386124e6565b60405162461bcd60e51b815260206004820152600c60248201526b10b61921b7b73732b1ba37b960a11b6044820152606490fd5b1561266c57565b60405162461bcd60e51b81526020600482015260136024820152723937b7ba1030b63932b0b23c90383937bb32b760691b6044820152606490fd5b9060018060a01b036126cc8160035416926126c5602086511461278c565b511561278c565b7f00000000000000000000000000000000000000000000000000000000000000001691823b156103e65761275a9260009283604051809681958294630481fe6f60e31b845263ffffffff7f00000000000000000000000000000000000000000000000000000000000000001660048501526024840152600160448401526080606484015260848301906116af565b03925af1801561277f575b61276c5750565b80612779611ae292610480565b806103db565b612787611931565b612765565b1561279357565b60405162461bcd60e51b815260206004820152600c60248201526b042c8c2e8c240d8cadccee8d60a31b6044820152606490fd5b906103e06020916005938386861b169081528151908403526040946000948686206002831615821b90818703528584015190528686206004831615821b90818703528784015190528686206008831615821b9081870352606084015190528686206010831615821b90818703526080840151905286862085831615821b908187035260a0840151905286862087831615821b908187035260c084015190528686206080831615821b908187035260e0840151905286862061010080841615831b918288035284015190528686206102009081841615831b90818803526101208501519052878720610400841615831b90818803526101408501519052878720610800841615831b90818803526101608501519052878720611000841615831b90818803526101808501519052878720612000841615831b90818803526101a08501519052878720614000841615831b90818803526101c08501519052878720618000841615831b90818803526101e085015190528787209062010000841615831b9182880352840151905286862062020000831615821b9081870352610220840151905286862062040000831615821b9081870352610240840151905286862062080000831615821b9081870352610260840151905286862062100000831615821b9081870352610280840151905286862062200000831615821b90818703526102a0840151905286862062400000831615821b90818703526102c0840151905286862062800000831615821b90818703526102e084015190528686206301000000831615821b908187035261030084015190528686206302000000831615821b908187035261032084015190528686206304000000831615821b908187035261034084015190528686206308000000831615821b908187035261036084015190528686206310000000831615821b908187035261038084015190528686206320000000831615821b90818703526103a084015190528686206340000000831615821b90818703526103c084015190526380000000878720921615901b80940352015190522090565b94909361054094606c9460405197889563ffffffff60e01b9384809360e01b166020890152602488015260e01b16604486015260e01b166048840152604c830152612b24815180926020868601910161168c565b810103604c8101845201826104a1565b610540906001600160601b038160181c1690604b19820191821115612ce757612b5b611ab6565b612ce7565b9092919260008060405195610120870187811067ffffffffffffffff821117612bc0575b604052610100938488528260208901968636893760208451940192f1913d91808311612bb7575b506000908286523e9190565b91506000612bab565b612bc8610469565b612b84565b818101808211612c70575b80604051809211612c68575b15612c5d576001600160601b03828185169485149182612c51575b505015612c22575060601b6bffffffffffffffffffffffff60601b161760181b90565b62461bcd60e51b815260206004820152600a602482015269085d1c9d5b98d85d195960b21b6044820152606490fd5b81161490508238612bff565b50505062ffffff1990565b506000612be4565b612c78611ab6565b612bd8565b6001600160601b0380841693908316929084149081612cdd575b5015612cab5760601b1760601b1760181b90565b60405162461bcd60e51b815260206004820152600a602482015269085d1c9d5b98d85d195960b21b6044820152606490fd5b9050821438612c97565b906001600160601b0391828160781c1692604c840193848111612d40575b81604c8583010193848711612d33575b60181c16011610612d295761054091612bcd565b505062ffffff1990565b612d3b611ab6565b612d15565b612d48611ab6565b612d05565b6001600160601b03808260181c1680602411612d7c575060789190911c1660040151600160ff1b6000191d1690565b60849291604051926378218d2960e01b845260781c16600483015260248201526004604482015260206064820152fd5b6001600160601b03808260181c1680604c11612ddb575060789190911c16602c0151600160ff1b6000191d1690565b60849291604051926378218d2960e01b845260781c1660048301526024820152602c604482015260206064820152fd5b6001600160601b03808260181c1680600411612e345750600160ff1b601f1d9160781c16511690565b60849291604051926378218d2960e01b845260781c16600483015260248201526000604482015260046064820152fd5b6001600160601b03808260181c1680602811612e92575060789190911c1660240151600160ff1b601f1d1690565b60849291604051926378218d2960e01b845260781c16600483015260248201526024604482015260046064820152fd5b6001600160601b03808260181c1680602c11612ef0575060789190911c1660280151600160ff1b601f1d1690565b60849291604051926378218d2960e01b845260781c16600483015260248201526028604482015260046064820152fd5b906001600160601b03808360181c169060405193602085019162ffffff1980831614612fba57612f4f82612fc9565b612fa8578260405111612fa257838381612f70938560781c1660045afa1590565b612f9057612f8291839160d81c612c7d565b506020818401016040528252565b604051632af1bd9b60e21b8152600490fd5b60206060fd5b604051632ee0949160e11b8152600490fd5b63148d513360e21b8652600486fd5b64ffffffffff8160d81c14612ff6576001600160601b036040519181808260181c169160781c1601161190565b5060019056fea26469706673582212209fff2db2c758c5d79fd3eca2b363e45dcbf2b120c35efef87fd8ee2e49e7d0fa64736f6c63430008110033";

type PolygonZkSpokeConnectorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PolygonZkSpokeConnectorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PolygonZkSpokeConnector__factory extends ContractFactory {
  constructor(...args: PolygonZkSpokeConnectorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _processGas: PromiseOrValue<BigNumberish>,
    _reserveGas: PromiseOrValue<BigNumberish>,
    _delayBlocks: PromiseOrValue<BigNumberish>,
    _merkle: PromiseOrValue<string>,
    _watcherManager: PromiseOrValue<string>,
    _mirrorNetworkId: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PolygonZkSpokeConnector> {
    return super.deploy(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _processGas,
      _reserveGas,
      _delayBlocks,
      _merkle,
      _watcherManager,
      _mirrorNetworkId,
      overrides || {}
    ) as Promise<PolygonZkSpokeConnector>;
  }
  override getDeployTransaction(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _processGas: PromiseOrValue<BigNumberish>,
    _reserveGas: PromiseOrValue<BigNumberish>,
    _delayBlocks: PromiseOrValue<BigNumberish>,
    _merkle: PromiseOrValue<string>,
    _watcherManager: PromiseOrValue<string>,
    _mirrorNetworkId: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _processGas,
      _reserveGas,
      _delayBlocks,
      _merkle,
      _watcherManager,
      _mirrorNetworkId,
      overrides || {}
    );
  }
  override attach(address: string): PolygonZkSpokeConnector {
    return super.attach(address) as PolygonZkSpokeConnector;
  }
  override connect(signer: Signer): PolygonZkSpokeConnector__factory {
    return super.connect(signer) as PolygonZkSpokeConnector__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PolygonZkSpokeConnectorInterface {
    return new utils.Interface(_abi) as PolygonZkSpokeConnectorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PolygonZkSpokeConnector {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as PolygonZkSpokeConnector;
  }
}
