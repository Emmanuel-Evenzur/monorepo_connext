/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TestStableSwap,
  TestStableSwapInterface,
} from "../TestStableSwap";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IStableSwap",
        name: "swapContract",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "lpTokenContract",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "numOfTokens",
        type: "uint8",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "assetA",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "assetB",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "seedA",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "seedB",
        type: "uint256",
      },
    ],
    name: "PoolCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "assetIn",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "assetOut",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    name: "Swapped",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "MAX_INT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lpToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "n",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "assetA",
        type: "address",
      },
      {
        internalType: "address",
        name: "assetB",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "seedA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "seedB",
        type: "uint256",
      },
    ],
    name: "setupPool",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "swap",
    outputs: [
      {
        internalType: "contract IStableSwap",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "assetIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "assetOut",
        type: "address",
      },
    ],
    name: "swapExact",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "minToMint",
        type: "uint256",
      },
    ],
    name: "test_addLiquidity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "minAmounts",
        type: "uint256[]",
      },
    ],
    name: "test_removeLiquidity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "maxBurnAmount",
        type: "uint256",
      },
    ],
    name: "test_removeLiquidityImbalance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "tokenIndex",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "minAmount",
        type: "uint256",
      },
    ],
    name: "test_removeLiquidityOneToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "tokenIndexFrom",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "tokenIndexTo",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "dx",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minDy",
        type: "uint256",
      },
    ],
    name: "test_swap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200222938038062002229833981016040819052620000349162000233565b600080546001600160a01b0319166001600160a01b03858116919091178255600180549185166001600160a81b031990921691909117600160a01b60ff8516021790555b60015460ff600160a01b90910481169082161015620001925760005460405162415c3360e91b815260ff831660048201526001600160a01b03909116906382b8660090602401602060405180830381865afa158015620000dc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200010291906200028c565b60005460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af115801562000156573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200017c9190620002b3565b50806200018981620002d7565b91505062000078565b5060015460005460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af1158015620001ea573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002109190620002b3565b5050505062000306565b6001600160a01b03811681146200023057600080fd5b50565b6000806000606084860312156200024957600080fd5b835162000256816200021a565b602085015190935062000269816200021a565b604085015190925060ff811681146200028157600080fd5b809150509250925092565b6000602082840312156200029f57600080fd5b8151620002ac816200021a565b9392505050565b600060208284031215620002c657600080fd5b81518015158114620002ac57600080fd5b600060ff821660ff811415620002fd57634e487b7160e01b600052601160045260246000fd5b60010192915050565b611f1380620003166000396000f3fe60806040526004361061009a5760003560e01c80635fcbd285116100615780635fcbd2851461015f578063747142b7146101975780638119c065146101b7578063c05b3275146101d7578063d5914c45146101ea578063fc21e442146101fd57005b8063098d3228146100a35780631b9a1f3d146100cc5780632e52d606146100ec5780632e9f79d51461011f57806357300a8b1461013f57005b366100a157005b005b3480156100af57600080fd5b506100b960001981565b6040519081526020015b60405180910390f35b3480156100d857600080fd5b506100a16100e7366004611912565b61021d565b3480156100f857600080fd5b5060015461010d90600160a01b900460ff1681565b60405160ff90911681526020016100c3565b34801561012b57600080fd5b506100a161013a3660046119a3565b610436565b34801561014b57600080fd5b506100a161015a366004611912565b610736565b34801561016b57600080fd5b5060015461017f906001600160a01b031681565b6040516001600160a01b0390911681526020016100c3565b3480156101a357600080fd5b506100a16101b2366004611a43565b610953565b3480156101c357600080fd5b5060005461017f906001600160a01b031681565b6100a16101e5366004611afd565b610e29565b6100b96101f8366004611b43565b610f63565b34801561020957600080fd5b506100a1610218366004611b85565b61117f565b6001546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610266573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061028a9190611bb2565b60008054604051634d49e87d60e01b815292935090916001600160a01b0390911690634d49e87d906102c89088908890889060001990600401611bcb565b6020604051808303816000875af11580156102e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061030b9190611bb2565b6001546040516370a0823160e01b81523060048201529192506000916001600160a01b03909116906370a0823190602401602060405180830381865afa158015610359573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061037d9190611bb2565b90506103ab604051806060016040528060218152602001611ebd602191396103a5838661148c565b84611498565b6103b5818461148c565b821461042e5760405162461bcd60e51b815260206004820152603a60248201527f6164644c6971756964697479282927732072657475726e2076616c756520646f60448201527f6573206e6f74206d61746368206d696e74656420616d6f756e7400000000000060648201526084015b60405180910390fd5b505050505050565b6000805460405162415c3360e91b815260ff851660048201526001600160a01b03909116906382b8660090602401602060405180830381865afa158015610481573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104a59190611c14565b6040516370a0823160e01b81523060048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa1580156104eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061050f9190611bb2565b600080546040516301f1d0ab60e51b81526004810188905260ff8716602482015260448101869052600019606482015292935090916001600160a01b0390911690633e3a1560906084016020604051808303816000875af1158015610578573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061059c9190611bb2565b6000805460405162415c3360e91b815260ff8816600482015292935090916001600160a01b03909116906382b8660090602401602060405180830381865afa1580156105ec573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106109190611c14565b6040516370a0823160e01b81523060048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa158015610656573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061067a9190611bb2565b90506106a26040518060600160405280602c8152602001611e40602c91396103a5838661148c565b6106ac818461148c565b821461042e5760405162461bcd60e51b815260206004820152604d60248201527f72656d6f76654c69717569646974794f6e65546f6b656e28292773207265747560448201527f726e2076616c756520646f6573206e6f74206d6174636820726563656976656460648201526c081d1bdad95b88185b5bdd5b9d609a1b608482015260a401610425565b6001546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa15801561077f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107a39190611bb2565b60008054604051632133766f60e21b815292935090916001600160a01b03909116906384cdd9bc906107e19088908890889060001990600401611bcb565b6020604051808303816000875af1158015610800573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108249190611bb2565b6001546040516370a0823160e01b81523060048201529192506000916001600160a01b03909116906370a0823190602401602060405180830381865afa158015610872573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108969190611bb2565b90506108be6040518060600160405280602d8152602001611e6c602d91396103a5858461148c565b6108c8838261148c565b821461042e5760405162461bcd60e51b815260206004820152604e60248201527f72656d6f76654c6971756964697479496d62616c616e6365282927732072657460448201527f75726e2076616c756520646f6573206e6f74206d61746368206275726e65642060648201526d1b1c151bdad95b88185b5bdd5b9d60921b608482015260a401610425565b600154600090600160a01b900460ff1667ffffffffffffffff81111561097b5761097b6119d8565b6040519080825280602002602001820160405280156109a4578160200160208202803683370190505b50600154909150600090600160a01b900460ff1667ffffffffffffffff8111156109d0576109d06119d8565b6040519080825280602002602001820160405280156109f9578160200160208202803683370190505b50905060005b60015460ff600160a01b90910481169082161015610b215760005460405162415c3360e91b815260ff831660048201526001600160a01b03909116906382b8660090602401602060405180830381865afa158015610a61573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a859190611c14565b6040516370a0823160e01b81523060048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa158015610acb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aef9190611bb2565b838260ff1681518110610b0457610b04611c31565b602090810291909101015280610b1981611c5d565b9150506109ff565b506000805460405163031cd52b60e41b81526001600160a01b03909116906331cd52b090610b59908890889060001990600401611c7d565b6000604051808303816000875af1158015610b78573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610ba09190810190611cd4565b905060005b60015460ff600160a01b9091048116908216101561042e5760005460405162415c3360e91b815260ff831660048201526001600160a01b03909116906382b8660090602401602060405180830381865afa158015610c07573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c2b9190611c14565b6040516370a0823160e01b81523060048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa158015610c71573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c959190611bb2565b838260ff1681518110610caa57610caa611c31565b602002602001018181525050610d3f604051806060016040528060248152602001611e9960249139610d1d868460ff1681518110610cea57610cea611c31565b6020026020010151868560ff1681518110610d0757610d07611c31565b602002602001015161148c90919063ffffffff16565b848460ff1681518110610d3257610d32611c31565b6020026020010151611498565b818160ff1681518110610d5457610d54611c31565b6020026020010151610d91858360ff1681518110610d7457610d74611c31565b6020026020010151858460ff1681518110610d0757610d07611c31565b14610e175760405162461bcd60e51b815260206004820152604a60248201527f72656d6f76654c6971756964697479282927732072657475726e2076616c756560448201527f20646f6573206e6f74206d6174636820726563656976656420616d6f756e7473606482015269206f6620746f6b656e7360b01b608482015260a401610425565b80610e2181611c5d565b915050610ba5565b6001600160a01b0380851660008181526002602052604080822080549488166001600160a01b031995861681179091558252902080549092168117909155610ea857813414610ea35760405162461bcd60e51b815260206004820152600660248201526521736565644160d01b6044820152606401610425565b610eb4565b610eb4843330856114e4565b6001600160a01b038316610eff57803414610efa5760405162461bcd60e51b815260206004820152600660248201526510b9b2b2b22160d11b6044820152606401610425565b610f0b565b610f0b833330846114e4565b604080516001600160a01b03808716825285166020820152908101839052606081018290527fd569a23a8cff45c641c5d5e4fb55b5e15e918f9acf0fc42b4909adc31f5f806c9060800160405180910390a150505050565b6001600160a01b038281166000908152600260205260408120549091838116911614610fba5760405162461bcd60e51b815260206004820152600660248201526502173657475760d41b6044820152606401610425565b6001600160a01b03821615801561100957844710156110045760405162461bcd60e51b8152600401610425906020808252600490820152630858985b60e21b604082015260600190565b6110aa565b6040516370a0823160e01b815230600482015285906001600160a01b038516906370a0823190602401602060405180830381865afa15801561104f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110739190611bb2565b10156110aa5760405162461bcd60e51b8152600401610425906020808252600490820152630858985b60e21b604082015260600190565b6001600160a01b0384166110f5578434146110f05760405162461bcd60e51b815260040161042590602080825260049082015263085d985b60e21b604082015260600190565b611101565b611101843330886114e4565b8015611116576111113386611555565b611121565b61112183338761166e565b604080516001600160a01b03808716825285166020820152908101869052606081018690527fa078c4190abe07940190effc1846be0ccf03ad6007bc9e93f9697d0b460befbb9060800160405180910390a1849150505b9392505050565b6000805460405162415c3360e91b815260ff861660048201526001600160a01b03909116906382b8660090602401602060405180830381865afa1580156111ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111ee9190611c14565b6040516370a0823160e01b81523060048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa158015611234573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112589190611bb2565b600080546040516348b4aac360e11b815260ff808a16600483015288166024820152604481018790526064810186905242608482015292935090916001600160a01b039091169063916955869060a4016020604051808303816000875af11580156112c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112eb9190611bb2565b6000805460405162415c3360e91b815260ff8916600482015292935090916001600160a01b03909116906382b8660090602401602060405180830381865afa15801561133b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061135f9190611c14565b6040516370a0823160e01b81523060048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa1580156113a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113c99190611bb2565b60408051808201909152601981527f737761703a2045787065637465642025732c20676f7420257300000000000000602082015290915061140e906103a5838661148c565b611418818461148c565b82146114835760405162461bcd60e51b815260206004820152603460248201527f73776170282927732072657475726e2076616c756520646f6573206e6f74206d604482015273185d18da081c9958d95a5d995908185b5bdd5b9d60621b6064820152608401610425565b50505050505050565b60006111788284611d5a565b6114df8383836040516024016114b093929190611dc9565b60408051601f198184030181529190526020810180516001600160e01b031663969cdd0360e01b17905261169e565b505050565b6040516001600160a01b038085166024830152831660448201526064810182905261154f9085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526116bf565b50505050565b804710156115a55760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e63650000006044820152606401610425565b6000826001600160a01b03168260405160006040518083038185875af1925050503d80600081146115f2576040519150601f19603f3d011682016040523d82523d6000602084013e6115f7565b606091505b50509050806114df5760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d617920686176652072657665727465640000000000006064820152608401610425565b6040516001600160a01b0383166024820152604481018290526114df90849063a9059cbb60e01b90606401611518565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b6000611714826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166117919092919063ffffffff16565b8051909150156114df57808060200190518101906117329190611dee565b6114df5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610425565b60606117a084846000856117a8565b949350505050565b6060824710156118095760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610425565b6001600160a01b0385163b6118605760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610425565b600080866001600160a01b0316858760405161187c9190611e10565b60006040518083038185875af1925050503d80600081146118b9576040519150601f19603f3d011682016040523d82523d6000602084013e6118be565b606091505b50915091506118ce8282866118d9565b979650505050505050565b606083156118e8575081611178565b8251156118f85782518084602001fd5b8160405162461bcd60e51b81526004016104259190611e2c565b60008060006040848603121561192757600080fd5b833567ffffffffffffffff8082111561193f57600080fd5b818601915086601f83011261195357600080fd5b81358181111561196257600080fd5b8760208260051b850101111561197757600080fd5b6020928301989097509590910135949350505050565b803560ff8116811461199e57600080fd5b919050565b6000806000606084860312156119b857600080fd5b833592506119c86020850161198d565b9150604084013590509250925092565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715611a1757611a176119d8565b604052919050565b600067ffffffffffffffff821115611a3957611a396119d8565b5060051b60200190565b60008060408385031215611a5657600080fd5b8235915060208084013567ffffffffffffffff811115611a7557600080fd5b8401601f81018613611a8657600080fd5b8035611a99611a9482611a1f565b6119ee565b81815260059190911b82018301908381019088831115611ab857600080fd5b928401925b82841015611ad657833582529284019290840190611abd565b80955050505050509250929050565b6001600160a01b0381168114611afa57600080fd5b50565b60008060008060808587031215611b1357600080fd5b8435611b1e81611ae5565b93506020850135611b2e81611ae5565b93969395505050506040820135916060013590565b600080600060608486031215611b5857600080fd5b833592506020840135611b6a81611ae5565b91506040840135611b7a81611ae5565b809150509250925092565b60008060008060808587031215611b9b57600080fd5b611ba48561198d565b9350611b2e6020860161198d565b600060208284031215611bc457600080fd5b5051919050565b6060808252810184905260006001600160fb1b03851115611beb57600080fd5b8460051b8087608085013760009083016080019081526020830194909452506040015292915050565b600060208284031215611c2657600080fd5b815161117881611ae5565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff811415611c7457611c74611c47565b60010192915050565b6000606082018583526020606081850152818651808452608086019150828801935060005b81811015611cbe57845183529383019391830191600101611ca2565b5050809350505050826040830152949350505050565b60006020808385031215611ce757600080fd5b825167ffffffffffffffff811115611cfe57600080fd5b8301601f81018513611d0f57600080fd5b8051611d1d611a9482611a1f565b81815260059190911b82018301908381019087831115611d3c57600080fd5b928401925b828410156118ce57835182529284019290840190611d41565b600082821015611d6c57611d6c611c47565b500390565b60005b83811015611d8c578181015183820152602001611d74565b8381111561154f5750506000910152565b60008151808452611db5816020860160208601611d71565b601f01601f19169290920160200192915050565b606081526000611ddc6060830186611d9d565b60208301949094525060400152919050565b600060208284031215611e0057600080fd5b8151801515811461117857600080fd5b60008251611e22818460208701611d71565b9190910192915050565b6020815260006111786020830184611d9d56fe72656d6f76654c69717569646974794f6e65546f6b656e3a2045787065637465642025732c20676f7420257372656d6f76654c6971756964697479496d62616c616e63653a2045787065637465642025732c20676f7420257372656d6f76654c69717569646974793a2045787065637465642025732c20676f742025736164644c69717569646974793a2045787065637465642025732c20676f74202573a26469706673582212206223556fbd2fe37f2cc7301788a1e53742fefe46e66f27decbd460e179f0e88c64736f6c634300080b0033";

type TestStableSwapConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestStableSwapConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestStableSwap__factory extends ContractFactory {
  constructor(...args: TestStableSwapConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "TestStableSwap";
  }

  deploy(
    swapContract: string,
    lpTokenContract: string,
    numOfTokens: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TestStableSwap> {
    return super.deploy(
      swapContract,
      lpTokenContract,
      numOfTokens,
      overrides || {}
    ) as Promise<TestStableSwap>;
  }
  getDeployTransaction(
    swapContract: string,
    lpTokenContract: string,
    numOfTokens: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      swapContract,
      lpTokenContract,
      numOfTokens,
      overrides || {}
    );
  }
  attach(address: string): TestStableSwap {
    return super.attach(address) as TestStableSwap;
  }
  connect(signer: Signer): TestStableSwap__factory {
    return super.connect(signer) as TestStableSwap__factory;
  }
  static readonly contractName: "TestStableSwap";
  public readonly contractName: "TestStableSwap";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestStableSwapInterface {
    return new utils.Interface(_abi) as TestStableSwapInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestStableSwap {
    return new Contract(address, _abi, signerOrProvider) as TestStableSwap;
  }
}
