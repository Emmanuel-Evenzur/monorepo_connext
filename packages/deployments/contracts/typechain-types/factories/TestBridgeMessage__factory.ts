/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TestBridgeMessage,
  TestBridgeMessageInterface,
} from "../TestBridgeMessage";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "_decimals",
        type: "uint8",
      },
    ],
    name: "testFormatDetailsHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_tokenId",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "_action",
        type: "bytes",
      },
      {
        internalType: "enum BridgeMessage.Types",
        name: "_idType",
        type: "uint8",
      },
      {
        internalType: "enum BridgeMessage.Types",
        name: "_actionType",
        type: "uint8",
      },
    ],
    name: "testFormatMessage",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "_id",
        type: "bytes32",
      },
    ],
    name: "testFormatTokenId",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_to",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_amnt",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_detailsHash",
        type: "bytes32",
      },
      {
        internalType: "bool",
        name: "_enableFast",
        type: "bool",
      },
      {
        internalType: "bytes32",
        name: "_externalId",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_externalHash",
        type: "bytes32",
      },
    ],
    name: "testFormatTransfer",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_action",
        type: "bytes",
      },
    ],
    name: "testIsFastTransfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_action",
        type: "bytes",
      },
    ],
    name: "testIsTransfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_action",
        type: "bytes",
      },
      {
        internalType: "enum BridgeMessage.Types",
        name: "_t",
        type: "uint8",
      },
    ],
    name: "testIsValidAction",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes",
      },
    ],
    name: "testIsValidMessageLength",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes",
      },
    ],
    name: "testMessageType",
    outputs: [
      {
        internalType: "enum BridgeMessage.Types",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes",
      },
    ],
    name: "testMustBeMessage",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes",
      },
    ],
    name: "testSplitMessage",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_tokenId",
        type: "bytes",
      },
    ],
    name: "testSplitTokenId",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_transfer",
        type: "bytes",
      },
    ],
    name: "testSplitTransfer",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506119bd806100206000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80638cdce7e21161008c578063cd9aeee611610066578063cd9aeee61461022b578063d70e2f391461024b578063dfd9d1db1461025e578063f9dd616a1461027157600080fd5b80638cdce7e2146101f2578063932cbc9814610205578063b81726a21461021857600080fd5b806312bdd731146100d45780631b083da5146100fd57806348528b0c1461013b5780636c18a1851461015c5780637d5bf43d146101ae5780638213d910146101cf575b600080fd5b6100e76100e23660046114b2565b610284565b6040516100f491906114fd565b60405180910390f35b61011061010b3660046114b2565b6102ab565b6040805163ffffffff909416845260208401929092526001600160a01b0316908201526060016100f4565b61014e6101493660046114b2565b6102f1565b6040516100f4929190611581565b61016f61016a3660046114b2565b610349565b6040805160ff909716875260208701959095526001600160a01b03909316938501939093526060840152608083019190915260a082015260c0016100f4565b6101c16101bc3660046115a6565b6103c1565b6040519081526020016100f4565b6101e26101dd366004611638565b6103d6565b60405190151581526020016100f4565b6101e26102003660046114b2565b6103f5565b6101e26102133660046114b2565b610410565b6101e26102263660046114b2565b610430565b61023e610239366004611686565b610448565b6040516100f491906116bb565b61023e6102593660046116ce565b610462565b61023e61026c366004611726565b610480565b61023e61027f3660046114b2565b6104c5565b600080610290836104e1565b90506102a461029f8483610504565b610528565b9392505050565b60008080806102bb856001610504565b905060006102c882610549565b905060006102d583610574565b905060006102e284610596565b92989197509195509350505050565b606080600061030360025b8590610504565b90506000610310826105b6565b9050600061031d836105da565b905061032e62ffffff198316610632565b61033d62ffffff198316610632565b94509450505050915091565b600080808080808061035c886004610504565b9050600061036982610682565b9050600061037683610696565b90506000610383846106ab565b90506000610390856106be565b9050600061039d866106d3565b905060006103aa876106e8565b959e949d50929b5090995097509195509350505050565b60006103ce8484846106fd565b949350505050565b60006102a46103f08360048111156102fc576102fc6114e7565b610739565b60008061040560045b8490610504565b90506102a48161074f565b60008061041c836104e1565b90506102a461042b8483610504565b61075c565b60008061043d60036103fe565b90506102a48161077f565b60606102a4610457848461078c565b62ffffff1916610632565b60606104756104578888888888886107e8565b979650505050505050565b606060006104a0846004811115610499576104996114e7565b8790610504565b905060006104b9846004811115610499576104996114e7565b9050610475828261083d565b606060006104d360026103fe565b90506102a461045782610911565b6000816024815181106104f6576104f66117ab565b016020015160f81c92915050565b81516000906020840161051f64ffffffffff8516828461092a565b95945050505050565b600060d882901c60ff166004811115610543576105436114e7565b92915050565b6000816001610560815b62ffffff1984169061096e565b506103ce62ffffff19851660006004610a47565b600081600161058281610553565b506103ce62ffffff19851660046020610a77565b60008160016105a481610553565b506103ce62ffffff1985166010610bd0565b60008160026105c481610553565b506103ce62ffffff198516600060246001610bde565b60008160026105e881610553565b5060006106036024601887901c6001600160601b03166117d7565b9050600061061086610c4d565b60ff16905061062862ffffff19871660248484610bde565b9695505050505050565b606060008061064a8460181c6001600160601b031690565b60405193508392506001600160601b031690506106718461066c8460206117ee565b610c62565b508181016020016040529052919050565b600061054362ffffff198316826001610a47565b600061054362ffffff19831660016020610a77565b600061054362ffffff198316600d610bd0565b600061054362ffffff19831660216020610a47565b600061054362ffffff19831660616020610a77565b600061054362ffffff19831660816020610a77565b60008351848451858560405160200161071a959493929190611806565b6040516020818303038152906040528051906020012090509392505050565b60006107448261077f565b806105435750610543825b6000610543826004610dba565b6000601882901c6001600160601b031661077860a160246117ee565b1492915050565b6000610543826003610dba565b60006102a460016040516001600160e01b031960e087901b166020820152602481018590526107d2906000906044015b60408051601f1981840301815291905290610504565b6301000000600160d81b031660d89190911b1790565b600080846107f75760036107fa565b60045b9050610831816004811115610811576108116114e7565b6107d26000848c8c8c8b8b6040516020016107bc96959493929190611866565b98975050505050505050565b606082600161084b81610553565b5061085584610739565b6108905760405162461bcd60e51b815260206004820152600760248201526610b0b1ba34b7b760c91b60448201526064015b60405180910390fd5b60408051600280825260608201835260009260208301908036833701905050905085816000815181106108c5576108c56117ab565b602002602001019062ffffff1916908162ffffff19168152505084816001815181106108f3576108f36117ab565b62ffffff199092166020928302919091019091015261062881610e19565b600061054361091f83610e75565b62ffffff1916610ea7565b6000806109378484610f02565b9050604051811115610947575060005b806109595762ffffff199150506102a4565b5050606092831b9190911790911b1760181b90565b600061097a8383610f0e565b610a4057600061099961098d8560d81c90565b64ffffffffff16610f31565b91505060006109ae8464ffffffffff16610f31565b6040517f5479706520617373657274696f6e206661696c65642e20476f7420307800000060208201526001600160b01b031960b086811b8216603d8401526c05c408af0e0cac6e8cac84060f609b1b604784015283901b16605482015290925060009150605e0160405160208183030381529060405290508060405162461bcd60e51b815260040161088791906116bb565b5090919050565b6000610a548260206118b4565b610a5f9060086118d7565b60ff16610a6d858585610a77565b901c949350505050565b600060ff8216610a89575060006102a4565b610a9c8460181c6001600160601b031690565b6001600160601b0316610ab28460ff8516610f02565b1115610b1657610afd610ace8560781c6001600160601b031690565b6001600160601b0316610aea8660181c6001600160601b031690565b6001600160601b0316858560ff16610ff1565b60405162461bcd60e51b815260040161088791906116bb565b60208260ff161115610b905760405162461bcd60e51b815260206004820152603a60248201527f54797065644d656d566965772f696e646578202d20417474656d70746564207460448201527f6f20696e646578206d6f7265207468616e2033322062797465730000000000006064820152608401610887565b600882026000610ba98660781c6001600160601b031690565b6001600160601b031690506000600160ff1b60001984011d91909501511695945050505050565b60006102a483836014610a47565b600080610bf48660781c6001600160601b031690565b6001600160601b03169050610c088661111b565b610c1c85610c168489610f02565b90610f02565b1115610c2f5762ffffff199150506103ce565b610c398186610f02565b90506106288364ffffffffff16828661092a565b600061054362ffffff19831660246001610a47565b600062ffffff198084161415610ccb5760405162461bcd60e51b815260206004820152602860248201527f54797065644d656d566965772f636f7079546f202d204e756c6c20706f696e7460448201526732b9103232b932b360c11b6064820152608401610887565b610cd48361115c565b610d345760405162461bcd60e51b815260206004820152602b60248201527f54797065644d656d566965772f636f7079546f202d20496e76616c696420706f60448201526a34b73a32b9103232b932b360a91b6064820152608401610887565b6000610d498460181c6001600160601b031690565b6001600160601b031690506000610d698560781c6001600160601b031690565b6001600160601b031690506000604051905084811115610d895760206060fd5b8285848460045afa50610628610d9f8760d81c90565b64ffffffffff60601b606091821b168717901b841760181b90565b6000816004811115610dce57610dce6114e7565b60ff16610dda84610682565b60ff161480156102a45750816004811115610df757610df76114e7565b610e0084610528565b6004811115610e1157610e116114e7565b149392505050565b6040516060906000610e3584610e308460206117ee565b61119a565b90506000610e4c8260181c6001600160601b031690565b6001600160601b031690506000610e6283611236565b9184525082016020016040525092915050565b6000610e808261075c565b15610e9d576301000000600160d81b038216600160d91b17610543565b62ffffff19610543565b6000610eb28261115c565b610efe5760405162461bcd60e51b815260206004820152601960248201527f56616c696469747920617373657274696f6e206661696c6564000000000000006044820152606401610887565b5090565b60006102a482846117ee565b60008164ffffffffff16610f228460d81c90565b64ffffffffff16149392505050565b600080601f5b600f8160ff161115610f8f576000610f508260086118d7565b60ff1685901c9050610f618161124c565b61ffff16841793508160ff16601014610f7c57601084901b93505b50610f886001826118b4565b9050610f37565b50600f5b60ff8160ff161015610feb576000610fac8260086118d7565b60ff1685901c9050610fbd8161124c565b61ffff16831792508160ff16600014610fd857601083901b92505b50610fe46001826118b4565b9050610f93565b50915091565b60606000610ffe86610f31565b915050600061100c86610f31565b915050600061101a86610f31565b915050600061102886610f31565b604080517f54797065644d656d566965772f696e646578202d204f76657272616e20746865602082015274040ecd2caee5c40a6d8d2c6ca40d2e640c2e84060f605b1b818301526001600160d01b031960d098891b811660558301526e040eed2e8d040d8cadccee8d04060f608b1b605b830181905297891b8116606a8301527f2e20417474656d7074656420746f20696e646578206174206f666673657420306070830152600f60fb1b609083015295881b861660918201526097810196909652951b90921660a68401525050601760f91b60ac8201528151808203608d01815260ad90910190915295945050505050565b60006111308260181c6001600160601b031690565b6111438360781c6001600160601b031690565b61114d9190611900565b6001600160601b031692915050565b60006111688260d81c90565b64ffffffffff1664ffffffffff141561118357506000919050565b600061118e8361111b565b60405110199392505050565b6000604051828111156111ad5760206060fd5b506000805b84518110156112265760008582815181106111cf576111cf6117ab565b602002602001015190506111e981848761066c91906117ee565b506111fd8160181c6001600160601b031690565b611210906001600160601b0316846117ee565b925050808061121e9061192b565b9150506111b2565b50606083901b811760181b6103ce565b60006112418261127e565b610543906020611946565b600061125e60048360ff16901c6112b3565b60ff1661ffff919091161760081b611275826112b3565b60ff1617919050565b600060206112a9602061129a8560181c6001600160601b031690565b6001600160601b031690610f02565b6105439190611965565b600060f08083179060ff821614156112ce5750603092915050565b8060ff1660f114156112e35750603192915050565b8060ff1660f214156112f85750603292915050565b8060ff1660f3141561130d5750603392915050565b8060ff1660f414156113225750603492915050565b8060ff1660f514156113375750603592915050565b8060ff1660f6141561134c5750603692915050565b8060ff1660f714156113615750603792915050565b8060ff1660f814156113765750603892915050565b8060ff1660f9141561138b5750603992915050565b8060ff1660fa14156113a05750606192915050565b8060ff1660fb14156113b55750606292915050565b8060ff1660fc14156113ca5750606392915050565b8060ff1660fd14156113df5750606492915050565b8060ff1660fe14156113f45750606592915050565b8060ff1660ff14156114095750606692915050565b50919050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261143657600080fd5b813567ffffffffffffffff808211156114515761145161140f565b604051601f8301601f19908116603f011681019082821181831017156114795761147961140f565b8160405283815286602085880101111561149257600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000602082840312156114c457600080fd5b813567ffffffffffffffff8111156114db57600080fd5b6103ce84828501611425565b634e487b7160e01b600052602160045260246000fd5b602081016005831061151f57634e487b7160e01b600052602160045260246000fd5b91905290565b60005b83811015611540578181015183820152602001611528565b8381111561154f576000848401525b50505050565b6000815180845261156d816020860160208601611525565b601f01601f19169290920160200192915050565b6040815260006115946040830185611555565b828103602084015261051f8185611555565b6000806000606084860312156115bb57600080fd5b833567ffffffffffffffff808211156115d357600080fd5b6115df87838801611425565b945060208601359150808211156115f557600080fd5b5061160286828701611425565b925050604084013560ff8116811461161957600080fd5b809150509250925092565b80356005811061163357600080fd5b919050565b6000806040838503121561164b57600080fd5b823567ffffffffffffffff81111561166257600080fd5b61166e85828601611425565b92505061167d60208401611624565b90509250929050565b6000806040838503121561169957600080fd5b823563ffffffff811681146116ad57600080fd5b946020939093013593505050565b6020815260006102a46020830184611555565b60008060008060008060c087890312156116e757600080fd5b8635955060208701359450604087013593506060870135801515811461170c57600080fd5b9598949750929560808101359460a0909101359350915050565b6000806000806080858703121561173c57600080fd5b843567ffffffffffffffff8082111561175457600080fd5b61176088838901611425565b9550602087013591508082111561177657600080fd5b5061178387828801611425565b93505061179260408601611624565b91506117a060608601611624565b905092959194509250565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000828210156117e9576117e96117c1565b500390565b60008219821115611801576118016117c1565b500190565b8581526000855161181e816020850160208a01611525565b8083019050856020820152845161183c816040840160208901611525565b60f89490941b6001600160f81b031916604091909401908101939093525050604101949350505050565b60006005881061188657634e487b7160e01b600052602160045260246000fd5b5060f89690961b86526001860194909452602185019290925260418401526061830152608182015260a10190565b600060ff821660ff8416808210156118ce576118ce6117c1565b90039392505050565b600060ff821660ff84168160ff04811182151516156118f8576118f86117c1565b029392505050565b60006001600160601b03808316818516808303821115611922576119226117c1565b01949350505050565b600060001982141561193f5761193f6117c1565b5060010190565b6000816000190483118215151615611960576119606117c1565b500290565b60008261198257634e487b7160e01b600052601260045260246000fd5b50049056fea26469706673582212209d216868dba4f851aeb4c72e91bc06603e23b5ad116bf4e24961fc9be4919cec64736f6c634300080b0033";

type TestBridgeMessageConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestBridgeMessageConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestBridgeMessage__factory extends ContractFactory {
  constructor(...args: TestBridgeMessageConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "TestBridgeMessage";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TestBridgeMessage> {
    return super.deploy(overrides || {}) as Promise<TestBridgeMessage>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TestBridgeMessage {
    return super.attach(address) as TestBridgeMessage;
  }
  connect(signer: Signer): TestBridgeMessage__factory {
    return super.connect(signer) as TestBridgeMessage__factory;
  }
  static readonly contractName: "TestBridgeMessage";
  public readonly contractName: "TestBridgeMessage";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestBridgeMessageInterface {
    return new utils.Interface(_abi) as TestBridgeMessageInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestBridgeMessage {
    return new Contract(address, _abi, signerOrProvider) as TestBridgeMessage;
  }
}
