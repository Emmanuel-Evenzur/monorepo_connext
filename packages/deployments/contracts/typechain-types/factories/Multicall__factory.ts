/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Multicall, MulticallInterface } from "../Multicall";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "target",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
        ],
        internalType: "struct Multicall.Call[]",
        name: "calls",
        type: "tuple[]",
      },
    ],
    name: "aggregate",
    outputs: [
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
      {
        internalType: "bytes[]",
        name: "returnData",
        type: "bytes[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506104ba806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063252dba4214610030575b600080fd5b61004361003e36600461020a565b61005a565b6040516100519291906103a7565b60405180910390f35b8051439060609067ffffffffffffffff8111156100795761007961019a565b6040519080825280602002602001820160405280156100ac57816020015b60608152602001906001900390816100975790505b50905060005b8351811015610194576000808583815181106100d0576100d0610429565b6020026020010151600001516001600160a01b03168684815181106100f7576100f7610429565b602002602001015160200151604051610110919061043f565b6000604051808303816000865af19150503d806000811461014d576040519150601f19603f3d011682016040523d82523d6000602084013e610152565b606091505b50915091508161016157600080fd5b8084848151811061017457610174610429565b60200260200101819052505050808061018c9061045b565b9150506100b2565b50915091565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff811182821017156101d3576101d361019a565b60405290565b604051601f8201601f1916810167ffffffffffffffff811182821017156102025761020261019a565b604052919050565b6000602080838503121561021d57600080fd5b823567ffffffffffffffff8082111561023557600080fd5b818501915085601f83011261024957600080fd5b81358181111561025b5761025b61019a565b8060051b61026a8582016101d9565b918252838101850191858101908984111561028457600080fd5b86860192505b8383101561036a578235858111156102a25760008081fd5b86016040601f19828d0381018213156102bb5760008081fd5b6102c36101b0565b838b01356001600160a01b03811681146102dd5760008081fd5b815283830135898111156102f15760008081fd5b8085019450508d603f8501126103075760008081fd5b8a8401358981111561031b5761031b61019a565b61032b8c84601f840116016101d9565b92508083528e848287010111156103425760008081fd5b808486018d85013760009083018c0152808b019190915284525050918601919086019061028a565b9998505050505050505050565b60005b8381101561039257818101518382015260200161037a565b838111156103a1576000848401525b50505050565b600060408201848352602060408185015281855180845260608601915060608160051b870101935082870160005b8281101561041b57878603605f19018452815180518088526103fc81888a01898501610377565b601f01601f1916969096018501955092840192908401906001016103d5565b509398975050505050505050565b634e487b7160e01b600052603260045260246000fd5b60008251610451818460208701610377565b9190910192915050565b600060001982141561047d57634e487b7160e01b600052601160045260246000fd5b506001019056fea2646970667358221220fa619233df0dccb885f587ef3070eb95f19977c6ed0001274a36efb03499165764736f6c634300080b0033";

type MulticallConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MulticallConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Multicall__factory extends ContractFactory {
  constructor(...args: MulticallConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Multicall";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Multicall> {
    return super.deploy(overrides || {}) as Promise<Multicall>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Multicall {
    return super.attach(address) as Multicall;
  }
  connect(signer: Signer): Multicall__factory {
    return super.connect(signer) as Multicall__factory;
  }
  static readonly contractName: "Multicall";
  public readonly contractName: "Multicall";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MulticallInterface {
    return new utils.Interface(_abi) as MulticallInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Multicall {
    return new Contract(address, _abi, signerOrProvider) as Multicall;
  }
}
