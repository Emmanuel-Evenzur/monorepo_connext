/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { FeeERC20, FeeERC20Interface } from "../FeeERC20";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "fee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    name: "setFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260016005553480156200001657600080fd5b5060408051808201825260098152682332b2902a37b5b2b760b91b6020808301918252835180850190945260078452660464545524332360cc1b90840152815191929162000067916003916200018a565b5080516200007d9060049060208401906200018a565b5050506200009c3369d3c21bcecceda1000000620000a260201b60201c565b62000294565b6001600160a01b038216620000fd5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b806002600082825462000111919062000230565b90915550506001600160a01b038216600090815260208190526040812080548392906200014090849062000230565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b828054620001989062000257565b90600052602060002090601f016020900481019282620001bc576000855562000207565b82601f10620001d757805160ff191683800117855562000207565b8280016001018555821562000207579182015b8281111562000207578251825591602001919060010190620001ea565b506200021592915062000219565b5090565b5b808211156200021557600081556001016200021a565b600082198211156200025257634e487b7160e01b600052601160045260246000fd5b500190565b600181811c908216806200026c57607f821691505b602082108114156200028e57634e487b7160e01b600052602260045260246000fd5b50919050565b610b6480620002a46000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806369fe0e2d11610097578063a457c2d711610066578063a457c2d7146101ee578063a9059cbb14610201578063dd62ed3e14610214578063ddca3f431461024d57600080fd5b806369fe0e2d1461019757806370a08231146101aa57806395d89b41146101d35780639dc29fac146101db57600080fd5b806323b872dd116100d357806323b872dd1461014d578063313ce56714610160578063395093511461016f57806340c10f191461018257600080fd5b806306fdde03146100fa578063095ea7b31461011857806318160ddd1461013b575b600080fd5b610102610256565b60405161010f9190610969565b60405180910390f35b61012b6101263660046109da565b6102e8565b604051901515815260200161010f565b6002545b60405190815260200161010f565b61012b61015b366004610a04565b610300565b6040516012815260200161010f565b61012b61017d3660046109da565b610335565b6101956101903660046109da565b610374565b005b6101956101a5366004610a40565b600555565b61013f6101b8366004610a59565b6001600160a01b031660009081526020819052604090205490565b610102610382565b6101956101e93660046109da565b610391565b61012b6101fc3660046109da565b61039b565b61012b61020f3660046109da565b610432565b61013f610222366004610a7b565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b61013f60055481565b60606003805461026590610aae565b80601f016020809104026020016040519081016040528092919081815260200182805461029190610aae565b80156102de5780601f106102b3576101008083540402835291602001916102de565b820191906000526020600020905b8154815290600101906020018083116102c157829003601f168201915b5050505050905090565b6000336102f6818585610450565b5060019392505050565b600080600554836103119190610aff565b905061031f85600554610575565b61032a8585836106bb565b506001949350505050565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091906102f6908290869061036f908790610b16565b610450565b61037e828261088a565b5050565b60606004805461026590610aae565b61037e8282610575565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909190838110156104255760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b61032a8286868403610450565b600080600554836104439190610aff565b90506102f63385836106bb565b6001600160a01b0383166104b25760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161041c565b6001600160a01b0382166105135760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161041c565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b0382166105d55760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b606482015260840161041c565b6001600160a01b038216600090815260208190526040902054818110156106495760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b606482015260840161041c565b6001600160a01b0383166000908152602081905260408120838303905560028054849290610678908490610aff565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001610568565b6001600160a01b03831661071f5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161041c565b6001600160a01b0382166107815760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161041c565b6001600160a01b038316600090815260208190526040902054818110156107f95760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161041c565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610830908490610b16565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161087c91815260200190565b60405180910390a350505050565b6001600160a01b0382166108e05760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161041c565b80600260008282546108f29190610b16565b90915550506001600160a01b0382166000908152602081905260408120805483929061091f908490610b16565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b600060208083528351808285015260005b818110156109965785810183015185820160400152820161097a565b818111156109a8576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b03811681146109d557600080fd5b919050565b600080604083850312156109ed57600080fd5b6109f6836109be565b946020939093013593505050565b600080600060608486031215610a1957600080fd5b610a22846109be565b9250610a30602085016109be565b9150604084013590509250925092565b600060208284031215610a5257600080fd5b5035919050565b600060208284031215610a6b57600080fd5b610a74826109be565b9392505050565b60008060408385031215610a8e57600080fd5b610a97836109be565b9150610aa5602084016109be565b90509250929050565b600181811c90821680610ac257607f821691505b60208210811415610ae357634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600082821015610b1157610b11610ae9565b500390565b60008219821115610b2957610b29610ae9565b50019056fea2646970667358221220a62d93c244a5c81871322772efc3337a55c31ca1253ac4dcfc7956121327825c64736f6c634300080b0033";

type FeeERC20ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FeeERC20ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FeeERC20__factory extends ContractFactory {
  constructor(...args: FeeERC20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "FeeERC20";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<FeeERC20> {
    return super.deploy(overrides || {}) as Promise<FeeERC20>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): FeeERC20 {
    return super.attach(address) as FeeERC20;
  }
  connect(signer: Signer): FeeERC20__factory {
    return super.connect(signer) as FeeERC20__factory;
  }
  static readonly contractName: "FeeERC20";
  public readonly contractName: "FeeERC20";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FeeERC20Interface {
    return new utils.Interface(_abi) as FeeERC20Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FeeERC20 {
    return new Contract(address, _abi, signerOrProvider) as FeeERC20;
  }
}
